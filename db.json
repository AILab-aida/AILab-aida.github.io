{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/android-chrome-192x192.png","path":"images/android-chrome-192x192.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/browserconfig.xml","path":"images/browserconfig.xml","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32.png","path":"images/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16.png","path":"images/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/safari-pinned-tab.svg","path":"images/safari-pinned-tab.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/site.webmanifest","path":"images/site.webmanifest","modified":0,"renderable":1},{"_id":"themes/next/source/images/mstile-150x150.png","path":"images/mstile-150x150.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/github-corner.svg","path":"images/github-corner.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/android-chrome-384x384.png","path":"images/android-chrome-384x384.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"31f29f84d7541424f387d1a09d1ad5d2ecfd3ae8","modified":1569737393815},{"_id":"source/CNAME","hash":"bbe0aa5bfc29141b6458b0d65935a67657c4df0e","modified":1569739148592},{"_id":"source/.DS_Store","hash":"269220f9fcf6c706c406a466e184c2ba77a88f3c","modified":1570521114471},{"_id":"themes/next/.DS_Store","hash":"9457f542cf2c3f2a50b9ecd64858fc6f50b0d0c4","modified":1569736818981},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1569736777734},{"_id":"themes/next/.all-contributorsrc","hash":"eddf04b4cc9241f5935f41173ee156e4a1ceba22","modified":1569736777734},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1569736777734},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1569736777735},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1569736777737},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1569736777737},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1569736777738},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1569736777738},{"_id":"themes/next/README.md","hash":"e0fcd99c0a6db47fe5739df32d6ab39c44c65196","modified":1569736777738},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1569736777739},{"_id":"themes/next/_config.yml","hash":"ae0ec97e000260a3331aab92f73cc0c5494c8c2f","modified":1569737372119},{"_id":"themes/next/gulpfile.js","hash":"94e80ca87826b90744618b00d08bc7e5eefbaef4","modified":1569736777744},{"_id":"themes/next/package.json","hash":"aca29ae07d4d4164ac260c2ae1e27d2ce6cd7ffe","modified":1569736777762},{"_id":"source/_posts/1.md","hash":"a978ff86335e41e0b88b54730e19339eba957109","modified":1569738470715},{"_id":"source/_posts/2.md","hash":"e4153de3472d0b06e0b80551697a9e2a7e09baf5","modified":1569738474834},{"_id":"source/_posts/flutter provider基础使用.md","hash":"a970ea53096776cc56e81477da146e13acf3e321","modified":1570617176542},{"_id":"source/_posts/UIAutomator2的使用.md","hash":"62a336055389c3401045eb2afb02d8000dc10082","modified":1570851055906},{"_id":"source/categories/index.md","hash":"8adef5d0b176c3f2004dd61fcbc2d2bf40f2b375","modified":1570850771533},{"_id":"source/about/index.md","hash":"98aaba3f145424bc83c61550991de1be3bac14c5","modified":1569738269226},{"_id":"source/tags/index.md","hash":"f1fc563dcbaa8ff85e9d30d7b371873f40b43732","modified":1569738282985},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1569736777735},{"_id":"themes/next/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1569736777736},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"fb80bb52a76dc9100d9524456f73c7a263c85437","modified":1569736777735},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"c1df2b2bd1541518407f1fab509bcd200fc9b11b","modified":1569736777736},{"_id":"themes/next/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1569736777736},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1569736777736},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"b09c85aa449f46bc025317ed196ec33a877f7c23","modified":1569736777736},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1569736777737},{"_id":"themes/next/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1569736777737},{"_id":"themes/next/.github/release-drafter.yml","hash":"f8a0ee0ad08e1493475dbb67b2957cd6afcafac0","modified":1569736777737},{"_id":"themes/next/.github/stale.yml","hash":"41bf97ee86b8940a0b2e754499ec77fd2b44b717","modified":1569736777737},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1569736777737},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1569736777739},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"20f8a3d7db6e797a5a3ed8c84837315cb8e09e5b","modified":1569736777739},{"_id":"themes/next/docs/AUTHORS.md","hash":"42119925459b70360567f12dd29f6112d9897e37","modified":1569736777739},{"_id":"themes/next/docs/DATA-FILES.md","hash":"a85ae0f3a9655eea9acd3f6209b72eb002f2058d","modified":1569736777740},{"_id":"themes/next/docs/INSTALLATION.md","hash":"5385246ab4756e3e26ec9fe1f6a6759812177cc4","modified":1569736777740},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1569736777740},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"1fb2c852fad03b73882069f1ec0659db2e1f2da0","modified":1569736777740},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"a07ca23c38f6e4dddd4b74016b30e88cd3796f75","modified":1569736777741},{"_id":"themes/next/docs/MATH.md","hash":"aa90364b1ac069b4f8cfdb48b4879311856224e6","modified":1569736777740},{"_id":"themes/next/languages/de.yml","hash":"3d8920676d89494d7d1c74d4238680151ea6d9df","modified":1569736777744},{"_id":"themes/next/languages/default.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1569736777744},{"_id":"themes/next/languages/en.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1569736777744},{"_id":"themes/next/languages/es.yml","hash":"7dc1d7d5ea1078ee3b9bc8e0e8d0f15f52a7a4aa","modified":1569736777745},{"_id":"themes/next/languages/fa.yml","hash":"269b5cb70774485d7dbbcf98eec72c9e84e135b2","modified":1569736777745},{"_id":"themes/next/languages/fr.yml","hash":"dfdcfa536c40d06125dff373d042c50e08fcafd8","modified":1569736777745},{"_id":"themes/next/languages/hu.yml","hash":"e4a5f43fb45acd992def3de3b600aa4df4c95ed7","modified":1569736777745},{"_id":"themes/next/languages/ja.yml","hash":"4f929842b3d6aaed709ea99da679d3910ee184e5","modified":1569736777746},{"_id":"themes/next/languages/id.yml","hash":"5665dece8435964a27b5061d7283f339f84721f0","modified":1569736777745},{"_id":"themes/next/languages/it.yml","hash":"311597c620059dbb99474f19b2110a4485ecf70b","modified":1569736777746},{"_id":"themes/next/languages/ko.yml","hash":"5f5194dd0f5a3c8484e7668bce6fbe23340e531a","modified":1569736777746},{"_id":"themes/next/languages/nl.yml","hash":"561c77ca68e9d51a5ce8c89d3361fdb033c96bba","modified":1569736777746},{"_id":"themes/next/languages/pt-BR.yml","hash":"13b579911e44a8b213e1860f9a50c341be1bf95e","modified":1569736777746},{"_id":"themes/next/languages/pt.yml","hash":"af9d9b581dca45ab9789ca41d3492883a911e383","modified":1569736777747},{"_id":"themes/next/languages/tr.yml","hash":"39caf8a3677fd6dfbd523e73f8482a509e87b603","modified":1569736777747},{"_id":"themes/next/languages/ru.yml","hash":"b485c57dd7b447406dafd0dcfdfc9356266708c9","modified":1569736777747},{"_id":"themes/next/languages/uk.yml","hash":"4cbdbb0ed09487c9b435be21ac35f62182f53283","modified":1569736777747},{"_id":"themes/next/languages/vi.yml","hash":"3c6bb816ee7278afcddac06998c9ebe47ee19aef","modified":1569736777747},{"_id":"themes/next/languages/zh-CN.yml","hash":"582162038602eb9ff0c36460cdea8f0e4b0b20e9","modified":1569736777747},{"_id":"themes/next/languages/zh-HK.yml","hash":"93d10d6e448c519004b09b11fba980b5036c93af","modified":1569736777748},{"_id":"themes/next/layout/_layout.swig","hash":"fe827c1a57e4af456a796a104a967f61778cc767","modified":1569736777748},{"_id":"themes/next/languages/zh-TW.yml","hash":"ae2aa1c6ec1a5a01a3a3bde17bcc3a82f9a35fa7","modified":1569736777748},{"_id":"themes/next/layout/category.swig","hash":"38433a9de15f019267c9130e243e14343fb9bc3d","modified":1569736777761},{"_id":"themes/next/layout/archive.swig","hash":"72b4e0786668bc61c11eafa12da5d75272b93b61","modified":1569736777761},{"_id":"themes/next/layout/index.swig","hash":"20e776e8863f662c154bb765aaa0a1a22bf78126","modified":1569736777761},{"_id":"themes/next/layout/page.swig","hash":"27c0b961fff9c1afc3671c5678cc9bca76cb51d1","modified":1569736777761},{"_id":"themes/next/layout/post.swig","hash":"0c3b34a6832b8e33574edc17095344f9e0bea74f","modified":1569736777762},{"_id":"themes/next/layout/tag.swig","hash":"153fb65e710a9643634aea4813431e92c11d09fe","modified":1569736777762},{"_id":"themes/next/source/.DS_Store","hash":"1de161832c0f38ed49acd6bb53c067cd46cbbda4","modified":1569744742809},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"a8ebd4e6a54f376f851208e710e015448d7be9e0","modified":1569736777735},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"4478f8a445c8dc2c550ca9c507787004fe2daa01","modified":1569736777736},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"8cd942b0e891bfc99521f884249aebf995dfbcd0","modified":1569736777736},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"a7be47294d8d5e04c00bbb6649bc2e1e8f953a55","modified":1569736777735},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1569736777741},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"67d04e3e29a2675d1a9f87d1ae6ea0769e963ff1","modified":1569736777741},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"5ad2c2d0a11443a03b3fd912925bc0dcfbcda88c","modified":1569736777742},{"_id":"themes/next/docs/ru/README.md","hash":"3ceab62de4db29e2257dd5a187c7f8731a207f84","modified":1569736777741},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1569736777741},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"0dfb458370a0ffbbe37c00f53c15e3aa3e79b125","modified":1569736777742},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"c46f3f7496fc422207cc5954e10a2bc972b650aa","modified":1569736777743},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"ca39e510b43ea1efe7e5feeca2243375e55eff5c","modified":1569736777742},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"c13546dd70a99a7d2d409cddf5d59f2f4d4d44a4","modified":1569736777743},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8ceaad956a1afedf179b2e0b98a67adee9afec08","modified":1569736777743},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"4ee0607ddcfb2fe0e5868aced6d5814d1ada4405","modified":1569736777744},{"_id":"themes/next/docs/zh-CN/README.md","hash":"0981aaf68145a05b02cd10c95d38cbaf97622944","modified":1569736777744},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"a658a72589738e11aefaa3a714b188ffd5aac822","modified":1569736777743},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"1bb927e0560d3d3c95369da461911cced5bd537b","modified":1569736777748},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"ccef7a8cd704575cf7bfe63c0492fe43592b1a6d","modified":1569736777749},{"_id":"themes/next/layout/_macro/post.swig","hash":"20ef46756b2a8026cc85e7830e5414fe749d1391","modified":1569736777749},{"_id":"themes/next/layout/_partials/comments.swig","hash":"e0f59221b6010bd3e05d34fac915556f51b8a458","modified":1569736777751},{"_id":"themes/next/layout/_partials/footer.swig","hash":"9d9a5d6a2f0d4f65fe57c3737c91ecaf276c1f5c","modified":1569736777751},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"769a983fe2f77908bfc8590ff37a0d8958b47598","modified":1569736777753},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"4b0c972c44bfa7ab07604280563deb9cc3974657","modified":1569736777753},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"58f12810a730ba8e3129c9b0d1a7cce42ac6f2d2","modified":1569736777755},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1569736777755},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"e08feac6f8904d7f2006e350514a2f07eb9fff44","modified":1569736777755},{"_id":"themes/next/layout/_scripts/three.swig","hash":"eee4d26b5c0bb7872a21346151c38612a9b76d0b","modified":1569736777756},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"105004ddcc7fe9f4fd7ad1007b628ba8c08c1e27","modified":1569736777755},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"d3448044776dd23abd42b09ef0f26827f95efdf5","modified":1569736777756},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1569736777757},{"_id":"themes/next/layout/_third-party/index.swig","hash":"32e4fe8dd8b3c40a17314569d1a14bde55251074","modified":1569736777759},{"_id":"themes/next/layout/_third-party/facebook-sdk.swig","hash":"3cf1a1a83ceddef4033a2964150f81b979ced6ff","modified":1569736777759},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"65f94b115c42d33e6a90b1f8e62075c6d4ac60c1","modified":1569736777760},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1569736777760},{"_id":"themes/next/layout/_third-party/vkontakte-api.swig","hash":"e0d012bdbae5545d90143030116114c34219bd37","modified":1569736777761},{"_id":"themes/next/scripts/events/index.js","hash":"a25690d8b03779f7e318108c8eace9baf6d4283a","modified":1569736777762},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"834599d2b83f06e90f8cf618cddc106fe900ba5c","modified":1569736777764},{"_id":"themes/next/scripts/filters/excerpt.js","hash":"827c3733fa14b018dd1f07e41686c207880e823a","modified":1569736777765},{"_id":"themes/next/scripts/filters/exturl.js","hash":"9c32675f64121ffbe454189b8e418b408f79d9c2","modified":1569736777765},{"_id":"themes/next/scripts/filters/lazyload.js","hash":"51672320fff6b39f56fe6a2881c611afe4e79b8e","modified":1569736777765},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1569736777765},{"_id":"themes/next/scripts/helpers/engine.js","hash":"896a581feb9432e58a325ad04d66d6310a12374e","modified":1569736777766},{"_id":"themes/next/scripts/helpers/font.js","hash":"53169e2d04f0c21e68beb07c212be0a6c2a9aaea","modified":1569736777766},{"_id":"themes/next/scripts/helpers/next-inject.js","hash":"33eb6f38de575b973fed237032c34d878594fdc1","modified":1569736777766},{"_id":"themes/next/scripts/helpers/next-js.js","hash":"b28a8ed6d033946acbb5b91f6d8b884857410dd9","modified":1569736777766},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1569736777766},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"d512f44195f68b0ff93f3c82afff9161cdf1b7d6","modified":1569736777766},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1569736777767},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1569736777767},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1569736777767},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1569736777767},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"60f880c1e11a7df1aee4f2e01d65451fecc0372c","modified":1569736777767},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1569736777767},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1569736777767},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1569736777768},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1569736777768},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1569736777768},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1569736777768},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1569736777786},{"_id":"themes/next/source/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1569736777790},{"_id":"themes/next/source/js/bookmark.js","hash":"60cab6771a57c268da331920edd6d7fcd2713d42","modified":1569736777790},{"_id":"themes/next/source/js/local-search.js","hash":"0579159bf994e3726b3ba063e5905f79465fdfb1","modified":1569736777790},{"_id":"themes/next/source/js/motion.js","hash":"d52807a73efc34b1189c096477f348d05debf861","modified":1569736777791},{"_id":"themes/next/source/js/next-boot.js","hash":"d1892ad3ca2741534ebaac0476902e05031ab255","modified":1569736777791},{"_id":"themes/next/source/js/utils.js","hash":"33a76cda8ecad2bea9db13e1f77c6e22fd6452fe","modified":1569736777792},{"_id":"themes/next/source/images/.DS_Store","hash":"35890205ec857eb23f5f2afa26c91af271b683f3","modified":1569739318063},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1569588177554},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1569588177554},{"_id":"themes/next/source/images/android-chrome-192x192.png","hash":"e6719c63867fa48541326c9f137ae35cf45c7352","modified":1569704744000},{"_id":"themes/next/source/images/apple-touch-icon.png","hash":"a81df38879725ab41da45d43fbe01631a0d1961c","modified":1569704744000},{"_id":"themes/next/source/images/browserconfig.xml","hash":"974aea18bda5a95802c06b80126ab1d96d91d708","modified":1569736777787},{"_id":"themes/next/source/images/avatar.png","hash":"d131ff132af7448bd4b5e06962698e76d3085627","modified":1530520516000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1569588177554},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1569588177555},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1569588177555},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1569588177555},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1569588177555},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1569588177555},{"_id":"themes/next/source/images/favicon-32x32.png","hash":"1e758ee02d6d842276ddee0e42404f982cc9d0b0","modified":1569704746000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1569588177555},{"_id":"themes/next/source/images/favicon.ico","hash":"2fedc4ee780f04897a161110f7422197d52ee148","modified":1569704746000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1569588177556},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1569588177556},{"_id":"themes/next/source/images/favicon-16x16.png","hash":"c3a82aad76c992afb862cfad8c4b24f7dc4c9257","modified":1569704746000},{"_id":"themes/next/source/images/safari-pinned-tab.svg","hash":"d4e3a70e2041247e0c19352aeb2d7e0c5bbc3850","modified":1569704746000},{"_id":"themes/next/source/images/site.webmanifest","hash":"13e5aa58eb2182d8ace63266856c8cc29c47c083","modified":1569736777790},{"_id":"themes/next/source/images/mstile-150x150.png","hash":"91b2649df1f4293c6935dbf042e8436ef086f457","modified":1569704746000},{"_id":"themes/next/source/images/github-corner.svg","hash":"7ed74462839f3c6c6675294b771b21332f16723d","modified":1569707340000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1569736777792},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569736777781},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569736777781},{"_id":"themes/next/source/images/android-chrome-384x384.png","hash":"a3bd8f3736b8382488d6a49184bc994135272b53","modified":1569704744000},{"_id":"themes/next/layout/_partials/analytics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1569736777750},{"_id":"themes/next/layout/_partials/analytics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1569736777749},{"_id":"themes/next/layout/_partials/analytics/firestore.swig","hash":"67e63c25d509f02a6057ee9724f1b6efd647f72f","modified":1569736777750},{"_id":"themes/next/layout/_partials/analytics/index.swig","hash":"ac6a3995c1330d2d73300b2427006509d0f8dba5","modified":1569736777750},{"_id":"themes/next/layout/_partials/analytics/lean-analytics.swig","hash":"fb7729b69ef443db1f3f2755506ee998cfe4b973","modified":1569736777750},{"_id":"themes/next/layout/_partials/analytics/tencent-analytics.swig","hash":"493a1ef6c8f475d4dd3156a6ab37690dc75695ea","modified":1569736777750},{"_id":"themes/next/layout/_partials/analytics/tencent-mta.swig","hash":"198813a3f382bda4278fe3759bf0f18a5769bb33","modified":1569736777751},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"0edd29b972aceecccb65b3e63d79c01f6639d0c5","modified":1569736777751},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"6236a874b93ac1be56fc21df8534a7ae8acffcfc","modified":1569736777751},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"9718d372887f4b0ee952da42d10b2f736d0fc6de","modified":1569736777752},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"e0767e09a632264f189570e95ccf70fb1dad9110","modified":1569736777752},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"226ca201e73111b130730736d808ffddcdc8ee51","modified":1569736777752},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"20c8e67d29dfbcd1c72739b00e91f86ef46d7769","modified":1569736777752},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"02a4706ce7ed6f6d2f660948a74e9e8cd6dfa1fd","modified":1569736777752},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1569736777752},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"d3c25d70f0fd76121e4cacb9f8af4ccbe2a3c74d","modified":1569736777753},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"b68ccb90e2ee42bd98c93fc030a29d38689dd55c","modified":1569736777753},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"b654d63d2ed221a8b642223e220392e5172d8f4d","modified":1569736777753},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f05225f7d0ada3853c425899b515056b96ca49bf","modified":1569736777753},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"90a0869c6cc351d92fc97bf42fdc6e1bfa6bc513","modified":1569736777754},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"2edfaf1579ea58e15cb5583fb7962dfee9af2257","modified":1569736777754},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"7fa01334a0ba84500e920bb9202baa08067d2ee1","modified":1569736777754},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1569736777754},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"733d6874aa4f50d1071e670a554508a5a0094eb3","modified":1569736777754},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"4e71b26d91ab750791f3be6035a946eb96ca7b34","modified":1569736777754},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"9e44c795565837ba318fd739e42713de365673fd","modified":1569736777755},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1569736777756},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1569736777756},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1569736777756},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1569736777756},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"9f73476ebcf5cd3b7f55525b3f35dc7e9f01e154","modified":1569736777757},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1569736777757},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"42aa3022f7739a552c7a55de316d8c0994b2fdc1","modified":1569736777757},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"20fcbed44aede1b908bd17d7a0279b03639068b1","modified":1569736777757},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"7fd0459d2f1cfe1254f2c2b8087dc094c8cb0e84","modified":1569736777757},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1569736777758},{"_id":"themes/next/layout/_third-party/chat/index.swig","hash":"5ab4a8b4306c837d2f8c211a9d7fdaed76fa254d","modified":1569736777758},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1569736777758},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"1130b8bd60f3b84397974486e6586d7f0afaf836","modified":1569736777758},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"df8413cba22deffca94cf4edd6d9f8d35d2bb58f","modified":1569736777758},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"86092b31761948486ecb379eb7445f66a158769d","modified":1569736777758},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"261c4f1ab42f692279a310943b807ed34516df7c","modified":1569736777759},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f95bc4d7ffaddc3c0df0ef3eeeaac58ff83f560","modified":1569736777759},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ab937195168a0e8a911bf5730307f680e6d521e9","modified":1569736777759},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"bc23c9eb9c06b0b377695f44373c14c5cde1d0e3","modified":1569736777759},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"b9d7a99534e9c2608765b958eae3b5c50f5e4889","modified":1569736777760},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"ad7a22ee0f183481c7843ecd881b9f9e8e037e31","modified":1569736777760},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"dff6835d0b03ecc2db6919ca27cfb7b63949e6a8","modified":1569736777760},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"b2fd17688f0433571b37704bc8df798e175e7811","modified":1569736777760},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1569736777760},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1569736777760},{"_id":"themes/next/layout/_third-party/tags/index.swig","hash":"83d0a8f71878c6b96a04ba08567b9064de6cce83","modified":1569736777761},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"a54308f934c33b12f6bf28e4ce90e517f38cab57","modified":1569736777761},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"7597800b6ce2f545baea797d95d1b8c7cf624299","modified":1569736777761},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b710d896fccd34657a70244645470e476a4e069f","modified":1569736777762},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1569736777762},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"2a5f7c7e507bb354ec05a881bc9a1f4f2f28197c","modified":1569736777763},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"3ac62f5510f22e9d970089bb01f96ba2134ae161","modified":1569736777763},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1569736777763},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1569736777763},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"ccfac51bde0063ab7ef88182f8cbc98c210e78c9","modified":1569736777763},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"178c4618b29a1e06221285146071e72e24c40499","modified":1569736777763},{"_id":"themes/next/scripts/filters/comment/facebook-comments-plugin.js","hash":"e3c74b24f3818f2504fd0c7a954adaa6681bb969","modified":1569736777764},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1569736777764},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"3c4bdc2a682f9889a532e1cb856bc5caeb4208e1","modified":1569736777764},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"e34d38aee93558b2c68a7fa6203c2e4806405d62","modified":1569736777764},{"_id":"themes/next/scripts/filters/comment/vkontakte.js","hash":"031337c2e2157628a15a5f4d96fa6e3fcf2733fe","modified":1569736777764},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1569736777781},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1569736777781},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"59384f63e608b272e4c8679009bbe5e6594fd1b1","modified":1569736777781},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"d9a2eff154fafff547b3aca7321eee94b450c00a","modified":1569736777785},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"14e4bd0bd702c7a7f83bf7d529fade2d0634c2f1","modified":1569736777785},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"1e99dfbe7736acfee59d6f54dbd6b33ddfe2fe8a","modified":1569736777785},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"db52bce619bb848189e83b7bfabd1b2a06fd5578","modified":1569736777785},{"_id":"themes/next/source/css/_variables/base.styl","hash":"639b65a486154cf1f70c31f3fff440ce022255c0","modified":1569736777786},{"_id":"themes/next/source/js/schemes/muse.js","hash":"be8471d4a84b773014b46a3650887ab55116ea68","modified":1569736777791},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"1e47ffdda23f7f645a2a883a90e2e9d9ddbf9a46","modified":1569736777791},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1569736777792},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1569736777792},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1569736777793},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1569736777793},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1569736777793},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1569736777797},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1569736777798},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"cda066b495a4b6b10c7bc88b2a9b82722156b66b","modified":1569736777769},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1569736777769},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"e0db0d9205cd47c48edba81c7397e09ed24783fa","modified":1569736777769},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"060aeb5cff414014f7cdbb61e0ec7855cb0d4b32","modified":1569736777769},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"6c61a120d61dec145c8db3a244cae0e724f6f3ef","modified":1569736777769},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"674c32b6e9df4b2294df07c3966bf6555e0fb5ad","modified":1569736777772},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"202ee1f1f8e64d8292df16f40ee176ff4e5d7e71","modified":1569736777775},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"8e9deaf1e0a27d5bf5f0401bf04f5637df12b6c4","modified":1569736777775},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"0dd11537a4b9a4d2faf3ad5cdae0f0f770a99ccf","modified":1569736777775},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"0c60cf489cd083d3a1e3502a240a761b656241c2","modified":1569736777780},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"23af61f239f9f9ddccb6352ea1af4b24c11d6db3","modified":1569736777779},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"cb25eed35117be256ea7a573fec2cdfb66901dbb","modified":1569736777780},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"19a20393d266b21ee44ff07d6fa1e9ebbc39a5d9","modified":1569736777780},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"4f7140cc0db08b47a25c4c7aad71047d433051a1","modified":1569736777780},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"c4a5c52e30444602237530f379c1707ec864fa9a","modified":1569736777780},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"4ddbc8b2dba6fad900c5eca793a31f18ba850f5a","modified":1569736777780},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"c42802ecca44d4ea435c26700070a65375edfd7c","modified":1569736777781},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"71d75fa309cf5b96d876da536f57c047e57afcff","modified":1569736777782},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"3462ffd270f3e218e0a8362262466e79d731f975","modified":1569736777782},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"87d19a45db10689aae9a09736efd1eb896a35b3d","modified":1569736777782},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"73fe940abb0787a19f505fb614aafe73c8a24f08","modified":1569736777782},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"dc2a3217f9b50cf42c4262c9e486281203eaef83","modified":1569736777782},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"54c5e23ec3dcbbc77848ededba76e861cf0f4719","modified":1569736777783},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"e859283440617f18f1ad298f7f1218aafa9b39d5","modified":1569736777783},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1569736777783},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"b22583b7340c2686a46aefeeed086540b08324a3","modified":1569736777783},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"eeab294e14abbae231107e1a327e907b25323136","modified":1569736777783},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"f1f81bca31e82ccbd375f0cb9fb8dbb3beac810d","modified":1569736777784},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"41b1d10a530913908e026fd991216e234766d148","modified":1569736777783},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2ab9e0499f241d1b91e2f7722072d23c95104e1f","modified":1569736777784},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"ac523812bebb13cde268dc3cde65d0b7c6862e30","modified":1569736777784},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"10b4794ba62726fc052c74d786d962ed79d0780b","modified":1569736777785},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"3bcb47b9b9ea671e0a3cba6a821045d3434734cb","modified":1569736777784},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44ac3dff65c1bd3fe47feeed8e58aa00c9f2fb7b","modified":1569736777784},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1569736777793},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1569736777794},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1569736777794},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1569736777797},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1569736777796},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"57c03777732a313422b6f6785f330fb9eacf0bf5","modified":1569736777769},{"_id":"themes/next/source/css/_common/components/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1569736777770},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"1bfa07d40ceb03b0b69a5752478ca555723f7a15","modified":1569736777770},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"386fce803e5240c2d6860ae53f38ae3aa2e8b680","modified":1569736777770},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1569736777770},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"139c17e7d4aa3e1112340a26a270efe58c279f8e","modified":1569736777770},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"dada73ae88f01fab2ab4d2c83eddfc558de2110a","modified":1569736777770},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"4718d17fc4ee30802925890771a032d966133a31","modified":1569736777771},{"_id":"themes/next/source/css/_common/components/highlight/copy-code.styl","hash":"2124abd41b69ff152f4bb39e78d8fbce96a45c65","modified":1569736777771},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1569736777771},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4efe9174369bfe2125bd167feac18a07271635d6","modified":1569736777771},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"a67dc85f6d158dac20e951ab55988ff7e9e1739b","modified":1569736777771},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1569736777772},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1569736777772},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1569736777772},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"919cc9aaf60b03c2bf00aca3748127f38a2026cf","modified":1569736777772},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1569736777772},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"db718eee14347f30ccabaa33bf6f9fbdea8b9462","modified":1569736777773},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"3abf46c513e92f3f36c14d90f032983b94f36488","modified":1569736777773},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1569736777773},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"ac2105c5a7f581b1c0f2b59f2c0c3e87a7c28383","modified":1569736777773},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"602a3c3d2785965b23412b5c219dfe74b5fb0844","modified":1569736777773},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"c60afb603d58cad3ad13e1a16c66832538510063","modified":1569736777774},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"caa9a78993d549117cdc8fa7a76c473a5e7f0f67","modified":1569736777774},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2e2a09dddd2a394a635bcefb6207b6cddcb784c7","modified":1569736777774},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"541d6257023915a7caca7540f12cdf283ce025f3","modified":1569736777774},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"469d5e4e188f484abff24eddd5640fa4d4d77ed1","modified":1569736777774},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"5da763d541540586ccd13868a36e3da55549eb22","modified":1569736777775},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1569736777774},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"8b6481a0ac60007cf3defa3c9d85a6e412c91d6e","modified":1569736777775},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"e77986ca3b914348b5c3c6b34c94b49ad53e4b9c","modified":1569736777775},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1569736777776},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2ef546b4cfa5038ebb050c592c5135bbeb51af41","modified":1569736777776},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1569736777776},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"41ccae779f918e6f9f5f625789a7360f1362454c","modified":1569736777776},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"d055f8420583c7a009818dcdfaada592308bd628","modified":1569736777776},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"f3108a247549fbdf11071d023add3f1b34ad2b23","modified":1569736777776},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"db44ef2b99fc33d003010f38e64caad930c08ad0","modified":1569736777777},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"782cf8847c9aca96f9194fcf1d910509e4073ce6","modified":1569736777777},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"17c3f58fb84453603621d6a718fcc821c8d6bced","modified":1569736777777},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"02e5a998748a67fa885fb06fae242bcf3f2786fb","modified":1569736777777},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"514999bde116ef5cd5f7aedea80059b12a87a1ea","modified":1569736777777},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"0527bc64708a9446dc7bbb2c7e39ab3a61251c26","modified":1569736777777},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"78d309e22206a4addda3c393282518dae02250ed","modified":1569736777778},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"a1eed8fe7f97885a9234502a197abf2e90ba22b6","modified":1569736777778},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1569736777778},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"754f70161b7e810f582cc4755d177859dcbcfced","modified":1569736777778},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1569736777778},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1569736777778},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1569736777779},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"38ce7d692b8bc6fde02e3271dfd50ad37e107e4e","modified":1569736777779},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"85b8606763f4177d2f9a11c1909a21ab1ae2011c","modified":1569736777779},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"4525465f40f82bd66e5f34e986440c75a9e2d2b2","modified":1569736777779},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1569736777796},{"_id":"public/atom.xml","hash":"7e6ac8b7ce937df15f17981dddfd7086daccbf18","modified":1570851234258},{"_id":"public/search.xml","hash":"426c0842fbed79866ec44301c375138368ccded4","modified":1570851234258},{"_id":"public/404.html","hash":"4dd84063586ba0c6c8add00a174d27e238ce3e89","modified":1570851234264},{"_id":"public/categories/index.html","hash":"ceccc3b744c5e7802a45a58850363837d3317703","modified":1570851234265},{"_id":"public/tags/index.html","hash":"566bb687b5fe2926c0cf267e0b7cfe33c2b670d4","modified":1570851234265},{"_id":"public/categories/深度学习/index.html","hash":"e46e52f0cfdec8df148812ca20a854fbe6bff1e4","modified":1570851234265},{"_id":"public/categories/机器学习/index.html","hash":"c75e33de354edd47e4ccc47bf206f0336ab3424c","modified":1570851234265},{"_id":"public/archives/2019/10/index.html","hash":"c661fc477f52294dedbd24544fca8b2dbff0b2e1","modified":1570851234265},{"_id":"public/tags/算法/index.html","hash":"11215a51f60224390b4576a23276879d1e041d9f","modified":1570851234265},{"_id":"public/tags/Python/index.html","hash":"49317abf6ffdffec4bdfcc3bc46d6052bae883a1","modified":1570851234265},{"_id":"public/tags/iOS/index.html","hash":"aef0b7c3119d0b36c80d119fd6d2ae9648b72bf8","modified":1570851234265},{"_id":"public/tags/Android/index.html","hash":"95386bc9010215263f55e87c3e516e69f05c35d0","modified":1570851234265},{"_id":"public/tags/python/index.html","hash":"ed6f6a393b83e0087cb697a7d19bba7659961a34","modified":1570851234265},{"_id":"public/about/index.html","hash":"7e454279e2cb5f60a726c0376a1058ea700b22cc","modified":1570851234265},{"_id":"public/2019/10/08/flutter provider基础使用/index.html","hash":"56576b2b75460503bcfcbcda8983eb639242f5cb","modified":1570851234265},{"_id":"public/2019/09/29/2/index.html","hash":"d42ce9ea6bfb7758c82dee04dd5932ea5eb60478","modified":1570851234265},{"_id":"public/2019/09/29/1/index.html","hash":"c510d301bc4e3f71aae8a1466e1c50f38ce9845f","modified":1570851234265},{"_id":"public/2019/09/29/UIAutomator2的使用/index.html","hash":"a67376c91e0ff9b7b4617590c667f3435cee0989","modified":1570851234265},{"_id":"public/categories/移动端/index.html","hash":"a159b9fa0cfdd3c9b55517b8ac2f2eb74b2ab683","modified":1570851234265},{"_id":"public/archives/index.html","hash":"2aab9db3bc3b20ad938ada51cbaa22ae76c60ada","modified":1570851234265},{"_id":"public/archives/2019/index.html","hash":"af88c01a8c8ee92fa067d63fb0bfa1b5a0f899e1","modified":1570851234266},{"_id":"public/archives/2019/09/index.html","hash":"c14fa5481151128fa9350116fd145aa2c99bdaa9","modified":1570851234266},{"_id":"public/index.html","hash":"3f7114dea45b2b5cfb2a2bb01bab795d8d20cff6","modified":1570851234266}],"Category":[{"name":"深度学习","_id":"ck1mzrdj00005qifyrxyter7t"},{"name":"机器学习","_id":"ck1mzrdj40009qifyey480o9q"},{"name":"移动端","_id":"ck1mzrdj6000eqifysc59qpij"}],"Data":[],"Page":[{"title":"404 Not Found","date":"2019-09-22T02:41:27.000Z","_content":"\n<center>\n对不起，您所访问的页面不存在或者已删除。\n您可以<a href=\"https://ailab-aida.github.io>\">点击此处</a>返回首页。\n</center>\n\n<blockquote class=\"blockquote-center\">\n    ailab-aida\n</blockquote>\n","source":"404.md","raw":"---\ntitle: 404 Not Found\ndate: 2019-09-22 10:41:27\n---\n\n<center>\n对不起，您所访问的页面不存在或者已删除。\n您可以<a href=\"https://ailab-aida.github.io>\">点击此处</a>返回首页。\n</center>\n\n<blockquote class=\"blockquote-center\">\n    ailab-aida\n</blockquote>\n","updated":"2019-09-29T06:09:53.815Z","path":"404.html","comments":1,"layout":"page","_id":"ck1mzrdgy0000qifyi3d5y2d9","content":"<center>\n对不起，您所访问的页面不存在或者已删除。\n您可以<a href=\"https://ailab-aida.github.io>\">点击此处</a>返回首页。\n</center>\n\n<blockquote class=\"blockquote-center\">\n    ailab-aida\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<center>\n对不起，您所访问的页面不存在或者已删除。\n您可以<a href=\"https://ailab-aida.github.io>\">点击此处</a>返回首页。\n</center>\n\n<blockquote class=\"blockquote-center\">\n    ailab-aida\n</blockquote>\n"},{"title":"分类","date":"2019-09-21T16:05:08.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-09-22 00:05:08\ntype: categories\ncomments: false\n---\n","updated":"2019-10-12T03:26:11.533Z","path":"categories/index.html","_id":"ck1mzrdix0002qifyko9ebz8a","layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于我们","date":"2019-09-21T16:05:55.000Z","comments":0,"_content":"\n# AILab-aida 简介\n\nXXX（AILab-aida）团队成立于 2019 年，团队成员包括 XXX。\n\n涉猎的主要编程语言为 深度学习、机器学习、大数据、服务端、移动端、前端、爬虫(go、scala、Java、flutter、Python、react、Vue)等。\n\n# 联系方式\n\n- 微信公众号: AILab-aida\n- Blog: [https://ailab-aida.github.io](https://ailab-aida.github.io)\n- GitHub: [https://github.com/qq1074123922](https://github.com/qq1074123922)\n","source":"about/index.md","raw":"---\ntitle: 关于我们\ndate: 2019-09-22 00:05:55\ncomments: false\n---\n\n# AILab-aida 简介\n\nXXX（AILab-aida）团队成立于 2019 年，团队成员包括 XXX。\n\n涉猎的主要编程语言为 深度学习、机器学习、大数据、服务端、移动端、前端、爬虫(go、scala、Java、flutter、Python、react、Vue)等。\n\n# 联系方式\n\n- 微信公众号: AILab-aida\n- Blog: [https://ailab-aida.github.io](https://ailab-aida.github.io)\n- GitHub: [https://github.com/qq1074123922](https://github.com/qq1074123922)\n","updated":"2019-09-29T06:24:29.226Z","path":"about/index.html","layout":"page","_id":"ck1mzrdiz0004qifyq95z3m8n","content":"<h1 id=\"AILab-aida-简介\"><a href=\"#AILab-aida-简介\" class=\"headerlink\" title=\"AILab-aida 简介\"></a>AILab-aida 简介</h1><p>XXX（AILab-aida）团队成立于 2019 年，团队成员包括 XXX。</p>\n<p>涉猎的主要编程语言为 深度学习、机器学习、大数据、服务端、移动端、前端、爬虫(go、scala、Java、flutter、Python、react、Vue)等。</p>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>微信公众号: AILab-aida</li>\n<li>Blog: <a href=\"https://ailab-aida.github.io\">https://ailab-aida.github.io</a></li>\n<li>GitHub: <a href=\"https://github.com/qq1074123922\" target=\"_blank\" rel=\"noopener\">https://github.com/qq1074123922</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"AILab-aida-简介\"><a href=\"#AILab-aida-简介\" class=\"headerlink\" title=\"AILab-aida 简介\"></a>AILab-aida 简介</h1><p>XXX（AILab-aida）团队成立于 2019 年，团队成员包括 XXX。</p>\n<p>涉猎的主要编程语言为 深度学习、机器学习、大数据、服务端、移动端、前端、爬虫(go、scala、Java、flutter、Python、react、Vue)等。</p>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>微信公众号: AILab-aida</li>\n<li>Blog: <a href=\"https://ailab-aida.github.io\">https://ailab-aida.github.io</a></li>\n<li>GitHub: <a href=\"https://github.com/qq1074123922\" target=\"_blank\" rel=\"noopener\">https://github.com/qq1074123922</a></li>\n</ul>\n"},{"title":"标签","date":"2019-09-21T16:05:14.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-09-22 00:05:14\ntype: tags\ncomments: false\n---\n","updated":"2019-09-29T06:24:42.985Z","path":"tags/index.html","layout":"page","_id":"ck1mzrdl7000vqify2gjj3kij","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"1","_content":"","source":"_posts/1.md","raw":"---\ntitle: 1\ncategories:\n  - 深度学习\ntags:\n  - 算法\n---\n","slug":"1","published":1,"date":"2019-09-29T05:59:37.714Z","updated":"2019-09-29T06:27:50.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1mzrdiv0001qifyju22mn4d","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"2","_content":"","source":"_posts/2.md","raw":"---\ntitle: 2\ncategories:\n  - 机器学习\ntags:\n  - 算法\n  - Python\n---\n","slug":"2","published":1,"date":"2019-09-29T05:59:37.714Z","updated":"2019-09-29T06:27:54.834Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1mzrdiy0003qifyw9rqx2t3","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"flutter provider基础使用","_content":"\n## main.dart\n\n废话不多说 直接上代码 😃\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:flutter_demo/provider/main_provider.dart';\nimport 'package:provider/provider.dart';\n\nvoid main() {\n  runApp(MaterialApp(\n    title: 'demo',\n    theme: ThemeData(\n      primarySwatch: Colors.blue,\n    ),\n    //定义作用区间 只绘制顶层home\n    home: MultiProvider(\n      providers: [\n        ChangeNotifierProvider(builder: (_) => MainProvider()),\n      ],\n      child: Home(),\n    ),\n  ));\n}\n\nclass Home extends StatefulWidget {\n  @override\n  _HomeState createState() => new _HomeState();\n}\n\nclass _HomeState extends State<Home> {\n//  int curNum = 0;\n  int curNum;\n\n  @override\n  void initState() {\n    super.initState();\n    //TODO\n  }\n\n  void add() {\n    setState(() {\n      curNum += 1;\n    });\n    //TODO\n  }\n\n  void minus() {\n    setState(() {\n      curNum -= 1;\n    });\n    //TODO\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    //定义provider 实例化\n    MainProvider provider = Provider.of<MainProvider>(context);\n    curNum = provider.curNum;\n    return new Scaffold(\n      appBar: new AppBar(\n        title: new Text('demo'),\n      ),\n      body: Column(\n        children: <Widget>[\n          Add(),\n//           Add(\n//             add: add,\n//           ),\n          Container(\n            child: Text(\n              '$curNum',\n              style: TextStyle(fontSize: 30),\n            ),\n          ),\n          Minus(),\n          // Minus(\n          //   minus: minus,\n          // ),\n        ],\n      ),\n    );\n  }\n}\n\nclass Minus extends StatelessWidget {\n  const Minus({\n    Key key,\n    // this.minus,\n  }) : super(key: key);\n  // final int curNum;\n  // final VoidCallback minus;\n  @override\n  Widget build(BuildContext context) {\n    MainProvider provider = Provider.of<MainProvider>(context);\n    return Container(\n      child: Container(\n        child: FlatButton(\n          child: Text(\n            '-',\n            style: TextStyle(fontSize: 30),\n          ),\n          onPressed: () {\n            provider.minus();\n          },\n        ),\n      ),\n    );\n  }\n}\n\nclass Add extends StatelessWidget {\n  const Add({\n    Key key,\n    // this.add,\n  }) : super(key: key);\n  // final int curNum;\n  // final VoidCallback add;\n  @override\n  Widget build(BuildContext context) {\n    MainProvider provider = Provider.of<MainProvider>(context);\n    return Container(\n      child: Container(\n        child: FlatButton(\n          child: Text(\n            '+',\n            style: TextStyle(fontSize: 30),\n          ),\n          onPressed: () {\n            provider.add();\n          },\n        ),\n      ),\n    );\n  }\n}\n```\n\n## main_provider.dart\n\n废话不多说 直接上代码 😃\n\n```\nimport 'package:flutter/material.dart';\n\n//定义作用区间 状态管理与界面抽离 祖先 父 子 孙子 统一操作数据\nclass MainProvider extends ChangeNotifier {\n  int curNum = 0;\n  add() {\n    curNum += 1;\n    notifyListeners();\n  }\n\n  minus() {\n    curNum -= 1;\n    notifyListeners();\n  }\n}\n\n```\n","source":"_posts/flutter provider基础使用.md","raw":"---\ntitle: flutter provider基础使用\ncategories: 移动端\ntags:\n  - iOS\n  - Android\n---\n\n## main.dart\n\n废话不多说 直接上代码 😃\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:flutter_demo/provider/main_provider.dart';\nimport 'package:provider/provider.dart';\n\nvoid main() {\n  runApp(MaterialApp(\n    title: 'demo',\n    theme: ThemeData(\n      primarySwatch: Colors.blue,\n    ),\n    //定义作用区间 只绘制顶层home\n    home: MultiProvider(\n      providers: [\n        ChangeNotifierProvider(builder: (_) => MainProvider()),\n      ],\n      child: Home(),\n    ),\n  ));\n}\n\nclass Home extends StatefulWidget {\n  @override\n  _HomeState createState() => new _HomeState();\n}\n\nclass _HomeState extends State<Home> {\n//  int curNum = 0;\n  int curNum;\n\n  @override\n  void initState() {\n    super.initState();\n    //TODO\n  }\n\n  void add() {\n    setState(() {\n      curNum += 1;\n    });\n    //TODO\n  }\n\n  void minus() {\n    setState(() {\n      curNum -= 1;\n    });\n    //TODO\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    //定义provider 实例化\n    MainProvider provider = Provider.of<MainProvider>(context);\n    curNum = provider.curNum;\n    return new Scaffold(\n      appBar: new AppBar(\n        title: new Text('demo'),\n      ),\n      body: Column(\n        children: <Widget>[\n          Add(),\n//           Add(\n//             add: add,\n//           ),\n          Container(\n            child: Text(\n              '$curNum',\n              style: TextStyle(fontSize: 30),\n            ),\n          ),\n          Minus(),\n          // Minus(\n          //   minus: minus,\n          // ),\n        ],\n      ),\n    );\n  }\n}\n\nclass Minus extends StatelessWidget {\n  const Minus({\n    Key key,\n    // this.minus,\n  }) : super(key: key);\n  // final int curNum;\n  // final VoidCallback minus;\n  @override\n  Widget build(BuildContext context) {\n    MainProvider provider = Provider.of<MainProvider>(context);\n    return Container(\n      child: Container(\n        child: FlatButton(\n          child: Text(\n            '-',\n            style: TextStyle(fontSize: 30),\n          ),\n          onPressed: () {\n            provider.minus();\n          },\n        ),\n      ),\n    );\n  }\n}\n\nclass Add extends StatelessWidget {\n  const Add({\n    Key key,\n    // this.add,\n  }) : super(key: key);\n  // final int curNum;\n  // final VoidCallback add;\n  @override\n  Widget build(BuildContext context) {\n    MainProvider provider = Provider.of<MainProvider>(context);\n    return Container(\n      child: Container(\n        child: FlatButton(\n          child: Text(\n            '+',\n            style: TextStyle(fontSize: 30),\n          ),\n          onPressed: () {\n            provider.add();\n          },\n        ),\n      ),\n    );\n  }\n}\n```\n\n## main_provider.dart\n\n废话不多说 直接上代码 😃\n\n```\nimport 'package:flutter/material.dart';\n\n//定义作用区间 状态管理与界面抽离 祖先 父 子 孙子 统一操作数据\nclass MainProvider extends ChangeNotifier {\n  int curNum = 0;\n  add() {\n    curNum += 1;\n    notifyListeners();\n  }\n\n  minus() {\n    curNum -= 1;\n    notifyListeners();\n  }\n}\n\n```\n","slug":"flutter provider基础使用","published":1,"date":"2019-10-08T10:12:47.165Z","updated":"2019-10-09T10:32:56.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1mzrdj20007qifyrj2vaxum","content":"<h2 id=\"main-dart\"><a href=\"#main-dart\" class=\"headerlink\" title=\"main.dart\"></a>main.dart</h2><p>废话不多说 直接上代码 😃</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\">import &apos;package:flutter_demo/provider/main_provider.dart&apos;;</span><br><span class=\"line\">import &apos;package:provider/provider.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main() &#123;</span><br><span class=\"line\">  runApp(MaterialApp(</span><br><span class=\"line\">    title: &apos;demo&apos;,</span><br><span class=\"line\">    theme: ThemeData(</span><br><span class=\"line\">      primarySwatch: Colors.blue,</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    //定义作用区间 只绘制顶层home</span><br><span class=\"line\">    home: MultiProvider(</span><br><span class=\"line\">      providers: [</span><br><span class=\"line\">        ChangeNotifierProvider(builder: (_) =&gt; MainProvider()),</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      child: Home(),</span><br><span class=\"line\">    ),</span><br><span class=\"line\">  ));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Home extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _HomeState createState() =&gt; new _HomeState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _HomeState extends State&lt;Home&gt; &#123;</span><br><span class=\"line\">//  int curNum = 0;</span><br><span class=\"line\">  int curNum;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  void initState() &#123;</span><br><span class=\"line\">    super.initState();</span><br><span class=\"line\">    //TODO</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  void add() &#123;</span><br><span class=\"line\">    setState(() &#123;</span><br><span class=\"line\">      curNum += 1;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    //TODO</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  void minus() &#123;</span><br><span class=\"line\">    setState(() &#123;</span><br><span class=\"line\">      curNum -= 1;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    //TODO</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    //定义provider 实例化</span><br><span class=\"line\">    MainProvider provider = Provider.of&lt;MainProvider&gt;(context);</span><br><span class=\"line\">    curNum = provider.curNum;</span><br><span class=\"line\">    return new Scaffold(</span><br><span class=\"line\">      appBar: new AppBar(</span><br><span class=\"line\">        title: new Text(&apos;demo&apos;),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      body: Column(</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          Add(),</span><br><span class=\"line\">//           Add(</span><br><span class=\"line\">//             add: add,</span><br><span class=\"line\">//           ),</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">            child: Text(</span><br><span class=\"line\">              &apos;$curNum&apos;,</span><br><span class=\"line\">              style: TextStyle(fontSize: 30),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          Minus(),</span><br><span class=\"line\">          // Minus(</span><br><span class=\"line\">          //   minus: minus,</span><br><span class=\"line\">          // ),</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Minus extends StatelessWidget &#123;</span><br><span class=\"line\">  const Minus(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    // this.minus,</span><br><span class=\"line\">  &#125;) : super(key: key);</span><br><span class=\"line\">  // final int curNum;</span><br><span class=\"line\">  // final VoidCallback minus;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    MainProvider provider = Provider.of&lt;MainProvider&gt;(context);</span><br><span class=\"line\">    return Container(</span><br><span class=\"line\">      child: Container(</span><br><span class=\"line\">        child: FlatButton(</span><br><span class=\"line\">          child: Text(</span><br><span class=\"line\">            &apos;-&apos;,</span><br><span class=\"line\">            style: TextStyle(fontSize: 30),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          onPressed: () &#123;</span><br><span class=\"line\">            provider.minus();</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Add extends StatelessWidget &#123;</span><br><span class=\"line\">  const Add(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    // this.add,</span><br><span class=\"line\">  &#125;) : super(key: key);</span><br><span class=\"line\">  // final int curNum;</span><br><span class=\"line\">  // final VoidCallback add;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    MainProvider provider = Provider.of&lt;MainProvider&gt;(context);</span><br><span class=\"line\">    return Container(</span><br><span class=\"line\">      child: Container(</span><br><span class=\"line\">        child: FlatButton(</span><br><span class=\"line\">          child: Text(</span><br><span class=\"line\">            &apos;+&apos;,</span><br><span class=\"line\">            style: TextStyle(fontSize: 30),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          onPressed: () &#123;</span><br><span class=\"line\">            provider.add();</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><a id=\"more\"></a>\n\n<h2 id=\"main-provider-dart\"><a href=\"#main-provider-dart\" class=\"headerlink\" title=\"main_provider.dart\"></a>main_provider.dart</h2><p>废话不多说 直接上代码 😃</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">//定义作用区间 状态管理与界面抽离 祖先 父 子 孙子 统一操作数据</span><br><span class=\"line\">class MainProvider extends ChangeNotifier &#123;</span><br><span class=\"line\">  int curNum = 0;</span><br><span class=\"line\">  add() &#123;</span><br><span class=\"line\">    curNum += 1;</span><br><span class=\"line\">    notifyListeners();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  minus() &#123;</span><br><span class=\"line\">    curNum -= 1;</span><br><span class=\"line\">    notifyListeners();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"main-dart\"><a href=\"#main-dart\" class=\"headerlink\" title=\"main.dart\"></a>main.dart</h2><p>废话不多说 直接上代码 😃</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\">import &apos;package:flutter_demo/provider/main_provider.dart&apos;;</span><br><span class=\"line\">import &apos;package:provider/provider.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main() &#123;</span><br><span class=\"line\">  runApp(MaterialApp(</span><br><span class=\"line\">    title: &apos;demo&apos;,</span><br><span class=\"line\">    theme: ThemeData(</span><br><span class=\"line\">      primarySwatch: Colors.blue,</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    //定义作用区间 只绘制顶层home</span><br><span class=\"line\">    home: MultiProvider(</span><br><span class=\"line\">      providers: [</span><br><span class=\"line\">        ChangeNotifierProvider(builder: (_) =&gt; MainProvider()),</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      child: Home(),</span><br><span class=\"line\">    ),</span><br><span class=\"line\">  ));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Home extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _HomeState createState() =&gt; new _HomeState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _HomeState extends State&lt;Home&gt; &#123;</span><br><span class=\"line\">//  int curNum = 0;</span><br><span class=\"line\">  int curNum;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  void initState() &#123;</span><br><span class=\"line\">    super.initState();</span><br><span class=\"line\">    //TODO</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  void add() &#123;</span><br><span class=\"line\">    setState(() &#123;</span><br><span class=\"line\">      curNum += 1;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    //TODO</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  void minus() &#123;</span><br><span class=\"line\">    setState(() &#123;</span><br><span class=\"line\">      curNum -= 1;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    //TODO</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    //定义provider 实例化</span><br><span class=\"line\">    MainProvider provider = Provider.of&lt;MainProvider&gt;(context);</span><br><span class=\"line\">    curNum = provider.curNum;</span><br><span class=\"line\">    return new Scaffold(</span><br><span class=\"line\">      appBar: new AppBar(</span><br><span class=\"line\">        title: new Text(&apos;demo&apos;),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      body: Column(</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          Add(),</span><br><span class=\"line\">//           Add(</span><br><span class=\"line\">//             add: add,</span><br><span class=\"line\">//           ),</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">            child: Text(</span><br><span class=\"line\">              &apos;$curNum&apos;,</span><br><span class=\"line\">              style: TextStyle(fontSize: 30),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          Minus(),</span><br><span class=\"line\">          // Minus(</span><br><span class=\"line\">          //   minus: minus,</span><br><span class=\"line\">          // ),</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Minus extends StatelessWidget &#123;</span><br><span class=\"line\">  const Minus(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    // this.minus,</span><br><span class=\"line\">  &#125;) : super(key: key);</span><br><span class=\"line\">  // final int curNum;</span><br><span class=\"line\">  // final VoidCallback minus;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    MainProvider provider = Provider.of&lt;MainProvider&gt;(context);</span><br><span class=\"line\">    return Container(</span><br><span class=\"line\">      child: Container(</span><br><span class=\"line\">        child: FlatButton(</span><br><span class=\"line\">          child: Text(</span><br><span class=\"line\">            &apos;-&apos;,</span><br><span class=\"line\">            style: TextStyle(fontSize: 30),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          onPressed: () &#123;</span><br><span class=\"line\">            provider.minus();</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Add extends StatelessWidget &#123;</span><br><span class=\"line\">  const Add(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    // this.add,</span><br><span class=\"line\">  &#125;) : super(key: key);</span><br><span class=\"line\">  // final int curNum;</span><br><span class=\"line\">  // final VoidCallback add;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    MainProvider provider = Provider.of&lt;MainProvider&gt;(context);</span><br><span class=\"line\">    return Container(</span><br><span class=\"line\">      child: Container(</span><br><span class=\"line\">        child: FlatButton(</span><br><span class=\"line\">          child: Text(</span><br><span class=\"line\">            &apos;+&apos;,</span><br><span class=\"line\">            style: TextStyle(fontSize: 30),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          onPressed: () &#123;</span><br><span class=\"line\">            provider.add();</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"\n\n<h2 id=\"main-provider-dart\"><a href=\"#main-provider-dart\" class=\"headerlink\" title=\"main_provider.dart\"></a>main_provider.dart</h2><p>废话不多说 直接上代码 😃</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">//定义作用区间 状态管理与界面抽离 祖先 父 子 孙子 统一操作数据</span><br><span class=\"line\">class MainProvider extends ChangeNotifier &#123;</span><br><span class=\"line\">  int curNum = 0;</span><br><span class=\"line\">  add() &#123;</span><br><span class=\"line\">    curNum += 1;</span><br><span class=\"line\">    notifyListeners();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  minus() &#123;</span><br><span class=\"line\">    curNum -= 1;</span><br><span class=\"line\">    notifyListeners();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"UIAutomator2的使用","_content":"\nuiautomator2 是一个 python 库，用于 Android 的 UI 自动化测试，其底层基于 Google uiautomator，Google 提供的 uiautomator 库可以获取屏幕上任意一个 APP 的任意一个控件属性，并对其进行任意操作\n\npython-uiautomator2 封装了谷歌自带的 uiautomator2 测试框架，提供便利的 python 接口。他允许测试人员直接在 PC 上编写 Python 的测试代码，操作手机应用，完成自动化，大大提高了自动化代码编写的效率。\n\n- python 端: 运行脚本，并向移动设备发送 HTTP 请求\n\n- 移动设备：移动设备上运行了封装了 uiautomator2 的 HTTP 服务，解析收到的请求，并转化成 uiautomator2 的代码。\n\n整个过程\n\n1.  在移动设备上安装 atx-agent(守护进程), 随后 atx-agent 启动 uiautomator2 服务 (默认 7912 端口) 进行监听\n2.  在 PC 上编写测试脚本并执行（相当于发送 HTTP 请求到移动设备的 server 端）\n3.  移动设备通过 WIFI 或 USB 接收到 PC 上发来的 HTTP 请求，执行制定的操作\n\n## [](#调用uiautomator2的过程 '调用uiautomator2的过程')调用 uiautomator2 的过程\n\n1.  配置手机设备参数，设置具体操作的是哪一台手机\n2.  抓取手机上应用的控件，制定对应的控件来进行操作\n3.  抓取手机上应用的控件，制定对应的控件来进行操作抓取手机上应用的控件，制定对应的控件来进行操作  \n    对抓取到的控件进行操作，比如点击、填写参数等。\n\n## [](#设备连接方法，有两种 '设备连接方法，有两种')设备连接方法，有两种\n\npython-uiautomator2 连接手机的方式有两种，一种是通过 WIFI，另外一种是通过 USB。两种方法各有优缺点。  \nWIFI 最便利的地方要数可以不用连接数据线，USB 则可以用在 PC 和手机网络不在一个网段用不了的情况。\n\n1.  通过 WiFi，假设设备 IP 192.168.5.4 和您的 PC 在同一网络中\n\n    ```\n    import uiautomator2 as u2\n    d = u2.connect('192.168.5.4') # WIFI链接设备。或者u2.connect_wifi('10.0.0.1')\n    ```\n\n\n    ```\n\n2.  通过 USB， 假设设备序列是 123456789F（见 adb devices）\n\n    ```\n    import uiautomator2 as u2\n    d = u2.connect('123456789F') # USB链接设备。或者u2.connect_usb('123456f')\n    #d = u2.connect_usb()#当前只有一个设备时可以用这个\n    ```\n\n\n    ```\n\n在没有参数的情况下调用 u2.connect()， uiautomator2 将从环境变量 ANDROID_DEVICE_IP 获取设备 IP。如果这个环境变量是空的，uiautomator 将返回 connect_usb，您需要确保只有一个设备连接到计算机。\n\n## [](#检查并维持设备端守护进程处于运行状态 '检查并维持设备端守护进程处于运行状态')检查并维持设备端守护进程处于运行状态\n\n```\nd.healthcheck()\n\n\n```\n\n## [](#停用UiAutomator的守护程序 '停用UiAutomator的守护程序?')停用 UiAutomator 的守护程序?\n\n```\nd.service('uiautomator').stop()\n\n\n```\n\n## [](#打开调试开关 '打开调试开关')打开调试开关\n\n```\nd.debug = True\nd.info\n'''\n返回\n12:32:47.182 $ curl -X POST -d '{\"jsonrpc\": \"2.0\", \"id\": \"b80d3a488580be1f3e9cb3e926175310\", \"method\": \"deviceInfo\", \"params\": {}}' 'http://127.0.0.1:54179/jsonrpc/0'\n12:32:47.225 Response >>>\n{\"jsonrpc\":\"2.0\",\"id\":\"b80d3a488580be1f3e9cb3e926175310\",\"result\":{\"currentPackageName\":\"com.android.mms\",\"displayHeight\":1920,\"displayRotation\":0,\"displaySizeDpX\":360,\"displaySizeDpY\":640,\"displayWidth\":1080,\"productName\"\n:\"odin\",\"screenOn\":true,\"sdkInt\":25,\"naturalOrientation\":true}}\n'''\n\n\n```\n\n## [](#安装应用，只能从URL安装 '安装应用，只能从URL安装')安装应用，只能从 URL 安装\n\n```\nd.app_install('http://some-domain.com/some.apk')#引号内为下载apk地址\n\n\n```\n\n## [](#启动应用 '启动应用')启动应用\n\n```\nd.app_start('com.ruguoapp.jike')#引号内为包名称\n\n\n```\n\n## [](#停止应用 '停止应用')停止应用\n\n```\n#相当于'am force-stop'强制停止应用\nd.app_stop('com.example.hello_world')\n#相当于'pm clear' 清空App数据\nd.app_clear('com.example.hello_world')\n\n\n```\n\n## [](#停止所有正在运行的应用程序 '停止所有正在运行的应用程序')停止所有正在运行的应用程序\n\n```\n# 停止所有\nd.app_stop_all()\n# 停止所有应用程序，除了com.examples.demo\nd.app_stop_all(excludes=['com.examples.demo'])\n\n\n```\n\n## [](#跳过弹窗，禁止弹窗 '跳过弹窗，禁止弹窗')跳过弹窗，禁止弹窗\n\n```\nd.disable_popups（）#自动跳过弹出窗口\nd.disable_popups（假）#禁用自动跳过弹出窗\n\n\n```\n\n## [](#Session 'Session')Session\n\nSession 表示应用程序的生命周期。可用于启动应用，检测应用崩溃\n\n- 启动和关闭应用程序\n\n  ```\n  sess = d.session(\"com.netease.cloudmusic\") # start 网易云音乐\n  sess.close() # 停止网易云音乐\n  ```\n\n```\n\n- 使用 python with 启动和关闭应用程序\n\n```\n\nwith d.session(\"com.netease.cloudmusic\") as sess:\nsess(text=\"Play\").click()\n\n```\n\n- 链接正在运行的应用\n\n```\n\nsess = d.session（“ com.netease.cloudmusic ”，attach = True）\n\n```\n\n- 检测应用崩溃\n\n```\n\n# App 正在运行时\n\nsess(text=\"Music\").click() # 操作是正常的\n\n# App 崩溃时\n\nsess(text=\"Music\").click() # 引发会话中断错误 SessionBrokenError\n\n# session 下的其他函数调用也会引发 SessionBrokenError 错误\n\n```\n\n```\n\n# 检查会话是否正确。\n\n# 警告:函数名将来可能会更改\n\nsess.running() # True or False\n\n```\n\n## [](#获取设备信息 '获取设备信息')获取设备信息\n\n- 获取基本信息\n\n```\n\nd.info\n\n```\n\n以下是可能的输出：\n\n```\n\n{\nu'displayRotation': 0,\nu'displaySizeDpY': 640,\nu'displaySizeDpX': 360,\nu'currentPackageName': u'com.android.launcher',\nu'productName': u'takju',\nu'displayWidth': 720,\nu'sdkInt': 18,\nu'displayHeight': 1184,\nu'naturalOrientation': True\n}\n\n```\n\n- 获取窗口大小\n\n```\n\nd.window_size()\n\n# 设备垂直输出示例: (1080, 1920)\n\n# 设备水平输出示例: (1920, 1080)\n\n```\n\n- 获取当前应用程序信息。对于某些 android 设备，输出可以为空 (参见输出示例 3)\n\n```\n\nd.current_app()\n\n# 输出示例 1: {'package': 'com.netease.example', 'activity': '.Client', 'pid': 23710}\n\n# 输出示例 2: {'package': 'com.ruguoapp.jike', 'activity': 'com.ruguoapp.jike.business.video.ui.activity.videolist.VideoListActivity'}\n\n# 输出示例 3: {'package': None, 'activity': None}\n\n```\n\n- 获取设备序列号\n\n```\n\nd.serial\n\n# 输出示例: 74aAEDR428Z9\n\n```\n\n- 获取 WIFI IP\n\n```\n\nprint(d.wlan_ip) #输出示例:10.0.0.1\n\n```\n\n- 获取详细的设备信息\n\n```\n\nprint(d.device_info)\n\n```\n\n下面是一个可能的输出:\n\n```\n\n{'udid': '3578298f-b4:0b:44:e6:1f:90-OD103',\n'version': '7.1.1',\n'serial': '3578298f',\n'brand': 'SMARTISAN',\n'model': 'OD103',\n'hwaddr': 'b4:0b:44:e6:1f:90',\n'port': 7912,\n'sdk': 25,\n'agentVersion': 'dev',\n'display': {'width': 1080, 'height': 1920},\n'battery': {'acPowered': False,\n'usbPowered': False,\n'wirelessPowered': False,\n'status': 3,\n'health': 0,\n'present': True,\n'level': 99,\n'scale': 100,\n'voltage': 4316,\n'temperature': 272,\n'technology': 'Li-ion'},\n'memory': {'total': 3690280, 'around': '4 GB'},\n'cpu': {'cores': 8, 'hardware': 'Qualcomm Technologies, Inc MSM8953Pro'},\n'presenceChangedAt': '0001-01-01T00:00:00Z',\n'usingBeganAt': '0001-01-01T00:00:00Z'}\n\n```\n\n## [](#获取应用信息 '获取应用信息')获取应用信息\n\n```\n\nd.app_info(\"com.examples.demo\")\n\n# 会输出\n\n#{\n\n# \"mainActivity\": \"com.github.uiautomator.MainActivity\",\n\n# \"label\": \"ATX\",\n\n# \"versionName\": \"1.1.7\",\n\n# \"versionCode\": 1001007,\n\n# \"size\":1760809\n\n#}\n\n# 保存应用程序图标\n\nimg = d.app_icon(\"com.examples.demo\")\nimg.save(\"icon.png\")\n\n```\n\n## [](#推拉文件 '推拉文件')推拉文件\n\n- 将文件推送到设备\n\n```\n\n# push 文件夹\n\nd.push(\"foo.txt\", \"/sdcard/\")\n\n# push 和重命名\n\nd.push(\"foo.txt\", \"/sdcard/bar.txt\")\n\n# push fileobj\n\nwith open(\"foo.txt\", 'rb') as f:\nd.push(f, \"/sdcard/\")\n\n# 推动和更改文件访问模式\n\nd.push(\"foo.sh\", \"/data/local/tmp/\", mode=0o755)\n\n```\n\n- 从设备中拉出一个文件\n\n```\n\nd.pull(\"/sdcard/tmp.txt\", \"tmp.txt\")\n\n# 如果在设备上找不到文件，FileNotFoundError 将引发\n\nd.pull(\"/sdcard/some-file-not-exists.txt\", \"tmp.txt\")\n\n```\n\n## [](#关键事件 '关键事件')关键事件\n\n- 打开 / 关闭屏幕\n\n```\n\nd.screen_on（）＃打开屏幕\nd.screen_off（）＃关闭屏幕\n\n```\n\n- 获取当前屏幕状态\n\n```\n\nd.info.get（' screenOn '）#需要 Android> = 4.4\n\n```\n\n- 硬键盘和软键盘操作\n\n```\n\nd.press(\"home\") # 点击 home 键\nd.press(\"back\") # 点击 back 键\nd.press(\"left\") # 点击左键\nd.press(\"right\") # 点击右键\nd.press(\"up\") # 点击上键\nd.press(\"down\") # 点击下键\nd.press(\"center\") # 点击选中\nd.press(\"menu\") # 点击 menu 按键\nd.press(\"search\") # 点击搜索按键\nd.press(\"enter\") # 点击 enter 键\nd.press(\"delete\") # 点击删除按键\nd.press(\"recent\") # 点击近期活动按键\nd.press(\"volume_up\") # 音量+\nd.press(\"volume_down\") # 音量-\nd.press(\"volume_mute\") # 静音\nd.press(\"camera\") # 相机\nd.press(\"power\") #电源键\n\n```\n\n你可以在 [Android KeyEvnet](https://developer.android.com/reference/android/view/KeyEvent.html) 上找到所有的关键代码定义\n\n- 解锁屏幕\n\n```\n\nd.unlock()\n\n# 相当于\n\n# 1. 发射活动:com.github.uiautomator.ACTION_IDENTIFY\n\n# 2. 按 home 键\n\n```\n\n## [](#手势与设备的交互 '手势与设备的交互')手势与设备的交互\n\n- 单击屏幕\n\n```\n\nd.click（x，y）\n\n```\n\n- 双击屏幕\n\n```\n\nd.double_click（x，y）\nd.double_click（X，Y，0.1）＃默认两个单击之间间隔时间为 0.1 秒\n\n```\n\n- 长按\n\n```\n\nd.long_click（x，y）\nd.long_click（X，Y，0.5）#长按 0.5 秒（默认）\n\n```\n\n- 滑动\n\n```\n\nd.swipe(sx, sy, ex, ey)\nd.swipe(sx, sy, ex, ey, 0.5) #滑动 0.5s(default)\n\n```\n\n- 拖动\n\n```\n\nd.drag(sx, sy, ex, ey)\nd.drag(sx, sy, ex, ey, 0.5)#拖动 0.5s(default)\n\n```\n\n- 滑动点 多用于九宫格解锁，提前获取到每个点的相对坐标（这里支持百分比），\n更详细的使用参考这个帖子 [使用 u2 实现九宫图案解锁](https://testerhome.com/topics/11034)\n\n```\n\n#从点(x0, y0)滑到点(x1, y1)再滑到点(x2, y2) #两点之间的滑动速度是 0.2 秒\nd.swipe((x0, y0), (x1, y1), (x2, y2), 0.2)\n\n```\n\n注意：单击，滑动，拖动操作支持百分比位置值。例：\n\n```\n\nd.long_click(0.5, 0.5) 表示长按屏幕中心\n\n```\n\n## [](#屏幕相关的 '屏幕相关的')屏幕相关的\n\n- 检索方向\n\n```\n\nd.orientation\n\n# 检索方向。输出可以是 \"natural\" or \"left\" or \"right\" or \"upsidedown\"\n\n```\n\n- 设置方向\n\n```\n\nd.set_orientation('l') # or \"left\"\nd.set_orientation(\"l\") # or \"left\"\nd.set_orientation(\"r\") # or \"right\"\nd.set_orientation(\"n\") # or \"natural\"\n\n```\n\n- 冻结 / 开启旋转\n\n```\n\nd.freeze_rotation()# 冻结旋转\nd.freeze_rotation(False)# 开启旋转\n\n```\n\n- 截图\n\n```\n\n# 截图并保存到电脑上的一个文件中，需要 Android>=4.2。\n\nd.screenshot(\"home.jpg\")\n\n# 得到 PIL.Image 格式的图像. 但你必须先安装 pillow\n\nimage = d.screenshot() # default format=\"pillow\"\nimage.save(\"home.jpg\") # 或'home.png'，目前只支持 png 和 jpg 格式的图像\n\n# 得到 OpenCV 的格式图像。当然，你需要 numpy 和 cv2 安装第一个\n\nimport cv2\nimage = d.screenshot(format='opencv')\ncv2.imwrite('home.jpg', image)\n\n# 获取原始 JPEG 数据\n\nimagebin = d.screenshot(format='raw')\nopen(\"some.jpg\", \"wb\").write(imagebin)\n\n```\n\n- 转储 UI 层次结构\n\n```\n\n# get the UI hierarchy dump content (unicoded).（获取 UI 层次结构转储内容）\n\nd.dump_hierarchy()\n\n```\n\n- 打开通知或快速设置\n\n```\n\nd.open_notification（）#下拉打开通知栏\nd.open_quick_settings（）#下拉打开快速设置栏\n\n```\n\n## [](#选择Ui对象 '选择Ui对象')选择 Ui 对象\n\n选择器是一种方便的机制，用于在当前窗口中标识特定的 UI 对象。\n\n```\n\n#选择带有文本'Clock'的对象，它的类名是'android.widget.TextView'\nd(text='Clock', className='android.widget.TextView')\n\n```\n\n选择器支持以下参数。有关详细信息，请参阅 [UiSelector Java doc](http://developer.android.com/tools/help/uiautomator/UiSelector.html) for detailed information.\n\n- `text`, `textContains`, `textMatches`, `textStartsWith`\n- `className`, `classNameMatches`\n- `description`, `descriptionContains`, `descriptionMatches`, `descriptionStartsWith`\n- `checkable`, `checked`, `clickable`, `longClickable`\n- `scrollable`, `enabled`,`focusable`, `focused`, `selected`\n- `packageName`, `packageNameMatches`\n- `resourceId`, `resourceIdMatches`\n- `index`, `instance`\n\n## 获取所选 ui 对象状态及其信息\n\n- 检查特定的 UI 对象是否存在\n\n```\n\nd(text=\"Settings\").exists # 返回布尔值，如果存在则为 True，否则为 False\nd.exists(text=\"Settings\") # 另一种写法 #高级用法\nd(text=\"Settings\").exists(timeout=3) # 等待'Settings'在 3 秒钟出现\n\n```\n\n- 获取特定 UI 对象的信息\n\n```\n\nd(text=\"Settings\").info\n\n```\n\n下面是一个可能的输出\n\n```\n\n{\n'bounds': {\n'bottom': 2744,\n'left': 386,\n'right': 478,\n'top': 2679},\n'childCount': 0,\n'className': 'android.widget.TextView',\n'contentDescription': None,\n'packageName': 'com.ruguoapp.jike',\n'resourceName': 'com.ruguoapp.jike:id/tv_main_tab_title',\n'text': '动态',\n'visibleBounds': {\n'bottom': 2744,\n'left': 386,\n'right': 478,\n'top': 2679},\n'checkable': False,\n'checked': False,\n'clickable': False,\n'enabled': True,\n'focusable': False,\n'focused': False,\n'longClickable': False,\n'scrollable': False,\n'selected': False\n}\n\n```\n\n- 获取 / 设置 / 清除可编辑字段的文本 (例如 EditText 小部件)\n\n```\n\nd(text=\"Settings\").get_text() #得到文本小部件\nd(text=\"Settings\").set_text(\"My text...\") #设置文本\nd(text=\"Settings\").clear_text() #清除文本\n\n```\n\n- 获取 Widget 中心点\n\n```\n\nd(text=\"Settings\").center()\n#d(text=\"Settings\").center(offset=(0, 0)) # 基准位置左前\n\n```\n\n## [](#对选定UI对象的操作 '对选定UI对象的操作')对选定 UI 对象的操作\n\n- UI 对象有五种定位方式\ntext、resourceId、description、className、xpath、坐标\n\n- 执行单击 UI 对象\n\n```\n\n#text 定位单击\nd(text=\"Settings\").click()\nd(text=\"Settings\", class).click()\n#resourceId 定位单击\nd(resourceId=\"com.ruguoapp.jike:id/tv_title\", class).click()\n#description 定位单击\nd(description=\"设置\").click()\nd(description=\"设置\", class).click()\n#className 定位单击\nd(class).click()\n#xpath 定位单击\nd.xpath(\"//android.widget.FrameLayout[@index='0']/android.widget.LinearLayout[@index='0']\").click() #坐标单击\nd.click(182, 1264)\n\n```\n\n```\n\n# 等待元素出现(最多 10 秒），出现后单击\n\nd(text=\"Settings\").click(timeout=10)\n\n# 在 10 秒时点击，默认的超时 0\n\nd(text='Skip').click_exists(timeout=10.0)\n\n# 单击直到元素消失，返回布尔\n\nd(text=\"Skip\").click_gone(maxretry=10, interval=1.0) # maxretry 默认值 10,interval 默认值 1.0\n\n# 点击基准位置偏移\n\nd(text=\"Settings\").click(offset=(0.5, 0.5)) # 点击中心位置，同 d(text=\"Settings\").click()\nd(text=\"Settings\").click(offset=(0, 0)) # 点击左前位置\nd(text=\"Settings\").click(offset=(1, 1)) # 点击右下\n\n```\n\n- 执行双击 UI 对象\n\n```\n\nd(text=\"设置\").double_click() #双击特定 ui 对象的中心\nd.double_click(x, y, 0.1)#两次单击之间的默认持续时间为 0.1 秒\n\n```\n\n- 执行长按 UI 对象\n\n```\n\n# 长按特定 UI 对象的中心\n\nd(text=\"Settings\").long_click()\nd.long_click(x, y, 0.5) # 长按坐标位置 0.5s 默认\n\n```\n\n## 特定 UI 对象的手势操作\n\n- 将 UI 对象拖向另一个点或另一个 UI 对象\n\n```\n\n# Android<4.3 不能使用 drag.\n\n# 在 0.5 秒内将 UI 对象拖到屏幕点(x, y)\n\nd(text=\"Settings\").drag_to(x, y, duration=0.5)\n\n# 将 UI 对象拖到另一个 UI 对象的中心位置，时间为 0.25 秒\n\nd(text=\"Settings\").drag_to(text=\"Clock\", duration=0.25)\n\n```\n\n- == 未懂 == 从 UI 对象的中心向其边缘滑动\n滑动支持 4 个方向: 左、右、上、下\n\n```\n\n     d(text=\"Settings\").swipe(\"right\")\n     d(text=\"Settings\").swipe(\"left\", steps=10)\n     d(text=\"Settings\").swipe(\"up\", steps=20) # 1步约为5ms, 20步约为0.1s\n     d(text=\"Settings\").swipe(\"down\", steps=20)\n\n````\n\n- ==未懂==两点手势操作，从一个点到另一个点\n\n```python\nd(text=\"Settings\").gesture((sx1, sy1), (sx2, sy2), (ex1, ey1), (ex2, ey2))\n\n\n````\n\n- 特定 UI 对象的手势操作  \n  支持两种手势：从边缘到中心、从中心到边缘\n\n  ```\n  #注意:缩放要到安卓4.3才能设置。\n  #从边缘到中心\n  d(text=\"Settings\").pinch_in(percent=100, steps=10)\n  # 从中心到边缘\n  d(text=\"Settings\").pinch_out()\n  ```\n\n```\n\n- 等待，直到特定的 UI 出现或消失\n\n```\n\n# 等待 ui 对象出现\n\nd(text=\"Settings\").wait(timeout=3.0) # 返回布尔值\n\n# 等待 ui 对象的消失\n\nd(text=\"Settings\").wait_gone(timeout=1.0)\n\n````\n\n默认超时为 20 秒。有关详细信息，请参阅全局设置\n\n* == 未懂 == 对特定的 ui 对象执行投掷 (可滚动)\n可能的属性\n\n1.  `horiz`（水平） 或 `vert`（垂直）\n2.  `forward`（向前）或`backward`（向后）或`toBeginning`（开始位置）或`toEnd`（结束位置）\n\n    ```\n    #向前投掷(默认)垂直(默认)\n    d(scrollable=True).fling()\n    #垂直向后滚动\n    d(scrollable=True).fling.vert.forward()\n    #没搞懂\n    d(scrollable=True).fling.vert.backward()\n    #没搞懂\n    d(scrollable=True).fling.horiz.toBeginning(max_swipes=1000)\n    #滚动到结束\n    d(scrollable=True).fling.toEnd()\n\n\n    ```\n\n* == 未懂 == 在特定的 ui 对象上执行滚动 (可滚动)\n可能的属性\n\n1.  `horiz`（水平） 或 `vert`（垂直）\n2.  `forward`（向前）或`backward`（向后）或`toBeginning`（开始位置）或`toEnd`（结束位置）或 `to` 来\n\n    ```\n    # 向前滚动(默认)垂直(默认)\n    d(scrollable=True).scroll(steps=10)\n    # 水平向前滚动\n    d(scrollable=True).scroll.horiz.forward(steps=100)\n    #垂直向后滚动\n    d(scrollable=True).scroll.vert.backward()\n    #滚动到开始水平\n    d(scrollable=True).scroll.horiz.toBeginning(steps=100, max_swipes=1000)\n    # 滚动到垂直结束\n    d(scrollable=True).scroll.toEnd()\n    #垂直向前滚动，直到出现特定的ui对象\n    d(scrol)\n\n\n    ```\n\n## [](#Watcher（-未懂-） 'Watcher（==未懂==）')Watcher（== 未懂 ==）\n\n当选择器没有找到匹配项时，可以注册 [watchers](http://developer.android.com/tools/help/uiautomator/UiWatcher.html) 来执行一些操作。\n\n- 注册 Watcher\n\n当选择器找不到匹配项时，uiautomator2 将运行所有注册的 watchers.\n当条件匹配时单击目标\n\n````\n\nd.watcher(\"AUTO_FC_WHEN_ANR\").when(text=\"ANR\").when(text=\"Wait\") \\\n .click(text=\"Force Close\")\n\n# d.watcher(name) ## 创建一个新的名为 watcher 的程序。\n\n# .when(condition) ## 监视程序的用户选择条件。\n\n# .click(target) ## 对目标 UiSelector 执行单击操作\n\n```\n\n- 还有一个关于点击的技巧。您可以不带参数地使用 click。\n\n```\n\nd.watcher(\"ALERT\").when(text=\"OK\").click()\n\n# 一样\n\nd.watcher(\"ALERT\").when(text=\"OK\").click(text=\"OK\")\n\n```\n\n- 当条件为真时按下键\n\n```\n\nd.watcher(\"AUTO_FC_WHEN_ANR\").when(text=\"ANR\").when(text=\"Wait\") \\\n .press(\"back\", \"home\")\n\n# d.watcher(name) ## 创建一个新的名为 watcher 的程序\n\n# .when(condition) ## 监视程序的用户选择条件\n\n# .press(<keyname>, ..., <keyname>.() ## 按顺序按下一个键\n\n```\n\n- 检查指定的监视程序是否触发\n一个监视程序被触发，这意味着运行了监视程序并匹配了它的所有条件。\n\n```\n\nd.watcher(\"watcher_name\").triggered\n\n# 如果指定的监视程序被触发，则为 true，否则为 false\n\n```\n\n- 删除指定的监视程序\n\n```\n\n# 删除观察者\n\nd.watcher(\"watcher_name\").remove()\n\n```\n\n- 列出所有观察者\n\n```\n\nd.watchers #列出所有注册观察员的名单\n\n```\n\n- 检查任何触发的监视程序\n\n```\n\nd.watchers.triggered\n\n# 在任何监视程序触发时为真\n\n```\n\n- 重置所有触发观察者\n\n```\n\n# 重置所有触发的观察者，然后是 d.观察者。触发将为 false。\n\nd.watchers.reset()\n\n```\n\n- 删除观察者\n\n```\n\n# 删除所有注册观察者\n\nd.watchers.remove()\n\n# 删除指定的监视程序，与 d.watcher(“watcher_name”)相同。\n\nd.watchers.remove(\"watcher_name\")\n\n```\n\n- 强制运行所有的观察者\n\n```\n\n# 强制运行所有注册的观察者\n\nd.watchers.run()\n\n```\n\n- 当页面更新时运行所有观察者。\n通常可以用来自动点击权限确认框，或者自动安装\n\n```\n\nd.watcher(\"OK\").when(text=\"OK\").click(text=\"OK\")\n\n# 启用自动触发监视程序\n\nd.watchers.watched = True\n\n# 禁用自动触发监视程序\n\nd.watchers.watched = False\n\n# 获取当前触发器监视者状态\n\nassert d.watchers.watched == False\n\n```\n\n另外文档还是有很多没有写，推荐直接去看源码 [**init**.py](https://vic.kim/2019/05/20/UIAutomator2%E7%9A%84%E4%BD%BF%E7%94%A8/uiautomator2/__init__.py)\n\n## [](#全局设置 '全局设置')全局设置\n\n```\n\n# 设置每次 UI 点击后 1.5 秒的延迟\n\nd.click_post_delay = 1.5 # 默认没有延迟\n\n# 设置默认元素等待超时(秒)\n\nd.wait_timeout = 30.0 # 默认的 20.0\n\n```\n\nUiAutomator 中的超时设置 (隐藏方法)\n\n```\n\n> > d.jsonrpc.getConfigurator()\n> > {'actionAcknowledgmentTimeout': 500,\n> > 'keyInjectionDelay': 0,\n> > 'scrollAcknowledgmentTimeout': 200,\n> > 'waitForIdleTimeout': 0,\n> > 'waitForSelectorTimeout': 0}\n\n> > d.jsonrpc.setConfigurator({\"waitForIdleTimeout\": 100})\n> > {'actionAcknowledgmentTimeout': 500,\n> > 'keyInjectionDelay': 0,\n> > 'scrollAcknowledgmentTimeout': 200,\n> > 'waitForIdleTimeout': 100,\n> > 'waitForSelectorTimeout': 0}\n\n```\n\n为了防止客户端程序响应超时，`waitForIdleTimeout`和`waitForSelectorTimeout`目前已改为`0`\n\nRefs: [Google uiautomator Configurator](https://developer.android.com/reference/android/support/test/uiautomator/Configurator)\n\n## [](#Input-method 'Input method')Input method\n\n这种方法通常用于不知道控件的情况下的输入。第一步需要切换输入法，然后发送 adb 广播命令，具体使用方法如下\n\n```\n\nd.set_fastinput_ime(True) # 切换成 FastInputIME 输入法\nd.send_keys(\"你好 123abcEFG\") # adb 广播输入\nd.clear_text() # 清除输入框所有内容(Require android-uiautomator.apk version >= 1.0.7)\nd.set_fastinput_ime(False) # 切换成正常的输入法\nd.send_action(\"search\") # 模拟输入法的搜索\n\n```\n\n**send_action** 说明\n\n该函数可以使用的参数有 `go search send next done previous`\n\n_什么时候该使用这个函数呢？_\n\n有些时候在 EditText 中输入完内容之后，调用`press(\"search\")` or `press(\"enter\")`发现并没有什么反应。\n这个时候就需要`send_action`函数了，这里用到了只有输入法才能用的 [IME_ACTION_CODE](https://developer.android.com/reference/android/view/inputmethod/EditorInfo)。\n`send_action`先 broadcast 命令发送给输入法操作`IME_ACTION_CODE`，由输入法完成后续跟 EditText 的通信。（原理我不太清楚，有了解的，提 issue 告诉我)\n\n## [](#Toast 'Toast')Toast\n\n- 展示 Toast\n\n```\n\nd.toast.show(\"Hello world\")\nd.toast.show(\"Hello world\", 1.0) # 显示为 1.0，默认为 1.0\n\n```\n\n- 获取 Toast\n\n```\n\n# [参数]\n\n# 5.0: 最大等待超时。默认的 10.0\n\n# 缓存时间 10.0s。如果最近 10s 已经出现 toast，则返回缓存 toast。默认 10.0(将来可能会有变化)\n\n# 如果最终没有 toast，返回\"default message\"。默认没有\n\nd.toast.get_message(5.0, 10.0, \"default message\")\n\n# 常见的使用\n\nassert \"Short message\" in d.toast.get_message(5.0, default=\"\")\n\n#清楚缓存 toast\nd.toast.reset()\n\n# Now d.toast.get_message(0) is None\n\n```\n\n## [](#XPath 'XPath')XPath\n\n- 例如: 其中一个节点的内容\n\n```\n\n<android.widget.TextView\nindex=\"2\"\ntext=\"05:19\"\nresource-id=\"com.netease.cloudmusic:id/qf\"\npackage=\"com.netease.cloudmusic\"\ncontent-desc=\"\"\ncheckable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\"\nscrol\nbounds=\"[957,1602][1020,1636]\" />\n\n```\n\n- xpath 定位和使用方法\n有些属性的名字有修改需要注意\n\n```\n\ndescription -> content-desc\nresourceId -> resource-id\n\n```\n\n- 常见用法\n\n```\n\n# 等待 10s\n\nd.xpath(\"//android.widget.TextView\").wait(10.0)\n\n# 找到并单击\n\nd.xpath(\"//\\*[@content-desc='分享']\").click()\n\n# 检查是否存在\n\nif d.xpath(\"//android.widget.TextView[contains(@text, 'Se')]\").exists:\nprint(\"exists\")\n\n# 获取所有文本视图文本、属性和中心点\n\nfor elem in d.xpath(\"//android.widget.TextView\").all():\nprint(\"Text:\", elem.text) #获取视图文本\nfor elem in d.xpath(\"//android.widget.TextView\").all():\nprint(\"Attrib:\", elem.attrib) #获取属性和中心点 #返回: (100, 200)\nfor elem in d.xpath(\"//android.widget.TextView\").all():\nprint(\"Position:\", elem.center())\n\n```\n\n- 其他 XPath 常见用法\n\n```\n\n# 所有元素\n\n//\\*\n\n# resource-id 包含 login 字符\n\n//\\*[contains(@resource-id, 'login')]\n\n# 按钮包含账号或帐号\n\n//android.widget.Button[contains(@text, '账号') or contains(@text, '帐号')]\n\n# 所有 ImageView 中的第二个\n\n(//android.widget.ImageView)[2]\n\n# 所有 ImageView 中的最后一个\n\n(//android.widget.ImageView)[last()]\n\n# className 包含 ImageView\n\n//\\*[contains(name(), \"ImageView\")]\n\n```\n\n```\n","source":"_posts/UIAutomator2的使用.md","raw":"---\ntitle: UIAutomator2的使用\ncategories:\n  - 移动端\ntags:\n  - iOS\n  - Android\n  - python\n---\n\nuiautomator2 是一个 python 库，用于 Android 的 UI 自动化测试，其底层基于 Google uiautomator，Google 提供的 uiautomator 库可以获取屏幕上任意一个 APP 的任意一个控件属性，并对其进行任意操作\n\npython-uiautomator2 封装了谷歌自带的 uiautomator2 测试框架，提供便利的 python 接口。他允许测试人员直接在 PC 上编写 Python 的测试代码，操作手机应用，完成自动化，大大提高了自动化代码编写的效率。\n\n- python 端: 运行脚本，并向移动设备发送 HTTP 请求\n\n- 移动设备：移动设备上运行了封装了 uiautomator2 的 HTTP 服务，解析收到的请求，并转化成 uiautomator2 的代码。\n\n整个过程\n\n1.  在移动设备上安装 atx-agent(守护进程), 随后 atx-agent 启动 uiautomator2 服务 (默认 7912 端口) 进行监听\n2.  在 PC 上编写测试脚本并执行（相当于发送 HTTP 请求到移动设备的 server 端）\n3.  移动设备通过 WIFI 或 USB 接收到 PC 上发来的 HTTP 请求，执行制定的操作\n\n## [](#调用uiautomator2的过程 '调用uiautomator2的过程')调用 uiautomator2 的过程\n\n1.  配置手机设备参数，设置具体操作的是哪一台手机\n2.  抓取手机上应用的控件，制定对应的控件来进行操作\n3.  抓取手机上应用的控件，制定对应的控件来进行操作抓取手机上应用的控件，制定对应的控件来进行操作  \n    对抓取到的控件进行操作，比如点击、填写参数等。\n\n## [](#设备连接方法，有两种 '设备连接方法，有两种')设备连接方法，有两种\n\npython-uiautomator2 连接手机的方式有两种，一种是通过 WIFI，另外一种是通过 USB。两种方法各有优缺点。  \nWIFI 最便利的地方要数可以不用连接数据线，USB 则可以用在 PC 和手机网络不在一个网段用不了的情况。\n\n1.  通过 WiFi，假设设备 IP 192.168.5.4 和您的 PC 在同一网络中\n\n    ```\n    import uiautomator2 as u2\n    d = u2.connect('192.168.5.4') # WIFI链接设备。或者u2.connect_wifi('10.0.0.1')\n    ```\n\n\n    ```\n\n2.  通过 USB， 假设设备序列是 123456789F（见 adb devices）\n\n    ```\n    import uiautomator2 as u2\n    d = u2.connect('123456789F') # USB链接设备。或者u2.connect_usb('123456f')\n    #d = u2.connect_usb()#当前只有一个设备时可以用这个\n    ```\n\n\n    ```\n\n在没有参数的情况下调用 u2.connect()， uiautomator2 将从环境变量 ANDROID_DEVICE_IP 获取设备 IP。如果这个环境变量是空的，uiautomator 将返回 connect_usb，您需要确保只有一个设备连接到计算机。\n\n## [](#检查并维持设备端守护进程处于运行状态 '检查并维持设备端守护进程处于运行状态')检查并维持设备端守护进程处于运行状态\n\n```\nd.healthcheck()\n\n\n```\n\n## [](#停用UiAutomator的守护程序 '停用UiAutomator的守护程序?')停用 UiAutomator 的守护程序?\n\n```\nd.service('uiautomator').stop()\n\n\n```\n\n## [](#打开调试开关 '打开调试开关')打开调试开关\n\n```\nd.debug = True\nd.info\n'''\n返回\n12:32:47.182 $ curl -X POST -d '{\"jsonrpc\": \"2.0\", \"id\": \"b80d3a488580be1f3e9cb3e926175310\", \"method\": \"deviceInfo\", \"params\": {}}' 'http://127.0.0.1:54179/jsonrpc/0'\n12:32:47.225 Response >>>\n{\"jsonrpc\":\"2.0\",\"id\":\"b80d3a488580be1f3e9cb3e926175310\",\"result\":{\"currentPackageName\":\"com.android.mms\",\"displayHeight\":1920,\"displayRotation\":0,\"displaySizeDpX\":360,\"displaySizeDpY\":640,\"displayWidth\":1080,\"productName\"\n:\"odin\",\"screenOn\":true,\"sdkInt\":25,\"naturalOrientation\":true}}\n'''\n\n\n```\n\n## [](#安装应用，只能从URL安装 '安装应用，只能从URL安装')安装应用，只能从 URL 安装\n\n```\nd.app_install('http://some-domain.com/some.apk')#引号内为下载apk地址\n\n\n```\n\n## [](#启动应用 '启动应用')启动应用\n\n```\nd.app_start('com.ruguoapp.jike')#引号内为包名称\n\n\n```\n\n## [](#停止应用 '停止应用')停止应用\n\n```\n#相当于'am force-stop'强制停止应用\nd.app_stop('com.example.hello_world')\n#相当于'pm clear' 清空App数据\nd.app_clear('com.example.hello_world')\n\n\n```\n\n## [](#停止所有正在运行的应用程序 '停止所有正在运行的应用程序')停止所有正在运行的应用程序\n\n```\n# 停止所有\nd.app_stop_all()\n# 停止所有应用程序，除了com.examples.demo\nd.app_stop_all(excludes=['com.examples.demo'])\n\n\n```\n\n## [](#跳过弹窗，禁止弹窗 '跳过弹窗，禁止弹窗')跳过弹窗，禁止弹窗\n\n```\nd.disable_popups（）#自动跳过弹出窗口\nd.disable_popups（假）#禁用自动跳过弹出窗\n\n\n```\n\n## [](#Session 'Session')Session\n\nSession 表示应用程序的生命周期。可用于启动应用，检测应用崩溃\n\n- 启动和关闭应用程序\n\n  ```\n  sess = d.session(\"com.netease.cloudmusic\") # start 网易云音乐\n  sess.close() # 停止网易云音乐\n  ```\n\n```\n\n- 使用 python with 启动和关闭应用程序\n\n```\n\nwith d.session(\"com.netease.cloudmusic\") as sess:\nsess(text=\"Play\").click()\n\n```\n\n- 链接正在运行的应用\n\n```\n\nsess = d.session（“ com.netease.cloudmusic ”，attach = True）\n\n```\n\n- 检测应用崩溃\n\n```\n\n# App 正在运行时\n\nsess(text=\"Music\").click() # 操作是正常的\n\n# App 崩溃时\n\nsess(text=\"Music\").click() # 引发会话中断错误 SessionBrokenError\n\n# session 下的其他函数调用也会引发 SessionBrokenError 错误\n\n```\n\n```\n\n# 检查会话是否正确。\n\n# 警告:函数名将来可能会更改\n\nsess.running() # True or False\n\n```\n\n## [](#获取设备信息 '获取设备信息')获取设备信息\n\n- 获取基本信息\n\n```\n\nd.info\n\n```\n\n以下是可能的输出：\n\n```\n\n{\nu'displayRotation': 0,\nu'displaySizeDpY': 640,\nu'displaySizeDpX': 360,\nu'currentPackageName': u'com.android.launcher',\nu'productName': u'takju',\nu'displayWidth': 720,\nu'sdkInt': 18,\nu'displayHeight': 1184,\nu'naturalOrientation': True\n}\n\n```\n\n- 获取窗口大小\n\n```\n\nd.window_size()\n\n# 设备垂直输出示例: (1080, 1920)\n\n# 设备水平输出示例: (1920, 1080)\n\n```\n\n- 获取当前应用程序信息。对于某些 android 设备，输出可以为空 (参见输出示例 3)\n\n```\n\nd.current_app()\n\n# 输出示例 1: {'package': 'com.netease.example', 'activity': '.Client', 'pid': 23710}\n\n# 输出示例 2: {'package': 'com.ruguoapp.jike', 'activity': 'com.ruguoapp.jike.business.video.ui.activity.videolist.VideoListActivity'}\n\n# 输出示例 3: {'package': None, 'activity': None}\n\n```\n\n- 获取设备序列号\n\n```\n\nd.serial\n\n# 输出示例: 74aAEDR428Z9\n\n```\n\n- 获取 WIFI IP\n\n```\n\nprint(d.wlan_ip) #输出示例:10.0.0.1\n\n```\n\n- 获取详细的设备信息\n\n```\n\nprint(d.device_info)\n\n```\n\n下面是一个可能的输出:\n\n```\n\n{'udid': '3578298f-b4:0b:44:e6:1f:90-OD103',\n'version': '7.1.1',\n'serial': '3578298f',\n'brand': 'SMARTISAN',\n'model': 'OD103',\n'hwaddr': 'b4:0b:44:e6:1f:90',\n'port': 7912,\n'sdk': 25,\n'agentVersion': 'dev',\n'display': {'width': 1080, 'height': 1920},\n'battery': {'acPowered': False,\n'usbPowered': False,\n'wirelessPowered': False,\n'status': 3,\n'health': 0,\n'present': True,\n'level': 99,\n'scale': 100,\n'voltage': 4316,\n'temperature': 272,\n'technology': 'Li-ion'},\n'memory': {'total': 3690280, 'around': '4 GB'},\n'cpu': {'cores': 8, 'hardware': 'Qualcomm Technologies, Inc MSM8953Pro'},\n'presenceChangedAt': '0001-01-01T00:00:00Z',\n'usingBeganAt': '0001-01-01T00:00:00Z'}\n\n```\n\n## [](#获取应用信息 '获取应用信息')获取应用信息\n\n```\n\nd.app_info(\"com.examples.demo\")\n\n# 会输出\n\n#{\n\n# \"mainActivity\": \"com.github.uiautomator.MainActivity\",\n\n# \"label\": \"ATX\",\n\n# \"versionName\": \"1.1.7\",\n\n# \"versionCode\": 1001007,\n\n# \"size\":1760809\n\n#}\n\n# 保存应用程序图标\n\nimg = d.app_icon(\"com.examples.demo\")\nimg.save(\"icon.png\")\n\n```\n\n## [](#推拉文件 '推拉文件')推拉文件\n\n- 将文件推送到设备\n\n```\n\n# push 文件夹\n\nd.push(\"foo.txt\", \"/sdcard/\")\n\n# push 和重命名\n\nd.push(\"foo.txt\", \"/sdcard/bar.txt\")\n\n# push fileobj\n\nwith open(\"foo.txt\", 'rb') as f:\nd.push(f, \"/sdcard/\")\n\n# 推动和更改文件访问模式\n\nd.push(\"foo.sh\", \"/data/local/tmp/\", mode=0o755)\n\n```\n\n- 从设备中拉出一个文件\n\n```\n\nd.pull(\"/sdcard/tmp.txt\", \"tmp.txt\")\n\n# 如果在设备上找不到文件，FileNotFoundError 将引发\n\nd.pull(\"/sdcard/some-file-not-exists.txt\", \"tmp.txt\")\n\n```\n\n## [](#关键事件 '关键事件')关键事件\n\n- 打开 / 关闭屏幕\n\n```\n\nd.screen_on（）＃打开屏幕\nd.screen_off（）＃关闭屏幕\n\n```\n\n- 获取当前屏幕状态\n\n```\n\nd.info.get（' screenOn '）#需要 Android> = 4.4\n\n```\n\n- 硬键盘和软键盘操作\n\n```\n\nd.press(\"home\") # 点击 home 键\nd.press(\"back\") # 点击 back 键\nd.press(\"left\") # 点击左键\nd.press(\"right\") # 点击右键\nd.press(\"up\") # 点击上键\nd.press(\"down\") # 点击下键\nd.press(\"center\") # 点击选中\nd.press(\"menu\") # 点击 menu 按键\nd.press(\"search\") # 点击搜索按键\nd.press(\"enter\") # 点击 enter 键\nd.press(\"delete\") # 点击删除按键\nd.press(\"recent\") # 点击近期活动按键\nd.press(\"volume_up\") # 音量+\nd.press(\"volume_down\") # 音量-\nd.press(\"volume_mute\") # 静音\nd.press(\"camera\") # 相机\nd.press(\"power\") #电源键\n\n```\n\n你可以在 [Android KeyEvnet](https://developer.android.com/reference/android/view/KeyEvent.html) 上找到所有的关键代码定义\n\n- 解锁屏幕\n\n```\n\nd.unlock()\n\n# 相当于\n\n# 1. 发射活动:com.github.uiautomator.ACTION_IDENTIFY\n\n# 2. 按 home 键\n\n```\n\n## [](#手势与设备的交互 '手势与设备的交互')手势与设备的交互\n\n- 单击屏幕\n\n```\n\nd.click（x，y）\n\n```\n\n- 双击屏幕\n\n```\n\nd.double_click（x，y）\nd.double_click（X，Y，0.1）＃默认两个单击之间间隔时间为 0.1 秒\n\n```\n\n- 长按\n\n```\n\nd.long_click（x，y）\nd.long_click（X，Y，0.5）#长按 0.5 秒（默认）\n\n```\n\n- 滑动\n\n```\n\nd.swipe(sx, sy, ex, ey)\nd.swipe(sx, sy, ex, ey, 0.5) #滑动 0.5s(default)\n\n```\n\n- 拖动\n\n```\n\nd.drag(sx, sy, ex, ey)\nd.drag(sx, sy, ex, ey, 0.5)#拖动 0.5s(default)\n\n```\n\n- 滑动点 多用于九宫格解锁，提前获取到每个点的相对坐标（这里支持百分比），\n更详细的使用参考这个帖子 [使用 u2 实现九宫图案解锁](https://testerhome.com/topics/11034)\n\n```\n\n#从点(x0, y0)滑到点(x1, y1)再滑到点(x2, y2) #两点之间的滑动速度是 0.2 秒\nd.swipe((x0, y0), (x1, y1), (x2, y2), 0.2)\n\n```\n\n注意：单击，滑动，拖动操作支持百分比位置值。例：\n\n```\n\nd.long_click(0.5, 0.5) 表示长按屏幕中心\n\n```\n\n## [](#屏幕相关的 '屏幕相关的')屏幕相关的\n\n- 检索方向\n\n```\n\nd.orientation\n\n# 检索方向。输出可以是 \"natural\" or \"left\" or \"right\" or \"upsidedown\"\n\n```\n\n- 设置方向\n\n```\n\nd.set_orientation('l') # or \"left\"\nd.set_orientation(\"l\") # or \"left\"\nd.set_orientation(\"r\") # or \"right\"\nd.set_orientation(\"n\") # or \"natural\"\n\n```\n\n- 冻结 / 开启旋转\n\n```\n\nd.freeze_rotation()# 冻结旋转\nd.freeze_rotation(False)# 开启旋转\n\n```\n\n- 截图\n\n```\n\n# 截图并保存到电脑上的一个文件中，需要 Android>=4.2。\n\nd.screenshot(\"home.jpg\")\n\n# 得到 PIL.Image 格式的图像. 但你必须先安装 pillow\n\nimage = d.screenshot() # default format=\"pillow\"\nimage.save(\"home.jpg\") # 或'home.png'，目前只支持 png 和 jpg 格式的图像\n\n# 得到 OpenCV 的格式图像。当然，你需要 numpy 和 cv2 安装第一个\n\nimport cv2\nimage = d.screenshot(format='opencv')\ncv2.imwrite('home.jpg', image)\n\n# 获取原始 JPEG 数据\n\nimagebin = d.screenshot(format='raw')\nopen(\"some.jpg\", \"wb\").write(imagebin)\n\n```\n\n- 转储 UI 层次结构\n\n```\n\n# get the UI hierarchy dump content (unicoded).（获取 UI 层次结构转储内容）\n\nd.dump_hierarchy()\n\n```\n\n- 打开通知或快速设置\n\n```\n\nd.open_notification（）#下拉打开通知栏\nd.open_quick_settings（）#下拉打开快速设置栏\n\n```\n\n## [](#选择Ui对象 '选择Ui对象')选择 Ui 对象\n\n选择器是一种方便的机制，用于在当前窗口中标识特定的 UI 对象。\n\n```\n\n#选择带有文本'Clock'的对象，它的类名是'android.widget.TextView'\nd(text='Clock', className='android.widget.TextView')\n\n```\n\n选择器支持以下参数。有关详细信息，请参阅 [UiSelector Java doc](http://developer.android.com/tools/help/uiautomator/UiSelector.html) for detailed information.\n\n- `text`, `textContains`, `textMatches`, `textStartsWith`\n- `className`, `classNameMatches`\n- `description`, `descriptionContains`, `descriptionMatches`, `descriptionStartsWith`\n- `checkable`, `checked`, `clickable`, `longClickable`\n- `scrollable`, `enabled`,`focusable`, `focused`, `selected`\n- `packageName`, `packageNameMatches`\n- `resourceId`, `resourceIdMatches`\n- `index`, `instance`\n\n## 获取所选 ui 对象状态及其信息\n\n- 检查特定的 UI 对象是否存在\n\n```\n\nd(text=\"Settings\").exists # 返回布尔值，如果存在则为 True，否则为 False\nd.exists(text=\"Settings\") # 另一种写法 #高级用法\nd(text=\"Settings\").exists(timeout=3) # 等待'Settings'在 3 秒钟出现\n\n```\n\n- 获取特定 UI 对象的信息\n\n```\n\nd(text=\"Settings\").info\n\n```\n\n下面是一个可能的输出\n\n```\n\n{\n'bounds': {\n'bottom': 2744,\n'left': 386,\n'right': 478,\n'top': 2679},\n'childCount': 0,\n'className': 'android.widget.TextView',\n'contentDescription': None,\n'packageName': 'com.ruguoapp.jike',\n'resourceName': 'com.ruguoapp.jike:id/tv_main_tab_title',\n'text': '动态',\n'visibleBounds': {\n'bottom': 2744,\n'left': 386,\n'right': 478,\n'top': 2679},\n'checkable': False,\n'checked': False,\n'clickable': False,\n'enabled': True,\n'focusable': False,\n'focused': False,\n'longClickable': False,\n'scrollable': False,\n'selected': False\n}\n\n```\n\n- 获取 / 设置 / 清除可编辑字段的文本 (例如 EditText 小部件)\n\n```\n\nd(text=\"Settings\").get_text() #得到文本小部件\nd(text=\"Settings\").set_text(\"My text...\") #设置文本\nd(text=\"Settings\").clear_text() #清除文本\n\n```\n\n- 获取 Widget 中心点\n\n```\n\nd(text=\"Settings\").center()\n#d(text=\"Settings\").center(offset=(0, 0)) # 基准位置左前\n\n```\n\n## [](#对选定UI对象的操作 '对选定UI对象的操作')对选定 UI 对象的操作\n\n- UI 对象有五种定位方式\ntext、resourceId、description、className、xpath、坐标\n\n- 执行单击 UI 对象\n\n```\n\n#text 定位单击\nd(text=\"Settings\").click()\nd(text=\"Settings\", class).click()\n#resourceId 定位单击\nd(resourceId=\"com.ruguoapp.jike:id/tv_title\", class).click()\n#description 定位单击\nd(description=\"设置\").click()\nd(description=\"设置\", class).click()\n#className 定位单击\nd(class).click()\n#xpath 定位单击\nd.xpath(\"//android.widget.FrameLayout[@index='0']/android.widget.LinearLayout[@index='0']\").click() #坐标单击\nd.click(182, 1264)\n\n```\n\n```\n\n# 等待元素出现(最多 10 秒），出现后单击\n\nd(text=\"Settings\").click(timeout=10)\n\n# 在 10 秒时点击，默认的超时 0\n\nd(text='Skip').click_exists(timeout=10.0)\n\n# 单击直到元素消失，返回布尔\n\nd(text=\"Skip\").click_gone(maxretry=10, interval=1.0) # maxretry 默认值 10,interval 默认值 1.0\n\n# 点击基准位置偏移\n\nd(text=\"Settings\").click(offset=(0.5, 0.5)) # 点击中心位置，同 d(text=\"Settings\").click()\nd(text=\"Settings\").click(offset=(0, 0)) # 点击左前位置\nd(text=\"Settings\").click(offset=(1, 1)) # 点击右下\n\n```\n\n- 执行双击 UI 对象\n\n```\n\nd(text=\"设置\").double_click() #双击特定 ui 对象的中心\nd.double_click(x, y, 0.1)#两次单击之间的默认持续时间为 0.1 秒\n\n```\n\n- 执行长按 UI 对象\n\n```\n\n# 长按特定 UI 对象的中心\n\nd(text=\"Settings\").long_click()\nd.long_click(x, y, 0.5) # 长按坐标位置 0.5s 默认\n\n```\n\n## 特定 UI 对象的手势操作\n\n- 将 UI 对象拖向另一个点或另一个 UI 对象\n\n```\n\n# Android<4.3 不能使用 drag.\n\n# 在 0.5 秒内将 UI 对象拖到屏幕点(x, y)\n\nd(text=\"Settings\").drag_to(x, y, duration=0.5)\n\n# 将 UI 对象拖到另一个 UI 对象的中心位置，时间为 0.25 秒\n\nd(text=\"Settings\").drag_to(text=\"Clock\", duration=0.25)\n\n```\n\n- == 未懂 == 从 UI 对象的中心向其边缘滑动\n滑动支持 4 个方向: 左、右、上、下\n\n```\n\n     d(text=\"Settings\").swipe(\"right\")\n     d(text=\"Settings\").swipe(\"left\", steps=10)\n     d(text=\"Settings\").swipe(\"up\", steps=20) # 1步约为5ms, 20步约为0.1s\n     d(text=\"Settings\").swipe(\"down\", steps=20)\n\n````\n\n- ==未懂==两点手势操作，从一个点到另一个点\n\n```python\nd(text=\"Settings\").gesture((sx1, sy1), (sx2, sy2), (ex1, ey1), (ex2, ey2))\n\n\n````\n\n- 特定 UI 对象的手势操作  \n  支持两种手势：从边缘到中心、从中心到边缘\n\n  ```\n  #注意:缩放要到安卓4.3才能设置。\n  #从边缘到中心\n  d(text=\"Settings\").pinch_in(percent=100, steps=10)\n  # 从中心到边缘\n  d(text=\"Settings\").pinch_out()\n  ```\n\n```\n\n- 等待，直到特定的 UI 出现或消失\n\n```\n\n# 等待 ui 对象出现\n\nd(text=\"Settings\").wait(timeout=3.0) # 返回布尔值\n\n# 等待 ui 对象的消失\n\nd(text=\"Settings\").wait_gone(timeout=1.0)\n\n````\n\n默认超时为 20 秒。有关详细信息，请参阅全局设置\n\n* == 未懂 == 对特定的 ui 对象执行投掷 (可滚动)\n可能的属性\n\n1.  `horiz`（水平） 或 `vert`（垂直）\n2.  `forward`（向前）或`backward`（向后）或`toBeginning`（开始位置）或`toEnd`（结束位置）\n\n    ```\n    #向前投掷(默认)垂直(默认)\n    d(scrollable=True).fling()\n    #垂直向后滚动\n    d(scrollable=True).fling.vert.forward()\n    #没搞懂\n    d(scrollable=True).fling.vert.backward()\n    #没搞懂\n    d(scrollable=True).fling.horiz.toBeginning(max_swipes=1000)\n    #滚动到结束\n    d(scrollable=True).fling.toEnd()\n\n\n    ```\n\n* == 未懂 == 在特定的 ui 对象上执行滚动 (可滚动)\n可能的属性\n\n1.  `horiz`（水平） 或 `vert`（垂直）\n2.  `forward`（向前）或`backward`（向后）或`toBeginning`（开始位置）或`toEnd`（结束位置）或 `to` 来\n\n    ```\n    # 向前滚动(默认)垂直(默认)\n    d(scrollable=True).scroll(steps=10)\n    # 水平向前滚动\n    d(scrollable=True).scroll.horiz.forward(steps=100)\n    #垂直向后滚动\n    d(scrollable=True).scroll.vert.backward()\n    #滚动到开始水平\n    d(scrollable=True).scroll.horiz.toBeginning(steps=100, max_swipes=1000)\n    # 滚动到垂直结束\n    d(scrollable=True).scroll.toEnd()\n    #垂直向前滚动，直到出现特定的ui对象\n    d(scrol)\n\n\n    ```\n\n## [](#Watcher（-未懂-） 'Watcher（==未懂==）')Watcher（== 未懂 ==）\n\n当选择器没有找到匹配项时，可以注册 [watchers](http://developer.android.com/tools/help/uiautomator/UiWatcher.html) 来执行一些操作。\n\n- 注册 Watcher\n\n当选择器找不到匹配项时，uiautomator2 将运行所有注册的 watchers.\n当条件匹配时单击目标\n\n````\n\nd.watcher(\"AUTO_FC_WHEN_ANR\").when(text=\"ANR\").when(text=\"Wait\") \\\n .click(text=\"Force Close\")\n\n# d.watcher(name) ## 创建一个新的名为 watcher 的程序。\n\n# .when(condition) ## 监视程序的用户选择条件。\n\n# .click(target) ## 对目标 UiSelector 执行单击操作\n\n```\n\n- 还有一个关于点击的技巧。您可以不带参数地使用 click。\n\n```\n\nd.watcher(\"ALERT\").when(text=\"OK\").click()\n\n# 一样\n\nd.watcher(\"ALERT\").when(text=\"OK\").click(text=\"OK\")\n\n```\n\n- 当条件为真时按下键\n\n```\n\nd.watcher(\"AUTO_FC_WHEN_ANR\").when(text=\"ANR\").when(text=\"Wait\") \\\n .press(\"back\", \"home\")\n\n# d.watcher(name) ## 创建一个新的名为 watcher 的程序\n\n# .when(condition) ## 监视程序的用户选择条件\n\n# .press(<keyname>, ..., <keyname>.() ## 按顺序按下一个键\n\n```\n\n- 检查指定的监视程序是否触发\n一个监视程序被触发，这意味着运行了监视程序并匹配了它的所有条件。\n\n```\n\nd.watcher(\"watcher_name\").triggered\n\n# 如果指定的监视程序被触发，则为 true，否则为 false\n\n```\n\n- 删除指定的监视程序\n\n```\n\n# 删除观察者\n\nd.watcher(\"watcher_name\").remove()\n\n```\n\n- 列出所有观察者\n\n```\n\nd.watchers #列出所有注册观察员的名单\n\n```\n\n- 检查任何触发的监视程序\n\n```\n\nd.watchers.triggered\n\n# 在任何监视程序触发时为真\n\n```\n\n- 重置所有触发观察者\n\n```\n\n# 重置所有触发的观察者，然后是 d.观察者。触发将为 false。\n\nd.watchers.reset()\n\n```\n\n- 删除观察者\n\n```\n\n# 删除所有注册观察者\n\nd.watchers.remove()\n\n# 删除指定的监视程序，与 d.watcher(“watcher_name”)相同。\n\nd.watchers.remove(\"watcher_name\")\n\n```\n\n- 强制运行所有的观察者\n\n```\n\n# 强制运行所有注册的观察者\n\nd.watchers.run()\n\n```\n\n- 当页面更新时运行所有观察者。\n通常可以用来自动点击权限确认框，或者自动安装\n\n```\n\nd.watcher(\"OK\").when(text=\"OK\").click(text=\"OK\")\n\n# 启用自动触发监视程序\n\nd.watchers.watched = True\n\n# 禁用自动触发监视程序\n\nd.watchers.watched = False\n\n# 获取当前触发器监视者状态\n\nassert d.watchers.watched == False\n\n```\n\n另外文档还是有很多没有写，推荐直接去看源码 [**init**.py](https://vic.kim/2019/05/20/UIAutomator2%E7%9A%84%E4%BD%BF%E7%94%A8/uiautomator2/__init__.py)\n\n## [](#全局设置 '全局设置')全局设置\n\n```\n\n# 设置每次 UI 点击后 1.5 秒的延迟\n\nd.click_post_delay = 1.5 # 默认没有延迟\n\n# 设置默认元素等待超时(秒)\n\nd.wait_timeout = 30.0 # 默认的 20.0\n\n```\n\nUiAutomator 中的超时设置 (隐藏方法)\n\n```\n\n> > d.jsonrpc.getConfigurator()\n> > {'actionAcknowledgmentTimeout': 500,\n> > 'keyInjectionDelay': 0,\n> > 'scrollAcknowledgmentTimeout': 200,\n> > 'waitForIdleTimeout': 0,\n> > 'waitForSelectorTimeout': 0}\n\n> > d.jsonrpc.setConfigurator({\"waitForIdleTimeout\": 100})\n> > {'actionAcknowledgmentTimeout': 500,\n> > 'keyInjectionDelay': 0,\n> > 'scrollAcknowledgmentTimeout': 200,\n> > 'waitForIdleTimeout': 100,\n> > 'waitForSelectorTimeout': 0}\n\n```\n\n为了防止客户端程序响应超时，`waitForIdleTimeout`和`waitForSelectorTimeout`目前已改为`0`\n\nRefs: [Google uiautomator Configurator](https://developer.android.com/reference/android/support/test/uiautomator/Configurator)\n\n## [](#Input-method 'Input method')Input method\n\n这种方法通常用于不知道控件的情况下的输入。第一步需要切换输入法，然后发送 adb 广播命令，具体使用方法如下\n\n```\n\nd.set_fastinput_ime(True) # 切换成 FastInputIME 输入法\nd.send_keys(\"你好 123abcEFG\") # adb 广播输入\nd.clear_text() # 清除输入框所有内容(Require android-uiautomator.apk version >= 1.0.7)\nd.set_fastinput_ime(False) # 切换成正常的输入法\nd.send_action(\"search\") # 模拟输入法的搜索\n\n```\n\n**send_action** 说明\n\n该函数可以使用的参数有 `go search send next done previous`\n\n_什么时候该使用这个函数呢？_\n\n有些时候在 EditText 中输入完内容之后，调用`press(\"search\")` or `press(\"enter\")`发现并没有什么反应。\n这个时候就需要`send_action`函数了，这里用到了只有输入法才能用的 [IME_ACTION_CODE](https://developer.android.com/reference/android/view/inputmethod/EditorInfo)。\n`send_action`先 broadcast 命令发送给输入法操作`IME_ACTION_CODE`，由输入法完成后续跟 EditText 的通信。（原理我不太清楚，有了解的，提 issue 告诉我)\n\n## [](#Toast 'Toast')Toast\n\n- 展示 Toast\n\n```\n\nd.toast.show(\"Hello world\")\nd.toast.show(\"Hello world\", 1.0) # 显示为 1.0，默认为 1.0\n\n```\n\n- 获取 Toast\n\n```\n\n# [参数]\n\n# 5.0: 最大等待超时。默认的 10.0\n\n# 缓存时间 10.0s。如果最近 10s 已经出现 toast，则返回缓存 toast。默认 10.0(将来可能会有变化)\n\n# 如果最终没有 toast，返回\"default message\"。默认没有\n\nd.toast.get_message(5.0, 10.0, \"default message\")\n\n# 常见的使用\n\nassert \"Short message\" in d.toast.get_message(5.0, default=\"\")\n\n#清楚缓存 toast\nd.toast.reset()\n\n# Now d.toast.get_message(0) is None\n\n```\n\n## [](#XPath 'XPath')XPath\n\n- 例如: 其中一个节点的内容\n\n```\n\n<android.widget.TextView\nindex=\"2\"\ntext=\"05:19\"\nresource-id=\"com.netease.cloudmusic:id/qf\"\npackage=\"com.netease.cloudmusic\"\ncontent-desc=\"\"\ncheckable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\"\nscrol\nbounds=\"[957,1602][1020,1636]\" />\n\n```\n\n- xpath 定位和使用方法\n有些属性的名字有修改需要注意\n\n```\n\ndescription -> content-desc\nresourceId -> resource-id\n\n```\n\n- 常见用法\n\n```\n\n# 等待 10s\n\nd.xpath(\"//android.widget.TextView\").wait(10.0)\n\n# 找到并单击\n\nd.xpath(\"//\\*[@content-desc='分享']\").click()\n\n# 检查是否存在\n\nif d.xpath(\"//android.widget.TextView[contains(@text, 'Se')]\").exists:\nprint(\"exists\")\n\n# 获取所有文本视图文本、属性和中心点\n\nfor elem in d.xpath(\"//android.widget.TextView\").all():\nprint(\"Text:\", elem.text) #获取视图文本\nfor elem in d.xpath(\"//android.widget.TextView\").all():\nprint(\"Attrib:\", elem.attrib) #获取属性和中心点 #返回: (100, 200)\nfor elem in d.xpath(\"//android.widget.TextView\").all():\nprint(\"Position:\", elem.center())\n\n```\n\n- 其他 XPath 常见用法\n\n```\n\n# 所有元素\n\n//\\*\n\n# resource-id 包含 login 字符\n\n//\\*[contains(@resource-id, 'login')]\n\n# 按钮包含账号或帐号\n\n//android.widget.Button[contains(@text, '账号') or contains(@text, '帐号')]\n\n# 所有 ImageView 中的第二个\n\n(//android.widget.ImageView)[2]\n\n# 所有 ImageView 中的最后一个\n\n(//android.widget.ImageView)[last()]\n\n# className 包含 ImageView\n\n//\\*[contains(name(), \"ImageView\")]\n\n```\n\n```\n","slug":"UIAutomator2的使用","published":1,"date":"2019-09-29T05:59:37.714Z","updated":"2019-10-12T03:30:55.906Z","_id":"ck1mzrdj30008qifyqls6o790","comments":1,"layout":"post","photos":[],"link":"","content":"<p>uiautomator2 是一个 python 库，用于 Android 的 UI 自动化测试，其底层基于 Google uiautomator，Google 提供的 uiautomator 库可以获取屏幕上任意一个 APP 的任意一个控件属性，并对其进行任意操作</p><p>python-uiautomator2 封装了谷歌自带的 uiautomator2 测试框架，提供便利的 python 接口。他允许测试人员直接在 PC 上编写 Python 的测试代码，操作手机应用，完成自动化，大大提高了自动化代码编写的效率。</p><a id=\"more\"></a>\n\n<ul>\n<li><p>python 端: 运行脚本，并向移动设备发送 HTTP 请求</p>\n</li>\n<li><p>移动设备：移动设备上运行了封装了 uiautomator2 的 HTTP 服务，解析收到的请求，并转化成 uiautomator2 的代码。</p>\n</li>\n</ul>\n<p>整个过程</p>\n<ol>\n<li>在移动设备上安装 atx-agent(守护进程), 随后 atx-agent 启动 uiautomator2 服务 (默认 7912 端口) 进行监听</li>\n<li>在 PC 上编写测试脚本并执行（相当于发送 HTTP 请求到移动设备的 server 端）</li>\n<li>移动设备通过 WIFI 或 USB 接收到 PC 上发来的 HTTP 请求，执行制定的操作</li>\n</ol>\n<h2 id=\"调用-uiautomator2-的过程\"><a href=\"#调用-uiautomator2-的过程\" class=\"headerlink\" title=\"调用 uiautomator2 的过程\"></a><a href=\"#调用uiautomator2的过程\" title=\"调用uiautomator2的过程\"></a>调用 uiautomator2 的过程</h2><ol>\n<li>配置手机设备参数，设置具体操作的是哪一台手机</li>\n<li>抓取手机上应用的控件，制定对应的控件来进行操作</li>\n<li>抓取手机上应用的控件，制定对应的控件来进行操作抓取手机上应用的控件，制定对应的控件来进行操作<br>对抓取到的控件进行操作，比如点击、填写参数等。</li>\n</ol>\n<h2 id=\"设备连接方法，有两种\"><a href=\"#设备连接方法，有两种\" class=\"headerlink\" title=\"设备连接方法，有两种\"></a><a href=\"#设备连接方法，有两种\" title=\"设备连接方法，有两种\"></a>设备连接方法，有两种</h2><p>python-uiautomator2 连接手机的方式有两种，一种是通过 WIFI，另外一种是通过 USB。两种方法各有优缺点。<br>WIFI 最便利的地方要数可以不用连接数据线，USB 则可以用在 PC 和手机网络不在一个网段用不了的情况。</p>\n<ol>\n<li><p>通过 WiFi，假设设备 IP 192.168.5.4 和您的 PC 在同一网络中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import uiautomator2 as u2</span><br><span class=\"line\">d = u2.connect(&apos;192.168.5.4&apos;) # WIFI链接设备。或者u2.connect_wifi(&apos;10.0.0.1&apos;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">2.  通过 USB， 假设设备序列是 123456789F（见 adb devices）</span><br></pre></td></tr></table></figure>\n<p>import uiautomator2 as u2<br>d = u2.connect(‘123456789F’) # USB链接设备。或者u2.connect_usb(‘123456f’)</p>\n<h1 id=\"d-u2-connect-usb-当前只有一个设备时可以用这个\"><a href=\"#d-u2-connect-usb-当前只有一个设备时可以用这个\" class=\"headerlink\" title=\"d = u2.connect_usb()#当前只有一个设备时可以用这个\"></a>d = u2.connect_usb()#当前只有一个设备时可以用这个</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在没有参数的情况下调用 u2.connect()， uiautomator2 将从环境变量 ANDROID_DEVICE_IP 获取设备 IP。如果这个环境变量是空的，uiautomator 将返回 connect_usb，您需要确保只有一个设备连接到计算机。</p>\n<h2 id=\"检查并维持设备端守护进程处于运行状态\"><a href=\"#检查并维持设备端守护进程处于运行状态\" class=\"headerlink\" title=\"检查并维持设备端守护进程处于运行状态\"></a><a href=\"#检查并维持设备端守护进程处于运行状态\" title=\"检查并维持设备端守护进程处于运行状态\"></a>检查并维持设备端守护进程处于运行状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.healthcheck()</span><br></pre></td></tr></table></figure>\n<h2 id=\"停用-UiAutomator-的守护程序\"><a href=\"#停用-UiAutomator-的守护程序\" class=\"headerlink\" title=\"停用 UiAutomator 的守护程序?\"></a><a href=\"#停用UiAutomator的守护程序\" title=\"停用UiAutomator的守护程序?\"></a>停用 UiAutomator 的守护程序?</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.service(&apos;uiautomator&apos;).stop()</span><br></pre></td></tr></table></figure>\n<h2 id=\"打开调试开关\"><a href=\"#打开调试开关\" class=\"headerlink\" title=\"打开调试开关\"></a><a href=\"#打开调试开关\" title=\"打开调试开关\"></a>打开调试开关</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.debug = True</span><br><span class=\"line\">d.info</span><br><span class=\"line\">&apos;&apos;&apos;</span><br><span class=\"line\">返回</span><br><span class=\"line\">12:32:47.182 $ curl -X POST -d &apos;&#123;&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;id&quot;: &quot;b80d3a488580be1f3e9cb3e926175310&quot;, &quot;method&quot;: &quot;deviceInfo&quot;, &quot;params&quot;: &#123;&#125;&#125;&apos; &apos;http://127.0.0.1:54179/jsonrpc/0&apos;</span><br><span class=\"line\">12:32:47.225 Response &gt;&gt;&gt;</span><br><span class=\"line\">&#123;&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;b80d3a488580be1f3e9cb3e926175310&quot;,&quot;result&quot;:&#123;&quot;currentPackageName&quot;:&quot;com.android.mms&quot;,&quot;displayHeight&quot;:1920,&quot;displayRotation&quot;:0,&quot;displaySizeDpX&quot;:360,&quot;displaySizeDpY&quot;:640,&quot;displayWidth&quot;:1080,&quot;productName&quot;</span><br><span class=\"line\">:&quot;odin&quot;,&quot;screenOn&quot;:true,&quot;sdkInt&quot;:25,&quot;naturalOrientation&quot;:true&#125;&#125;</span><br><span class=\"line\">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装应用，只能从-URL-安装\"><a href=\"#安装应用，只能从-URL-安装\" class=\"headerlink\" title=\"安装应用，只能从 URL 安装\"></a><a href=\"#安装应用，只能从URL安装\" title=\"安装应用，只能从URL安装\"></a>安装应用，只能从 URL 安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.app_install(&apos;http://some-domain.com/some.apk&apos;)#引号内为下载apk地址</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动应用\"><a href=\"#启动应用\" class=\"headerlink\" title=\"启动应用\"></a><a href=\"#启动应用\" title=\"启动应用\"></a>启动应用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.app_start(&apos;com.ruguoapp.jike&apos;)#引号内为包名称</span><br></pre></td></tr></table></figure>\n<h2 id=\"停止应用\"><a href=\"#停止应用\" class=\"headerlink\" title=\"停止应用\"></a><a href=\"#停止应用\" title=\"停止应用\"></a>停止应用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#相当于&apos;am force-stop&apos;强制停止应用</span><br><span class=\"line\">d.app_stop(&apos;com.example.hello_world&apos;)</span><br><span class=\"line\">#相当于&apos;pm clear&apos; 清空App数据</span><br><span class=\"line\">d.app_clear(&apos;com.example.hello_world&apos;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"停止所有正在运行的应用程序\"><a href=\"#停止所有正在运行的应用程序\" class=\"headerlink\" title=\"停止所有正在运行的应用程序\"></a><a href=\"#停止所有正在运行的应用程序\" title=\"停止所有正在运行的应用程序\"></a>停止所有正在运行的应用程序</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 停止所有</span><br><span class=\"line\">d.app_stop_all()</span><br><span class=\"line\"># 停止所有应用程序，除了com.examples.demo</span><br><span class=\"line\">d.app_stop_all(excludes=[&apos;com.examples.demo&apos;])</span><br></pre></td></tr></table></figure>\n<h2 id=\"跳过弹窗，禁止弹窗\"><a href=\"#跳过弹窗，禁止弹窗\" class=\"headerlink\" title=\"跳过弹窗，禁止弹窗\"></a><a href=\"#跳过弹窗，禁止弹窗\" title=\"跳过弹窗，禁止弹窗\"></a>跳过弹窗，禁止弹窗</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.disable_popups（）#自动跳过弹出窗口</span><br><span class=\"line\">d.disable_popups（假）#禁用自动跳过弹出窗</span><br></pre></td></tr></table></figure>\n<h2 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a><a href=\"#Session\" title=\"Session\"></a>Session</h2><p>Session 表示应用程序的生命周期。可用于启动应用，检测应用崩溃</p>\n<ul>\n<li><p>启动和关闭应用程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sess = d.session(&quot;com.netease.cloudmusic&quot;) # start 网易云音乐</span><br><span class=\"line\">sess.close() # 停止网易云音乐</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 使用 python with 启动和关闭应用程序</span><br></pre></td></tr></table></figure>\n<p>with d.session(“com.netease.cloudmusic”) as sess:<br>sess(text=”Play”).click()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 链接正在运行的应用</span><br></pre></td></tr></table></figure>\n<p>sess = d.session（“ com.netease.cloudmusic ”，attach = True）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 检测应用崩溃</span><br></pre></td></tr></table></figure>\n<h1 id=\"App-正在运行时\"><a href=\"#App-正在运行时\" class=\"headerlink\" title=\"App 正在运行时\"></a>App 正在运行时</h1><p>sess(text=”Music”).click() # 操作是正常的</p>\n<h1 id=\"App-崩溃时\"><a href=\"#App-崩溃时\" class=\"headerlink\" title=\"App 崩溃时\"></a>App 崩溃时</h1><p>sess(text=”Music”).click() # 引发会话中断错误 SessionBrokenError</p>\n<h1 id=\"session-下的其他函数调用也会引发-SessionBrokenError-错误\"><a href=\"#session-下的其他函数调用也会引发-SessionBrokenError-错误\" class=\"headerlink\" title=\"session 下的其他函数调用也会引发 SessionBrokenError 错误\"></a>session 下的其他函数调用也会引发 SessionBrokenError 错误</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"检查会话是否正确。\"><a href=\"#检查会话是否正确。\" class=\"headerlink\" title=\"检查会话是否正确。\"></a>检查会话是否正确。</h1><h1 id=\"警告-函数名将来可能会更改\"><a href=\"#警告-函数名将来可能会更改\" class=\"headerlink\" title=\"警告:函数名将来可能会更改\"></a>警告:函数名将来可能会更改</h1><p>sess.running() # True or False</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#获取设备信息 &apos;获取设备信息&apos;)获取设备信息</span><br><span class=\"line\"></span><br><span class=\"line\">- 获取基本信息</span><br></pre></td></tr></table></figure>\n<p>d.info</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">以下是可能的输出：</span><br></pre></td></tr></table></figure>\n<p>{<br>u’displayRotation’: 0,<br>u’displaySizeDpY’: 640,<br>u’displaySizeDpX’: 360,<br>u’currentPackageName’: u’com.android.launcher’,<br>u’productName’: u’takju’,<br>u’displayWidth’: 720,<br>u’sdkInt’: 18,<br>u’displayHeight’: 1184,<br>u’naturalOrientation’: True<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取窗口大小</span><br></pre></td></tr></table></figure>\n<p>d.window_size()</p>\n<h1 id=\"设备垂直输出示例-1080-1920\"><a href=\"#设备垂直输出示例-1080-1920\" class=\"headerlink\" title=\"设备垂直输出示例: (1080, 1920)\"></a>设备垂直输出示例: (1080, 1920)</h1><h1 id=\"设备水平输出示例-1920-1080\"><a href=\"#设备水平输出示例-1920-1080\" class=\"headerlink\" title=\"设备水平输出示例: (1920, 1080)\"></a>设备水平输出示例: (1920, 1080)</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取当前应用程序信息。对于某些 android 设备，输出可以为空 (参见输出示例 3)</span><br></pre></td></tr></table></figure>\n<p>d.current_app()</p>\n<h1 id=\"输出示例-1-‘package’-‘com-netease-example’-‘activity’-‘-Client’-‘pid’-23710\"><a href=\"#输出示例-1-‘package’-‘com-netease-example’-‘activity’-‘-Client’-‘pid’-23710\" class=\"headerlink\" title=\"输出示例 1: {‘package’: ‘com.netease.example’, ‘activity’: ‘.Client’, ‘pid’: 23710}\"></a>输出示例 1: {‘package’: ‘com.netease.example’, ‘activity’: ‘.Client’, ‘pid’: 23710}</h1><h1 id=\"输出示例-2-‘package’-‘com-ruguoapp-jike’-‘activity’-‘com-ruguoapp-jike-business-video-ui-activity-videolist-VideoListActivity’\"><a href=\"#输出示例-2-‘package’-‘com-ruguoapp-jike’-‘activity’-‘com-ruguoapp-jike-business-video-ui-activity-videolist-VideoListActivity’\" class=\"headerlink\" title=\"输出示例 2: {‘package’: ‘com.ruguoapp.jike’, ‘activity’: ‘com.ruguoapp.jike.business.video.ui.activity.videolist.VideoListActivity’}\"></a>输出示例 2: {‘package’: ‘com.ruguoapp.jike’, ‘activity’: ‘com.ruguoapp.jike.business.video.ui.activity.videolist.VideoListActivity’}</h1><h1 id=\"输出示例-3-‘package’-None-‘activity’-None\"><a href=\"#输出示例-3-‘package’-None-‘activity’-None\" class=\"headerlink\" title=\"输出示例 3: {‘package’: None, ‘activity’: None}\"></a>输出示例 3: {‘package’: None, ‘activity’: None}</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取设备序列号</span><br></pre></td></tr></table></figure>\n<p>d.serial</p>\n<h1 id=\"输出示例-74aAEDR428Z9\"><a href=\"#输出示例-74aAEDR428Z9\" class=\"headerlink\" title=\"输出示例: 74aAEDR428Z9\"></a>输出示例: 74aAEDR428Z9</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取 WIFI IP</span><br></pre></td></tr></table></figure>\n<p>print(d.wlan_ip) #输出示例:10.0.0.1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取详细的设备信息</span><br></pre></td></tr></table></figure>\n<p>print(d.device_info)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">下面是一个可能的输出:</span><br></pre></td></tr></table></figure>\n<p>{‘udid’: ‘3578298f-b4:0b:44:e6:1f:90-OD103’,<br>‘version’: ‘7.1.1’,<br>‘serial’: ‘3578298f’,<br>‘brand’: ‘SMARTISAN’,<br>‘model’: ‘OD103’,<br>‘hwaddr’: ‘b4:0b:44:e6:1f:90’,<br>‘port’: 7912,<br>‘sdk’: 25,<br>‘agentVersion’: ‘dev’,<br>‘display’: {‘width’: 1080, ‘height’: 1920},<br>‘battery’: {‘acPowered’: False,<br>‘usbPowered’: False,<br>‘wirelessPowered’: False,<br>‘status’: 3,<br>‘health’: 0,<br>‘present’: True,<br>‘level’: 99,<br>‘scale’: 100,<br>‘voltage’: 4316,<br>‘temperature’: 272,<br>‘technology’: ‘Li-ion’},<br>‘memory’: {‘total’: 3690280, ‘around’: ‘4 GB’},<br>‘cpu’: {‘cores’: 8, ‘hardware’: ‘Qualcomm Technologies, Inc MSM8953Pro’},<br>‘presenceChangedAt’: ‘0001-01-01T00:00:00Z’,<br>‘usingBeganAt’: ‘0001-01-01T00:00:00Z’}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#获取应用信息 &apos;获取应用信息&apos;)获取应用信息</span><br></pre></td></tr></table></figure>\n<p>d.app_info(“com.examples.demo”)</p>\n<h1 id=\"会输出\"><a href=\"#会输出\" class=\"headerlink\" title=\"会输出\"></a>会输出</h1><h1 id><a href=\"#\" class=\"headerlink\" title=\"{\"></a>{</h1><h1 id=\"“mainActivity”-“com-github-uiautomator-MainActivity”\"><a href=\"#“mainActivity”-“com-github-uiautomator-MainActivity”\" class=\"headerlink\" title=\"“mainActivity”: “com.github.uiautomator.MainActivity”,\"></a>“mainActivity”: “com.github.uiautomator.MainActivity”,</h1><h1 id=\"“label”-“ATX”\"><a href=\"#“label”-“ATX”\" class=\"headerlink\" title=\"“label”: “ATX”,\"></a>“label”: “ATX”,</h1><h1 id=\"“versionName”-“1-1-7”\"><a href=\"#“versionName”-“1-1-7”\" class=\"headerlink\" title=\"“versionName”: “1.1.7”,\"></a>“versionName”: “1.1.7”,</h1><h1 id=\"“versionCode”-1001007\"><a href=\"#“versionCode”-1001007\" class=\"headerlink\" title=\"“versionCode”: 1001007,\"></a>“versionCode”: 1001007,</h1><h1 id=\"“size”-1760809\"><a href=\"#“size”-1760809\" class=\"headerlink\" title=\"“size”:1760809\"></a>“size”:1760809</h1><h1 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"}\"></a>}</h1><h1 id=\"保存应用程序图标\"><a href=\"#保存应用程序图标\" class=\"headerlink\" title=\"保存应用程序图标\"></a>保存应用程序图标</h1><p>img = d.app_icon(“com.examples.demo”)<br>img.save(“icon.png”)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#推拉文件 &apos;推拉文件&apos;)推拉文件</span><br><span class=\"line\"></span><br><span class=\"line\">- 将文件推送到设备</span><br></pre></td></tr></table></figure>\n<h1 id=\"push-文件夹\"><a href=\"#push-文件夹\" class=\"headerlink\" title=\"push 文件夹\"></a>push 文件夹</h1><p>d.push(“foo.txt”, “/sdcard/“)</p>\n<h1 id=\"push-和重命名\"><a href=\"#push-和重命名\" class=\"headerlink\" title=\"push 和重命名\"></a>push 和重命名</h1><p>d.push(“foo.txt”, “/sdcard/bar.txt”)</p>\n<h1 id=\"push-fileobj\"><a href=\"#push-fileobj\" class=\"headerlink\" title=\"push fileobj\"></a>push fileobj</h1><p>with open(“foo.txt”, ‘rb’) as f:<br>d.push(f, “/sdcard/“)</p>\n<h1 id=\"推动和更改文件访问模式\"><a href=\"#推动和更改文件访问模式\" class=\"headerlink\" title=\"推动和更改文件访问模式\"></a>推动和更改文件访问模式</h1><p>d.push(“foo.sh”, “/data/local/tmp/“, mode=0o755)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 从设备中拉出一个文件</span><br></pre></td></tr></table></figure>\n<p>d.pull(“/sdcard/tmp.txt”, “tmp.txt”)</p>\n<h1 id=\"如果在设备上找不到文件，FileNotFoundError-将引发\"><a href=\"#如果在设备上找不到文件，FileNotFoundError-将引发\" class=\"headerlink\" title=\"如果在设备上找不到文件，FileNotFoundError 将引发\"></a>如果在设备上找不到文件，FileNotFoundError 将引发</h1><p>d.pull(“/sdcard/some-file-not-exists.txt”, “tmp.txt”)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#关键事件 &apos;关键事件&apos;)关键事件</span><br><span class=\"line\"></span><br><span class=\"line\">- 打开 / 关闭屏幕</span><br></pre></td></tr></table></figure>\n<p>d.screen_on（）＃打开屏幕<br>d.screen_off（）＃关闭屏幕</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取当前屏幕状态</span><br></pre></td></tr></table></figure>\n<p>d.info.get（’ screenOn ‘）#需要 Android&gt; = 4.4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 硬键盘和软键盘操作</span><br></pre></td></tr></table></figure>\n<p>d.press(“home”) # 点击 home 键<br>d.press(“back”) # 点击 back 键<br>d.press(“left”) # 点击左键<br>d.press(“right”) # 点击右键<br>d.press(“up”) # 点击上键<br>d.press(“down”) # 点击下键<br>d.press(“center”) # 点击选中<br>d.press(“menu”) # 点击 menu 按键<br>d.press(“search”) # 点击搜索按键<br>d.press(“enter”) # 点击 enter 键<br>d.press(“delete”) # 点击删除按键<br>d.press(“recent”) # 点击近期活动按键<br>d.press(“volume_up”) # 音量+<br>d.press(“volume_down”) # 音量-<br>d.press(“volume_mute”) # 静音<br>d.press(“camera”) # 相机<br>d.press(“power”) #电源键</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">你可以在 [Android KeyEvnet](https://developer.android.com/reference/android/view/KeyEvent.html) 上找到所有的关键代码定义</span><br><span class=\"line\"></span><br><span class=\"line\">- 解锁屏幕</span><br></pre></td></tr></table></figure>\n<p>d.unlock()</p>\n<h1 id=\"相当于\"><a href=\"#相当于\" class=\"headerlink\" title=\"相当于\"></a>相当于</h1><h1 id=\"1-发射活动-com-github-uiautomator-ACTION-IDENTIFY\"><a href=\"#1-发射活动-com-github-uiautomator-ACTION-IDENTIFY\" class=\"headerlink\" title=\"1. 发射活动:com.github.uiautomator.ACTION_IDENTIFY\"></a>1. 发射活动:com.github.uiautomator.ACTION_IDENTIFY</h1><h1 id=\"2-按-home-键\"><a href=\"#2-按-home-键\" class=\"headerlink\" title=\"2. 按 home 键\"></a>2. 按 home 键</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#手势与设备的交互 &apos;手势与设备的交互&apos;)手势与设备的交互</span><br><span class=\"line\"></span><br><span class=\"line\">- 单击屏幕</span><br></pre></td></tr></table></figure>\n<p>d.click（x，y）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 双击屏幕</span><br></pre></td></tr></table></figure>\n<p>d.double_click（x，y）<br>d.double_click（X，Y，0.1）＃默认两个单击之间间隔时间为 0.1 秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 长按</span><br></pre></td></tr></table></figure>\n<p>d.long_click（x，y）<br>d.long_click（X，Y，0.5）#长按 0.5 秒（默认）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 滑动</span><br></pre></td></tr></table></figure>\n<p>d.swipe(sx, sy, ex, ey)<br>d.swipe(sx, sy, ex, ey, 0.5) #滑动 0.5s(default)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 拖动</span><br></pre></td></tr></table></figure>\n<p>d.drag(sx, sy, ex, ey)<br>d.drag(sx, sy, ex, ey, 0.5)#拖动 0.5s(default)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 滑动点 多用于九宫格解锁，提前获取到每个点的相对坐标（这里支持百分比），</span><br><span class=\"line\">更详细的使用参考这个帖子 [使用 u2 实现九宫图案解锁](https://testerhome.com/topics/11034)</span><br></pre></td></tr></table></figure>\n<h1 id=\"从点-x0-y0-滑到点-x1-y1-再滑到点-x2-y2-两点之间的滑动速度是-0-2-秒\"><a href=\"#从点-x0-y0-滑到点-x1-y1-再滑到点-x2-y2-两点之间的滑动速度是-0-2-秒\" class=\"headerlink\" title=\"从点(x0, y0)滑到点(x1, y1)再滑到点(x2, y2) #两点之间的滑动速度是 0.2 秒\"></a>从点(x0, y0)滑到点(x1, y1)再滑到点(x2, y2) #两点之间的滑动速度是 0.2 秒</h1><p>d.swipe((x0, y0), (x1, y1), (x2, y2), 0.2)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">注意：单击，滑动，拖动操作支持百分比位置值。例：</span><br></pre></td></tr></table></figure>\n<p>d.long_click(0.5, 0.5) 表示长按屏幕中心</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#屏幕相关的 &apos;屏幕相关的&apos;)屏幕相关的</span><br><span class=\"line\"></span><br><span class=\"line\">- 检索方向</span><br></pre></td></tr></table></figure>\n<p>d.orientation</p>\n<h1 id=\"检索方向。输出可以是-“natural”-or-“left”-or-“right”-or-“upsidedown”\"><a href=\"#检索方向。输出可以是-“natural”-or-“left”-or-“right”-or-“upsidedown”\" class=\"headerlink\" title=\"检索方向。输出可以是 “natural” or “left” or “right” or “upsidedown”\"></a>检索方向。输出可以是 “natural” or “left” or “right” or “upsidedown”</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 设置方向</span><br></pre></td></tr></table></figure>\n<p>d.set_orientation(‘l’) # or “left”<br>d.set_orientation(“l”) # or “left”<br>d.set_orientation(“r”) # or “right”<br>d.set_orientation(“n”) # or “natural”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 冻结 / 开启旋转</span><br></pre></td></tr></table></figure>\n<p>d.freeze_rotation()# 冻结旋转<br>d.freeze_rotation(False)# 开启旋转</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 截图</span><br></pre></td></tr></table></figure>\n<h1 id=\"截图并保存到电脑上的一个文件中，需要-Android-gt-4-2。\"><a href=\"#截图并保存到电脑上的一个文件中，需要-Android-gt-4-2。\" class=\"headerlink\" title=\"截图并保存到电脑上的一个文件中，需要 Android&gt;=4.2。\"></a>截图并保存到电脑上的一个文件中，需要 Android&gt;=4.2。</h1><p>d.screenshot(“home.jpg”)</p>\n<h1 id=\"得到-PIL-Image-格式的图像-但你必须先安装-pillow\"><a href=\"#得到-PIL-Image-格式的图像-但你必须先安装-pillow\" class=\"headerlink\" title=\"得到 PIL.Image 格式的图像. 但你必须先安装 pillow\"></a>得到 PIL.Image 格式的图像. 但你必须先安装 pillow</h1><p>image = d.screenshot() # default format=”pillow”<br>image.save(“home.jpg”) # 或’home.png’，目前只支持 png 和 jpg 格式的图像</p>\n<h1 id=\"得到-OpenCV-的格式图像。当然，你需要-numpy-和-cv2-安装第一个\"><a href=\"#得到-OpenCV-的格式图像。当然，你需要-numpy-和-cv2-安装第一个\" class=\"headerlink\" title=\"得到 OpenCV 的格式图像。当然，你需要 numpy 和 cv2 安装第一个\"></a>得到 OpenCV 的格式图像。当然，你需要 numpy 和 cv2 安装第一个</h1><p>import cv2<br>image = d.screenshot(format=’opencv’)<br>cv2.imwrite(‘home.jpg’, image)</p>\n<h1 id=\"获取原始-JPEG-数据\"><a href=\"#获取原始-JPEG-数据\" class=\"headerlink\" title=\"获取原始 JPEG 数据\"></a>获取原始 JPEG 数据</h1><p>imagebin = d.screenshot(format=’raw’)<br>open(“some.jpg”, “wb”).write(imagebin)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 转储 UI 层次结构</span><br></pre></td></tr></table></figure>\n<h1 id=\"get-the-UI-hierarchy-dump-content-unicoded-（获取-UI-层次结构转储内容）\"><a href=\"#get-the-UI-hierarchy-dump-content-unicoded-（获取-UI-层次结构转储内容）\" class=\"headerlink\" title=\"get the UI hierarchy dump content (unicoded).（获取 UI 层次结构转储内容）\"></a>get the UI hierarchy dump content (unicoded).（获取 UI 层次结构转储内容）</h1><p>d.dump_hierarchy()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 打开通知或快速设置</span><br></pre></td></tr></table></figure>\n<p>d.open_notification（）#下拉打开通知栏<br>d.open_quick_settings（）#下拉打开快速设置栏</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#选择Ui对象 &apos;选择Ui对象&apos;)选择 Ui 对象</span><br><span class=\"line\"></span><br><span class=\"line\">选择器是一种方便的机制，用于在当前窗口中标识特定的 UI 对象。</span><br></pre></td></tr></table></figure>\n<h1 id=\"选择带有文本’Clock’的对象，它的类名是’android-widget-TextView’\"><a href=\"#选择带有文本’Clock’的对象，它的类名是’android-widget-TextView’\" class=\"headerlink\" title=\"选择带有文本’Clock’的对象，它的类名是’android.widget.TextView’\"></a>选择带有文本’Clock’的对象，它的类名是’android.widget.TextView’</h1><p>d(text=’Clock’, className=’android.widget.TextView’)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">选择器支持以下参数。有关详细信息，请参阅 [UiSelector Java doc](http://developer.android.com/tools/help/uiautomator/UiSelector.html) for detailed information.</span><br><span class=\"line\"></span><br><span class=\"line\">- `text`, `textContains`, `textMatches`, `textStartsWith`</span><br><span class=\"line\">- `className`, `classNameMatches`</span><br><span class=\"line\">- `description`, `descriptionContains`, `descriptionMatches`, `descriptionStartsWith`</span><br><span class=\"line\">- `checkable`, `checked`, `clickable`, `longClickable`</span><br><span class=\"line\">- `scrollable`, `enabled`,`focusable`, `focused`, `selected`</span><br><span class=\"line\">- `packageName`, `packageNameMatches`</span><br><span class=\"line\">- `resourceId`, `resourceIdMatches`</span><br><span class=\"line\">- `index`, `instance`</span><br><span class=\"line\"></span><br><span class=\"line\">## 获取所选 ui 对象状态及其信息</span><br><span class=\"line\"></span><br><span class=\"line\">- 检查特定的 UI 对象是否存在</span><br></pre></td></tr></table></figure>\n<p>d(text=”Settings”).exists # 返回布尔值，如果存在则为 True，否则为 False<br>d.exists(text=”Settings”) # 另一种写法 #高级用法<br>d(text=”Settings”).exists(timeout=3) # 等待’Settings’在 3 秒钟出现</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取特定 UI 对象的信息</span><br></pre></td></tr></table></figure>\n<p>d(text=”Settings”).info</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">下面是一个可能的输出</span><br></pre></td></tr></table></figure>\n<p>{<br>‘bounds’: {<br>‘bottom’: 2744,<br>‘left’: 386,<br>‘right’: 478,<br>‘top’: 2679},<br>‘childCount’: 0,<br>‘className’: ‘android.widget.TextView’,<br>‘contentDescription’: None,<br>‘packageName’: ‘com.ruguoapp.jike’,<br>‘resourceName’: ‘com.ruguoapp.jike:id/tv_main_tab_title’,<br>‘text’: ‘动态’,<br>‘visibleBounds’: {<br>‘bottom’: 2744,<br>‘left’: 386,<br>‘right’: 478,<br>‘top’: 2679},<br>‘checkable’: False,<br>‘checked’: False,<br>‘clickable’: False,<br>‘enabled’: True,<br>‘focusable’: False,<br>‘focused’: False,<br>‘longClickable’: False,<br>‘scrollable’: False,<br>‘selected’: False<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取 / 设置 / 清除可编辑字段的文本 (例如 EditText 小部件)</span><br></pre></td></tr></table></figure>\n<p>d(text=”Settings”).get_text() #得到文本小部件<br>d(text=”Settings”).set_text(“My text…”) #设置文本<br>d(text=”Settings”).clear_text() #清除文本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取 Widget 中心点</span><br></pre></td></tr></table></figure>\n<p>d(text=”Settings”).center()</p>\n<h1 id=\"d-text-”Settings”-center-offset-0-0-基准位置左前\"><a href=\"#d-text-”Settings”-center-offset-0-0-基准位置左前\" class=\"headerlink\" title=\"d(text=”Settings”).center(offset=(0, 0)) # 基准位置左前\"></a>d(text=”Settings”).center(offset=(0, 0)) # 基准位置左前</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#对选定UI对象的操作 &apos;对选定UI对象的操作&apos;)对选定 UI 对象的操作</span><br><span class=\"line\"></span><br><span class=\"line\">- UI 对象有五种定位方式</span><br><span class=\"line\">text、resourceId、description、className、xpath、坐标</span><br><span class=\"line\"></span><br><span class=\"line\">- 执行单击 UI 对象</span><br></pre></td></tr></table></figure>\n<h1 id=\"text-定位单击\"><a href=\"#text-定位单击\" class=\"headerlink\" title=\"text 定位单击\"></a>text 定位单击</h1><p>d(text=”Settings”).click()<br>d(text=”Settings”, class).click()</p>\n<h1 id=\"resourceId-定位单击\"><a href=\"#resourceId-定位单击\" class=\"headerlink\" title=\"resourceId 定位单击\"></a>resourceId 定位单击</h1><p>d(resourceId=”com.ruguoapp.jike:id/tv_title”, class).click()</p>\n<h1 id=\"description-定位单击\"><a href=\"#description-定位单击\" class=\"headerlink\" title=\"description 定位单击\"></a>description 定位单击</h1><p>d(description=”设置”).click()<br>d(description=”设置”, class).click()</p>\n<h1 id=\"className-定位单击\"><a href=\"#className-定位单击\" class=\"headerlink\" title=\"className 定位单击\"></a>className 定位单击</h1><p>d(class).click()</p>\n<h1 id=\"xpath-定位单击\"><a href=\"#xpath-定位单击\" class=\"headerlink\" title=\"xpath 定位单击\"></a>xpath 定位单击</h1><p>d.xpath(“//android.widget.FrameLayout[@index=’0’]/android.widget.LinearLayout[@index=’0’]”).click() #坐标单击<br>d.click(182, 1264)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"等待元素出现-最多-10-秒），出现后单击\"><a href=\"#等待元素出现-最多-10-秒），出现后单击\" class=\"headerlink\" title=\"等待元素出现(最多 10 秒），出现后单击\"></a>等待元素出现(最多 10 秒），出现后单击</h1><p>d(text=”Settings”).click(timeout=10)</p>\n<h1 id=\"在-10-秒时点击，默认的超时-0\"><a href=\"#在-10-秒时点击，默认的超时-0\" class=\"headerlink\" title=\"在 10 秒时点击，默认的超时 0\"></a>在 10 秒时点击，默认的超时 0</h1><p>d(text=’Skip’).click_exists(timeout=10.0)</p>\n<h1 id=\"单击直到元素消失，返回布尔\"><a href=\"#单击直到元素消失，返回布尔\" class=\"headerlink\" title=\"单击直到元素消失，返回布尔\"></a>单击直到元素消失，返回布尔</h1><p>d(text=”Skip”).click_gone(maxretry=10, interval=1.0) # maxretry 默认值 10,interval 默认值 1.0</p>\n<h1 id=\"点击基准位置偏移\"><a href=\"#点击基准位置偏移\" class=\"headerlink\" title=\"点击基准位置偏移\"></a>点击基准位置偏移</h1><p>d(text=”Settings”).click(offset=(0.5, 0.5)) # 点击中心位置，同 d(text=”Settings”).click()<br>d(text=”Settings”).click(offset=(0, 0)) # 点击左前位置<br>d(text=”Settings”).click(offset=(1, 1)) # 点击右下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 执行双击 UI 对象</span><br></pre></td></tr></table></figure>\n<p>d(text=”设置”).double_click() #双击特定 ui 对象的中心<br>d.double_click(x, y, 0.1)#两次单击之间的默认持续时间为 0.1 秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 执行长按 UI 对象</span><br></pre></td></tr></table></figure>\n<h1 id=\"长按特定-UI-对象的中心\"><a href=\"#长按特定-UI-对象的中心\" class=\"headerlink\" title=\"长按特定 UI 对象的中心\"></a>长按特定 UI 对象的中心</h1><p>d(text=”Settings”).long_click()<br>d.long_click(x, y, 0.5) # 长按坐标位置 0.5s 默认</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 特定 UI 对象的手势操作</span><br><span class=\"line\"></span><br><span class=\"line\">- 将 UI 对象拖向另一个点或另一个 UI 对象</span><br></pre></td></tr></table></figure>\n<h1 id=\"Android-lt-4-3-不能使用-drag\"><a href=\"#Android-lt-4-3-不能使用-drag\" class=\"headerlink\" title=\"Android&lt;4.3 不能使用 drag.\"></a>Android&lt;4.3 不能使用 drag.</h1><h1 id=\"在-0-5-秒内将-UI-对象拖到屏幕点-x-y\"><a href=\"#在-0-5-秒内将-UI-对象拖到屏幕点-x-y\" class=\"headerlink\" title=\"在 0.5 秒内将 UI 对象拖到屏幕点(x, y)\"></a>在 0.5 秒内将 UI 对象拖到屏幕点(x, y)</h1><p>d(text=”Settings”).drag_to(x, y, duration=0.5)</p>\n<h1 id=\"将-UI-对象拖到另一个-UI-对象的中心位置，时间为-0-25-秒\"><a href=\"#将-UI-对象拖到另一个-UI-对象的中心位置，时间为-0-25-秒\" class=\"headerlink\" title=\"将 UI 对象拖到另一个 UI 对象的中心位置，时间为 0.25 秒\"></a>将 UI 对象拖到另一个 UI 对象的中心位置，时间为 0.25 秒</h1><p>d(text=”Settings”).drag_to(text=”Clock”, duration=0.25)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- == 未懂 == 从 UI 对象的中心向其边缘滑动</span><br><span class=\"line\">滑动支持 4 个方向: 左、右、上、下</span><br></pre></td></tr></table></figure>\n<pre><code> d(text=&quot;Settings&quot;).swipe(&quot;right&quot;)\n d(text=&quot;Settings&quot;).swipe(&quot;left&quot;, steps=10)\n d(text=&quot;Settings&quot;).swipe(&quot;up&quot;, steps=20) # 1步约为5ms, 20步约为0.1s\n d(text=&quot;Settings&quot;).swipe(&quot;down&quot;, steps=20)\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- ==未懂==两点手势操作，从一个点到另一个点</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">d(text=&quot;Settings&quot;).gesture((sx1, sy1), (sx2, sy2), (ex1, ey1), (ex2, ey2))</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>特定 UI 对象的手势操作<br>支持两种手势：从边缘到中心、从中心到边缘</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#注意:缩放要到安卓4.3才能设置。</span><br><span class=\"line\">#从边缘到中心</span><br><span class=\"line\">d(text=&quot;Settings&quot;).pinch_in(percent=100, steps=10)</span><br><span class=\"line\"># 从中心到边缘</span><br><span class=\"line\">d(text=&quot;Settings&quot;).pinch_out()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 等待，直到特定的 UI 出现或消失</span><br></pre></td></tr></table></figure>\n<h1 id=\"等待-ui-对象出现\"><a href=\"#等待-ui-对象出现\" class=\"headerlink\" title=\"等待 ui 对象出现\"></a>等待 ui 对象出现</h1><p>d(text=”Settings”).wait(timeout=3.0) # 返回布尔值</p>\n<h1 id=\"等待-ui-对象的消失\"><a href=\"#等待-ui-对象的消失\" class=\"headerlink\" title=\"等待 ui 对象的消失\"></a>等待 ui 对象的消失</h1><p>d(text=”Settings”).wait_gone(timeout=1.0)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">默认超时为 20 秒。有关详细信息，请参阅全局设置</span><br><span class=\"line\"></span><br><span class=\"line\">* == 未懂 == 对特定的 ui 对象执行投掷 (可滚动)</span><br><span class=\"line\">可能的属性</span><br><span class=\"line\"></span><br><span class=\"line\">1.  `horiz`（水平） 或 `vert`（垂直）</span><br><span class=\"line\">2.  `forward`（向前）或`backward`（向后）或`toBeginning`（开始位置）或`toEnd`（结束位置）</span><br><span class=\"line\"></span><br><span class=\"line\">    ```</span><br><span class=\"line\">    #向前投掷(默认)垂直(默认)</span><br><span class=\"line\">    d(scrollable=True).fling()</span><br><span class=\"line\">    #垂直向后滚动</span><br><span class=\"line\">    d(scrollable=True).fling.vert.forward()</span><br><span class=\"line\">    #没搞懂</span><br><span class=\"line\">    d(scrollable=True).fling.vert.backward()</span><br><span class=\"line\">    #没搞懂</span><br><span class=\"line\">    d(scrollable=True).fling.horiz.toBeginning(max_swipes=1000)</span><br><span class=\"line\">    #滚动到结束</span><br><span class=\"line\">    d(scrollable=True).fling.toEnd()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    ```</span><br><span class=\"line\"></span><br><span class=\"line\">* == 未懂 == 在特定的 ui 对象上执行滚动 (可滚动)</span><br><span class=\"line\">可能的属性</span><br><span class=\"line\"></span><br><span class=\"line\">1.  `horiz`（水平） 或 `vert`（垂直）</span><br><span class=\"line\">2.  `forward`（向前）或`backward`（向后）或`toBeginning`（开始位置）或`toEnd`（结束位置）或 `to` 来</span><br><span class=\"line\"></span><br><span class=\"line\">    ```</span><br><span class=\"line\">    # 向前滚动(默认)垂直(默认)</span><br><span class=\"line\">    d(scrollable=True).scroll(steps=10)</span><br><span class=\"line\">    # 水平向前滚动</span><br><span class=\"line\">    d(scrollable=True).scroll.horiz.forward(steps=100)</span><br><span class=\"line\">    #垂直向后滚动</span><br><span class=\"line\">    d(scrollable=True).scroll.vert.backward()</span><br><span class=\"line\">    #滚动到开始水平</span><br><span class=\"line\">    d(scrollable=True).scroll.horiz.toBeginning(steps=100, max_swipes=1000)</span><br><span class=\"line\">    # 滚动到垂直结束</span><br><span class=\"line\">    d(scrollable=True).scroll.toEnd()</span><br><span class=\"line\">    #垂直向前滚动，直到出现特定的ui对象</span><br><span class=\"line\">    d(scrol)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    ```</span><br><span class=\"line\"></span><br><span class=\"line\">## [](#Watcher（-未懂-） &apos;Watcher（==未懂==）&apos;)Watcher（== 未懂 ==）</span><br><span class=\"line\"></span><br><span class=\"line\">当选择器没有找到匹配项时，可以注册 [watchers](http://developer.android.com/tools/help/uiautomator/UiWatcher.html) 来执行一些操作。</span><br><span class=\"line\"></span><br><span class=\"line\">- 注册 Watcher</span><br><span class=\"line\"></span><br><span class=\"line\">当选择器找不到匹配项时，uiautomator2 将运行所有注册的 watchers.</span><br><span class=\"line\">当条件匹配时单击目标</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“AUTO_FC_WHEN_ANR”).when(text=”ANR”).when(text=”Wait”) \\<br> .click(text=”Force Close”)</p>\n<h1 id=\"d-watcher-name-创建一个新的名为-watcher-的程序。\"><a href=\"#d-watcher-name-创建一个新的名为-watcher-的程序。\" class=\"headerlink\" title=\"d.watcher(name) ## 创建一个新的名为 watcher 的程序。\"></a>d.watcher(name) ## 创建一个新的名为 watcher 的程序。</h1><h1 id=\"when-condition-监视程序的用户选择条件。\"><a href=\"#when-condition-监视程序的用户选择条件。\" class=\"headerlink\" title=\".when(condition) ## 监视程序的用户选择条件。\"></a>.when(condition) ## 监视程序的用户选择条件。</h1><h1 id=\"click-target-对目标-UiSelector-执行单击操作\"><a href=\"#click-target-对目标-UiSelector-执行单击操作\" class=\"headerlink\" title=\".click(target) ## 对目标 UiSelector 执行单击操作\"></a>.click(target) ## 对目标 UiSelector 执行单击操作</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 还有一个关于点击的技巧。您可以不带参数地使用 click。</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“ALERT”).when(text=”OK”).click()</p>\n<h1 id=\"一样\"><a href=\"#一样\" class=\"headerlink\" title=\"一样\"></a>一样</h1><p>d.watcher(“ALERT”).when(text=”OK”).click(text=”OK”)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 当条件为真时按下键</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“AUTO_FC_WHEN_ANR”).when(text=”ANR”).when(text=”Wait”) \\<br> .press(“back”, “home”)</p>\n<h1 id=\"d-watcher-name-创建一个新的名为-watcher-的程序\"><a href=\"#d-watcher-name-创建一个新的名为-watcher-的程序\" class=\"headerlink\" title=\"d.watcher(name) ## 创建一个新的名为 watcher 的程序\"></a>d.watcher(name) ## 创建一个新的名为 watcher 的程序</h1><h1 id=\"when-condition-监视程序的用户选择条件\"><a href=\"#when-condition-监视程序的用户选择条件\" class=\"headerlink\" title=\".when(condition) ## 监视程序的用户选择条件\"></a>.when(condition) ## 监视程序的用户选择条件</h1><h1 id=\"press-…-按顺序按下一个键\"><a href=\"#press-…-按顺序按下一个键\" class=\"headerlink\" title=\".press(, …, .() ## 按顺序按下一个键\"></a>.press(<keyname>, …, <keyname>.() ## 按顺序按下一个键</keyname></keyname></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 检查指定的监视程序是否触发</span><br><span class=\"line\">一个监视程序被触发，这意味着运行了监视程序并匹配了它的所有条件。</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“watcher_name”).triggered</p>\n<h1 id=\"如果指定的监视程序被触发，则为-true，否则为-false\"><a href=\"#如果指定的监视程序被触发，则为-true，否则为-false\" class=\"headerlink\" title=\"如果指定的监视程序被触发，则为 true，否则为 false\"></a>如果指定的监视程序被触发，则为 true，否则为 false</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 删除指定的监视程序</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除观察者\"><a href=\"#删除观察者\" class=\"headerlink\" title=\"删除观察者\"></a>删除观察者</h1><p>d.watcher(“watcher_name”).remove()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 列出所有观察者</span><br></pre></td></tr></table></figure>\n<p>d.watchers #列出所有注册观察员的名单</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 检查任何触发的监视程序</span><br></pre></td></tr></table></figure>\n<p>d.watchers.triggered</p>\n<h1 id=\"在任何监视程序触发时为真\"><a href=\"#在任何监视程序触发时为真\" class=\"headerlink\" title=\"在任何监视程序触发时为真\"></a>在任何监视程序触发时为真</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 重置所有触发观察者</span><br></pre></td></tr></table></figure>\n<h1 id=\"重置所有触发的观察者，然后是-d-观察者。触发将为-false。\"><a href=\"#重置所有触发的观察者，然后是-d-观察者。触发将为-false。\" class=\"headerlink\" title=\"重置所有触发的观察者，然后是 d.观察者。触发将为 false。\"></a>重置所有触发的观察者，然后是 d.观察者。触发将为 false。</h1><p>d.watchers.reset()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 删除观察者</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除所有注册观察者\"><a href=\"#删除所有注册观察者\" class=\"headerlink\" title=\"删除所有注册观察者\"></a>删除所有注册观察者</h1><p>d.watchers.remove()</p>\n<h1 id=\"删除指定的监视程序，与-d-watcher-“watcher-name”-相同。\"><a href=\"#删除指定的监视程序，与-d-watcher-“watcher-name”-相同。\" class=\"headerlink\" title=\"删除指定的监视程序，与 d.watcher(“watcher_name”)相同。\"></a>删除指定的监视程序，与 d.watcher(“watcher_name”)相同。</h1><p>d.watchers.remove(“watcher_name”)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 强制运行所有的观察者</span><br></pre></td></tr></table></figure>\n<h1 id=\"强制运行所有注册的观察者\"><a href=\"#强制运行所有注册的观察者\" class=\"headerlink\" title=\"强制运行所有注册的观察者\"></a>强制运行所有注册的观察者</h1><p>d.watchers.run()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 当页面更新时运行所有观察者。</span><br><span class=\"line\">通常可以用来自动点击权限确认框，或者自动安装</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“OK”).when(text=”OK”).click(text=”OK”)</p>\n<h1 id=\"启用自动触发监视程序\"><a href=\"#启用自动触发监视程序\" class=\"headerlink\" title=\"启用自动触发监视程序\"></a>启用自动触发监视程序</h1><p>d.watchers.watched = True</p>\n<h1 id=\"禁用自动触发监视程序\"><a href=\"#禁用自动触发监视程序\" class=\"headerlink\" title=\"禁用自动触发监视程序\"></a>禁用自动触发监视程序</h1><p>d.watchers.watched = False</p>\n<h1 id=\"获取当前触发器监视者状态\"><a href=\"#获取当前触发器监视者状态\" class=\"headerlink\" title=\"获取当前触发器监视者状态\"></a>获取当前触发器监视者状态</h1><p>assert d.watchers.watched == False</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">另外文档还是有很多没有写，推荐直接去看源码 [**init**.py](https://vic.kim/2019/05/20/UIAutomator2%E7%9A%84%E4%BD%BF%E7%94%A8/uiautomator2/__init__.py)</span><br><span class=\"line\"></span><br><span class=\"line\">## [](#全局设置 &apos;全局设置&apos;)全局设置</span><br></pre></td></tr></table></figure>\n<h1 id=\"设置每次-UI-点击后-1-5-秒的延迟\"><a href=\"#设置每次-UI-点击后-1-5-秒的延迟\" class=\"headerlink\" title=\"设置每次 UI 点击后 1.5 秒的延迟\"></a>设置每次 UI 点击后 1.5 秒的延迟</h1><p>d.click_post_delay = 1.5 # 默认没有延迟</p>\n<h1 id=\"设置默认元素等待超时-秒\"><a href=\"#设置默认元素等待超时-秒\" class=\"headerlink\" title=\"设置默认元素等待超时(秒)\"></a>设置默认元素等待超时(秒)</h1><p>d.wait_timeout = 30.0 # 默认的 20.0</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">UiAutomator 中的超时设置 (隐藏方法)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<blockquote>\n<p>d.jsonrpc.getConfigurator()<br>{‘actionAcknowledgmentTimeout’: 500,<br>‘keyInjectionDelay’: 0,<br>‘scrollAcknowledgmentTimeout’: 200,<br>‘waitForIdleTimeout’: 0,<br>‘waitForSelectorTimeout’: 0}</p>\n<p>d.jsonrpc.setConfigurator({“waitForIdleTimeout”: 100})<br>{‘actionAcknowledgmentTimeout’: 500,<br>‘keyInjectionDelay’: 0,<br>‘scrollAcknowledgmentTimeout’: 200,<br>‘waitForIdleTimeout’: 100,<br>‘waitForSelectorTimeout’: 0}</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">为了防止客户端程序响应超时，`waitForIdleTimeout`和`waitForSelectorTimeout`目前已改为`0`</span><br><span class=\"line\"></span><br><span class=\"line\">Refs: [Google uiautomator Configurator](https://developer.android.com/reference/android/support/test/uiautomator/Configurator)</span><br><span class=\"line\"></span><br><span class=\"line\">## [](#Input-method &apos;Input method&apos;)Input method</span><br><span class=\"line\"></span><br><span class=\"line\">这种方法通常用于不知道控件的情况下的输入。第一步需要切换输入法，然后发送 adb 广播命令，具体使用方法如下</span><br></pre></td></tr></table></figure>\n<p>d.set_fastinput_ime(True) # 切换成 FastInputIME 输入法<br>d.send_keys(“你好 123abcEFG”) # adb 广播输入<br>d.clear_text() # 清除输入框所有内容(Require android-uiautomator.apk version &gt;= 1.0.7)<br>d.set_fastinput_ime(False) # 切换成正常的输入法<br>d.send_action(“search”) # 模拟输入法的搜索</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">**send_action** 说明</span><br><span class=\"line\"></span><br><span class=\"line\">该函数可以使用的参数有 `go search send next done previous`</span><br><span class=\"line\"></span><br><span class=\"line\">_什么时候该使用这个函数呢？_</span><br><span class=\"line\"></span><br><span class=\"line\">有些时候在 EditText 中输入完内容之后，调用`press(&quot;search&quot;)` or `press(&quot;enter&quot;)`发现并没有什么反应。</span><br><span class=\"line\">这个时候就需要`send_action`函数了，这里用到了只有输入法才能用的 [IME_ACTION_CODE](https://developer.android.com/reference/android/view/inputmethod/EditorInfo)。</span><br><span class=\"line\">`send_action`先 broadcast 命令发送给输入法操作`IME_ACTION_CODE`，由输入法完成后续跟 EditText 的通信。（原理我不太清楚，有了解的，提 issue 告诉我)</span><br><span class=\"line\"></span><br><span class=\"line\">## [](#Toast &apos;Toast&apos;)Toast</span><br><span class=\"line\"></span><br><span class=\"line\">- 展示 Toast</span><br></pre></td></tr></table></figure>\n<p>d.toast.show(“Hello world”)<br>d.toast.show(“Hello world”, 1.0) # 显示为 1.0，默认为 1.0</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取 Toast</span><br></pre></td></tr></table></figure>\n<h1 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"[参数]\"></a>[参数]</h1><h1 id=\"5-0-最大等待超时。默认的-10-0\"><a href=\"#5-0-最大等待超时。默认的-10-0\" class=\"headerlink\" title=\"5.0: 最大等待超时。默认的 10.0\"></a>5.0: 最大等待超时。默认的 10.0</h1><h1 id=\"缓存时间-10-0s。如果最近-10s-已经出现-toast，则返回缓存-toast。默认-10-0-将来可能会有变化\"><a href=\"#缓存时间-10-0s。如果最近-10s-已经出现-toast，则返回缓存-toast。默认-10-0-将来可能会有变化\" class=\"headerlink\" title=\"缓存时间 10.0s。如果最近 10s 已经出现 toast，则返回缓存 toast。默认 10.0(将来可能会有变化)\"></a>缓存时间 10.0s。如果最近 10s 已经出现 toast，则返回缓存 toast。默认 10.0(将来可能会有变化)</h1><h1 id=\"如果最终没有-toast，返回”default-message”。默认没有\"><a href=\"#如果最终没有-toast，返回”default-message”。默认没有\" class=\"headerlink\" title=\"如果最终没有 toast，返回”default message”。默认没有\"></a>如果最终没有 toast，返回”default message”。默认没有</h1><p>d.toast.get_message(5.0, 10.0, “default message”)</p>\n<h1 id=\"常见的使用\"><a href=\"#常见的使用\" class=\"headerlink\" title=\"常见的使用\"></a>常见的使用</h1><p>assert “Short message” in d.toast.get_message(5.0, default=””)</p>\n<h1 id=\"清楚缓存-toast\"><a href=\"#清楚缓存-toast\" class=\"headerlink\" title=\"清楚缓存 toast\"></a>清楚缓存 toast</h1><p>d.toast.reset()</p>\n<h1 id=\"Now-d-toast-get-message-0-is-None\"><a href=\"#Now-d-toast-get-message-0-is-None\" class=\"headerlink\" title=\"Now d.toast.get_message(0) is None\"></a>Now d.toast.get_message(0) is None</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#XPath &apos;XPath&apos;)XPath</span><br><span class=\"line\"></span><br><span class=\"line\">- 例如: 其中一个节点的内容</span><br></pre></td></tr></table></figure>\n<android.widget.textview index=\"2\" text=\"05:19\" resource-id=\"com.netease.cloudmusic:id/qf\" package=\"com.netease.cloudmusic\" content-desc checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrol bounds=\"[957,1602][1020,1636]\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- xpath 定位和使用方法</span><br><span class=\"line\">有些属性的名字有修改需要注意</span><br></pre></td></tr></table></figure>\n<p>description -&gt; content-desc<br>resourceId -&gt; resource-id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 常见用法</span><br></pre></td></tr></table></figure>\n<h1 id=\"等待-10s\"><a href=\"#等待-10s\" class=\"headerlink\" title=\"等待 10s\"></a>等待 10s</h1><p>d.xpath(“//android.widget.TextView”).wait(10.0)</p>\n<h1 id=\"找到并单击\"><a href=\"#找到并单击\" class=\"headerlink\" title=\"找到并单击\"></a>找到并单击</h1><p>d.xpath(“//*[@content-desc=’分享’]”).click()</p>\n<h1 id=\"检查是否存在\"><a href=\"#检查是否存在\" class=\"headerlink\" title=\"检查是否存在\"></a>检查是否存在</h1><p>if d.xpath(“//android.widget.TextView[contains(@text, ‘Se’)]”).exists:<br>print(“exists”)</p>\n<h1 id=\"获取所有文本视图文本、属性和中心点\"><a href=\"#获取所有文本视图文本、属性和中心点\" class=\"headerlink\" title=\"获取所有文本视图文本、属性和中心点\"></a>获取所有文本视图文本、属性和中心点</h1><p>for elem in d.xpath(“//android.widget.TextView”).all():<br>print(“Text:”, elem.text) #获取视图文本<br>for elem in d.xpath(“//android.widget.TextView”).all():<br>print(“Attrib:”, elem.attrib) #获取属性和中心点 #返回: (100, 200)<br>for elem in d.xpath(“//android.widget.TextView”).all():<br>print(“Position:”, elem.center())</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 其他 XPath 常见用法</span><br></pre></td></tr></table></figure>\n<h1 id=\"所有元素\"><a href=\"#所有元素\" class=\"headerlink\" title=\"所有元素\"></a>所有元素</h1><p>//*</p>\n<h1 id=\"resource-id-包含-login-字符\"><a href=\"#resource-id-包含-login-字符\" class=\"headerlink\" title=\"resource-id 包含 login 字符\"></a>resource-id 包含 login 字符</h1><p>//*[contains(@resource-id, ‘login’)]</p>\n<h1 id=\"按钮包含账号或帐号\"><a href=\"#按钮包含账号或帐号\" class=\"headerlink\" title=\"按钮包含账号或帐号\"></a>按钮包含账号或帐号</h1><p>//android.widget.Button[contains(@text, ‘账号’) or contains(@text, ‘帐号’)]</p>\n<h1 id=\"所有-ImageView-中的第二个\"><a href=\"#所有-ImageView-中的第二个\" class=\"headerlink\" title=\"所有 ImageView 中的第二个\"></a>所有 ImageView 中的第二个</h1><p>(//android.widget.ImageView)[2]</p>\n<h1 id=\"所有-ImageView-中的最后一个\"><a href=\"#所有-ImageView-中的最后一个\" class=\"headerlink\" title=\"所有 ImageView 中的最后一个\"></a>所有 ImageView 中的最后一个</h1><p>(//android.widget.ImageView)[last()]</p>\n<h1 id=\"className-包含-ImageView\"><a href=\"#className-包含-ImageView\" class=\"headerlink\" title=\"className 包含 ImageView\"></a>className 包含 ImageView</h1><p>//*[contains(name(), “ImageView”)]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</android.widget.textview>","site":{"data":{}},"excerpt":"<p>uiautomator2 是一个 python 库，用于 Android 的 UI 自动化测试，其底层基于 Google uiautomator，Google 提供的 uiautomator 库可以获取屏幕上任意一个 APP 的任意一个控件属性，并对其进行任意操作</p><p>python-uiautomator2 封装了谷歌自带的 uiautomator2 测试框架，提供便利的 python 接口。他允许测试人员直接在 PC 上编写 Python 的测试代码，操作手机应用，完成自动化，大大提高了自动化代码编写的效率。</p>","more":"\n\n<ul>\n<li><p>python 端: 运行脚本，并向移动设备发送 HTTP 请求</p>\n</li>\n<li><p>移动设备：移动设备上运行了封装了 uiautomator2 的 HTTP 服务，解析收到的请求，并转化成 uiautomator2 的代码。</p>\n</li>\n</ul>\n<p>整个过程</p>\n<ol>\n<li>在移动设备上安装 atx-agent(守护进程), 随后 atx-agent 启动 uiautomator2 服务 (默认 7912 端口) 进行监听</li>\n<li>在 PC 上编写测试脚本并执行（相当于发送 HTTP 请求到移动设备的 server 端）</li>\n<li>移动设备通过 WIFI 或 USB 接收到 PC 上发来的 HTTP 请求，执行制定的操作</li>\n</ol>\n<h2 id=\"调用-uiautomator2-的过程\"><a href=\"#调用-uiautomator2-的过程\" class=\"headerlink\" title=\"调用 uiautomator2 的过程\"></a><a href=\"#调用uiautomator2的过程\" title=\"调用uiautomator2的过程\"></a>调用 uiautomator2 的过程</h2><ol>\n<li>配置手机设备参数，设置具体操作的是哪一台手机</li>\n<li>抓取手机上应用的控件，制定对应的控件来进行操作</li>\n<li>抓取手机上应用的控件，制定对应的控件来进行操作抓取手机上应用的控件，制定对应的控件来进行操作<br>对抓取到的控件进行操作，比如点击、填写参数等。</li>\n</ol>\n<h2 id=\"设备连接方法，有两种\"><a href=\"#设备连接方法，有两种\" class=\"headerlink\" title=\"设备连接方法，有两种\"></a><a href=\"#设备连接方法，有两种\" title=\"设备连接方法，有两种\"></a>设备连接方法，有两种</h2><p>python-uiautomator2 连接手机的方式有两种，一种是通过 WIFI，另外一种是通过 USB。两种方法各有优缺点。<br>WIFI 最便利的地方要数可以不用连接数据线，USB 则可以用在 PC 和手机网络不在一个网段用不了的情况。</p>\n<ol>\n<li><p>通过 WiFi，假设设备 IP 192.168.5.4 和您的 PC 在同一网络中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import uiautomator2 as u2</span><br><span class=\"line\">d = u2.connect(&apos;192.168.5.4&apos;) # WIFI链接设备。或者u2.connect_wifi(&apos;10.0.0.1&apos;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">2.  通过 USB， 假设设备序列是 123456789F（见 adb devices）</span><br></pre></td></tr></table></figure>\n<p>import uiautomator2 as u2<br>d = u2.connect(‘123456789F’) # USB链接设备。或者u2.connect_usb(‘123456f’)</p>\n<h1 id=\"d-u2-connect-usb-当前只有一个设备时可以用这个\"><a href=\"#d-u2-connect-usb-当前只有一个设备时可以用这个\" class=\"headerlink\" title=\"d = u2.connect_usb()#当前只有一个设备时可以用这个\"></a>d = u2.connect_usb()#当前只有一个设备时可以用这个</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在没有参数的情况下调用 u2.connect()， uiautomator2 将从环境变量 ANDROID_DEVICE_IP 获取设备 IP。如果这个环境变量是空的，uiautomator 将返回 connect_usb，您需要确保只有一个设备连接到计算机。</p>\n<h2 id=\"检查并维持设备端守护进程处于运行状态\"><a href=\"#检查并维持设备端守护进程处于运行状态\" class=\"headerlink\" title=\"检查并维持设备端守护进程处于运行状态\"></a><a href=\"#检查并维持设备端守护进程处于运行状态\" title=\"检查并维持设备端守护进程处于运行状态\"></a>检查并维持设备端守护进程处于运行状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.healthcheck()</span><br></pre></td></tr></table></figure>\n<h2 id=\"停用-UiAutomator-的守护程序\"><a href=\"#停用-UiAutomator-的守护程序\" class=\"headerlink\" title=\"停用 UiAutomator 的守护程序?\"></a><a href=\"#停用UiAutomator的守护程序\" title=\"停用UiAutomator的守护程序?\"></a>停用 UiAutomator 的守护程序?</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.service(&apos;uiautomator&apos;).stop()</span><br></pre></td></tr></table></figure>\n<h2 id=\"打开调试开关\"><a href=\"#打开调试开关\" class=\"headerlink\" title=\"打开调试开关\"></a><a href=\"#打开调试开关\" title=\"打开调试开关\"></a>打开调试开关</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.debug = True</span><br><span class=\"line\">d.info</span><br><span class=\"line\">&apos;&apos;&apos;</span><br><span class=\"line\">返回</span><br><span class=\"line\">12:32:47.182 $ curl -X POST -d &apos;&#123;&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;id&quot;: &quot;b80d3a488580be1f3e9cb3e926175310&quot;, &quot;method&quot;: &quot;deviceInfo&quot;, &quot;params&quot;: &#123;&#125;&#125;&apos; &apos;http://127.0.0.1:54179/jsonrpc/0&apos;</span><br><span class=\"line\">12:32:47.225 Response &gt;&gt;&gt;</span><br><span class=\"line\">&#123;&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;b80d3a488580be1f3e9cb3e926175310&quot;,&quot;result&quot;:&#123;&quot;currentPackageName&quot;:&quot;com.android.mms&quot;,&quot;displayHeight&quot;:1920,&quot;displayRotation&quot;:0,&quot;displaySizeDpX&quot;:360,&quot;displaySizeDpY&quot;:640,&quot;displayWidth&quot;:1080,&quot;productName&quot;</span><br><span class=\"line\">:&quot;odin&quot;,&quot;screenOn&quot;:true,&quot;sdkInt&quot;:25,&quot;naturalOrientation&quot;:true&#125;&#125;</span><br><span class=\"line\">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装应用，只能从-URL-安装\"><a href=\"#安装应用，只能从-URL-安装\" class=\"headerlink\" title=\"安装应用，只能从 URL 安装\"></a><a href=\"#安装应用，只能从URL安装\" title=\"安装应用，只能从URL安装\"></a>安装应用，只能从 URL 安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.app_install(&apos;http://some-domain.com/some.apk&apos;)#引号内为下载apk地址</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动应用\"><a href=\"#启动应用\" class=\"headerlink\" title=\"启动应用\"></a><a href=\"#启动应用\" title=\"启动应用\"></a>启动应用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.app_start(&apos;com.ruguoapp.jike&apos;)#引号内为包名称</span><br></pre></td></tr></table></figure>\n<h2 id=\"停止应用\"><a href=\"#停止应用\" class=\"headerlink\" title=\"停止应用\"></a><a href=\"#停止应用\" title=\"停止应用\"></a>停止应用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#相当于&apos;am force-stop&apos;强制停止应用</span><br><span class=\"line\">d.app_stop(&apos;com.example.hello_world&apos;)</span><br><span class=\"line\">#相当于&apos;pm clear&apos; 清空App数据</span><br><span class=\"line\">d.app_clear(&apos;com.example.hello_world&apos;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"停止所有正在运行的应用程序\"><a href=\"#停止所有正在运行的应用程序\" class=\"headerlink\" title=\"停止所有正在运行的应用程序\"></a><a href=\"#停止所有正在运行的应用程序\" title=\"停止所有正在运行的应用程序\"></a>停止所有正在运行的应用程序</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 停止所有</span><br><span class=\"line\">d.app_stop_all()</span><br><span class=\"line\"># 停止所有应用程序，除了com.examples.demo</span><br><span class=\"line\">d.app_stop_all(excludes=[&apos;com.examples.demo&apos;])</span><br></pre></td></tr></table></figure>\n<h2 id=\"跳过弹窗，禁止弹窗\"><a href=\"#跳过弹窗，禁止弹窗\" class=\"headerlink\" title=\"跳过弹窗，禁止弹窗\"></a><a href=\"#跳过弹窗，禁止弹窗\" title=\"跳过弹窗，禁止弹窗\"></a>跳过弹窗，禁止弹窗</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d.disable_popups（）#自动跳过弹出窗口</span><br><span class=\"line\">d.disable_popups（假）#禁用自动跳过弹出窗</span><br></pre></td></tr></table></figure>\n<h2 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a><a href=\"#Session\" title=\"Session\"></a>Session</h2><p>Session 表示应用程序的生命周期。可用于启动应用，检测应用崩溃</p>\n<ul>\n<li><p>启动和关闭应用程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sess = d.session(&quot;com.netease.cloudmusic&quot;) # start 网易云音乐</span><br><span class=\"line\">sess.close() # 停止网易云音乐</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 使用 python with 启动和关闭应用程序</span><br></pre></td></tr></table></figure>\n<p>with d.session(“com.netease.cloudmusic”) as sess:<br>sess(text=”Play”).click()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 链接正在运行的应用</span><br></pre></td></tr></table></figure>\n<p>sess = d.session（“ com.netease.cloudmusic ”，attach = True）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 检测应用崩溃</span><br></pre></td></tr></table></figure>\n<h1 id=\"App-正在运行时\"><a href=\"#App-正在运行时\" class=\"headerlink\" title=\"App 正在运行时\"></a>App 正在运行时</h1><p>sess(text=”Music”).click() # 操作是正常的</p>\n<h1 id=\"App-崩溃时\"><a href=\"#App-崩溃时\" class=\"headerlink\" title=\"App 崩溃时\"></a>App 崩溃时</h1><p>sess(text=”Music”).click() # 引发会话中断错误 SessionBrokenError</p>\n<h1 id=\"session-下的其他函数调用也会引发-SessionBrokenError-错误\"><a href=\"#session-下的其他函数调用也会引发-SessionBrokenError-错误\" class=\"headerlink\" title=\"session 下的其他函数调用也会引发 SessionBrokenError 错误\"></a>session 下的其他函数调用也会引发 SessionBrokenError 错误</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"检查会话是否正确。\"><a href=\"#检查会话是否正确。\" class=\"headerlink\" title=\"检查会话是否正确。\"></a>检查会话是否正确。</h1><h1 id=\"警告-函数名将来可能会更改\"><a href=\"#警告-函数名将来可能会更改\" class=\"headerlink\" title=\"警告:函数名将来可能会更改\"></a>警告:函数名将来可能会更改</h1><p>sess.running() # True or False</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#获取设备信息 &apos;获取设备信息&apos;)获取设备信息</span><br><span class=\"line\"></span><br><span class=\"line\">- 获取基本信息</span><br></pre></td></tr></table></figure>\n<p>d.info</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">以下是可能的输出：</span><br></pre></td></tr></table></figure>\n<p>{<br>u’displayRotation’: 0,<br>u’displaySizeDpY’: 640,<br>u’displaySizeDpX’: 360,<br>u’currentPackageName’: u’com.android.launcher’,<br>u’productName’: u’takju’,<br>u’displayWidth’: 720,<br>u’sdkInt’: 18,<br>u’displayHeight’: 1184,<br>u’naturalOrientation’: True<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取窗口大小</span><br></pre></td></tr></table></figure>\n<p>d.window_size()</p>\n<h1 id=\"设备垂直输出示例-1080-1920\"><a href=\"#设备垂直输出示例-1080-1920\" class=\"headerlink\" title=\"设备垂直输出示例: (1080, 1920)\"></a>设备垂直输出示例: (1080, 1920)</h1><h1 id=\"设备水平输出示例-1920-1080\"><a href=\"#设备水平输出示例-1920-1080\" class=\"headerlink\" title=\"设备水平输出示例: (1920, 1080)\"></a>设备水平输出示例: (1920, 1080)</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取当前应用程序信息。对于某些 android 设备，输出可以为空 (参见输出示例 3)</span><br></pre></td></tr></table></figure>\n<p>d.current_app()</p>\n<h1 id=\"输出示例-1-‘package’-‘com-netease-example’-‘activity’-‘-Client’-‘pid’-23710\"><a href=\"#输出示例-1-‘package’-‘com-netease-example’-‘activity’-‘-Client’-‘pid’-23710\" class=\"headerlink\" title=\"输出示例 1: {‘package’: ‘com.netease.example’, ‘activity’: ‘.Client’, ‘pid’: 23710}\"></a>输出示例 1: {‘package’: ‘com.netease.example’, ‘activity’: ‘.Client’, ‘pid’: 23710}</h1><h1 id=\"输出示例-2-‘package’-‘com-ruguoapp-jike’-‘activity’-‘com-ruguoapp-jike-business-video-ui-activity-videolist-VideoListActivity’\"><a href=\"#输出示例-2-‘package’-‘com-ruguoapp-jike’-‘activity’-‘com-ruguoapp-jike-business-video-ui-activity-videolist-VideoListActivity’\" class=\"headerlink\" title=\"输出示例 2: {‘package’: ‘com.ruguoapp.jike’, ‘activity’: ‘com.ruguoapp.jike.business.video.ui.activity.videolist.VideoListActivity’}\"></a>输出示例 2: {‘package’: ‘com.ruguoapp.jike’, ‘activity’: ‘com.ruguoapp.jike.business.video.ui.activity.videolist.VideoListActivity’}</h1><h1 id=\"输出示例-3-‘package’-None-‘activity’-None\"><a href=\"#输出示例-3-‘package’-None-‘activity’-None\" class=\"headerlink\" title=\"输出示例 3: {‘package’: None, ‘activity’: None}\"></a>输出示例 3: {‘package’: None, ‘activity’: None}</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取设备序列号</span><br></pre></td></tr></table></figure>\n<p>d.serial</p>\n<h1 id=\"输出示例-74aAEDR428Z9\"><a href=\"#输出示例-74aAEDR428Z9\" class=\"headerlink\" title=\"输出示例: 74aAEDR428Z9\"></a>输出示例: 74aAEDR428Z9</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取 WIFI IP</span><br></pre></td></tr></table></figure>\n<p>print(d.wlan_ip) #输出示例:10.0.0.1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取详细的设备信息</span><br></pre></td></tr></table></figure>\n<p>print(d.device_info)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">下面是一个可能的输出:</span><br></pre></td></tr></table></figure>\n<p>{‘udid’: ‘3578298f-b4:0b:44:e6:1f:90-OD103’,<br>‘version’: ‘7.1.1’,<br>‘serial’: ‘3578298f’,<br>‘brand’: ‘SMARTISAN’,<br>‘model’: ‘OD103’,<br>‘hwaddr’: ‘b4:0b:44:e6:1f:90’,<br>‘port’: 7912,<br>‘sdk’: 25,<br>‘agentVersion’: ‘dev’,<br>‘display’: {‘width’: 1080, ‘height’: 1920},<br>‘battery’: {‘acPowered’: False,<br>‘usbPowered’: False,<br>‘wirelessPowered’: False,<br>‘status’: 3,<br>‘health’: 0,<br>‘present’: True,<br>‘level’: 99,<br>‘scale’: 100,<br>‘voltage’: 4316,<br>‘temperature’: 272,<br>‘technology’: ‘Li-ion’},<br>‘memory’: {‘total’: 3690280, ‘around’: ‘4 GB’},<br>‘cpu’: {‘cores’: 8, ‘hardware’: ‘Qualcomm Technologies, Inc MSM8953Pro’},<br>‘presenceChangedAt’: ‘0001-01-01T00:00:00Z’,<br>‘usingBeganAt’: ‘0001-01-01T00:00:00Z’}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#获取应用信息 &apos;获取应用信息&apos;)获取应用信息</span><br></pre></td></tr></table></figure>\n<p>d.app_info(“com.examples.demo”)</p>\n<h1 id=\"会输出\"><a href=\"#会输出\" class=\"headerlink\" title=\"会输出\"></a>会输出</h1><h1 id><a href=\"#\" class=\"headerlink\" title=\"{\"></a>{</h1><h1 id=\"“mainActivity”-“com-github-uiautomator-MainActivity”\"><a href=\"#“mainActivity”-“com-github-uiautomator-MainActivity”\" class=\"headerlink\" title=\"“mainActivity”: “com.github.uiautomator.MainActivity”,\"></a>“mainActivity”: “com.github.uiautomator.MainActivity”,</h1><h1 id=\"“label”-“ATX”\"><a href=\"#“label”-“ATX”\" class=\"headerlink\" title=\"“label”: “ATX”,\"></a>“label”: “ATX”,</h1><h1 id=\"“versionName”-“1-1-7”\"><a href=\"#“versionName”-“1-1-7”\" class=\"headerlink\" title=\"“versionName”: “1.1.7”,\"></a>“versionName”: “1.1.7”,</h1><h1 id=\"“versionCode”-1001007\"><a href=\"#“versionCode”-1001007\" class=\"headerlink\" title=\"“versionCode”: 1001007,\"></a>“versionCode”: 1001007,</h1><h1 id=\"“size”-1760809\"><a href=\"#“size”-1760809\" class=\"headerlink\" title=\"“size”:1760809\"></a>“size”:1760809</h1><h1 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"}\"></a>}</h1><h1 id=\"保存应用程序图标\"><a href=\"#保存应用程序图标\" class=\"headerlink\" title=\"保存应用程序图标\"></a>保存应用程序图标</h1><p>img = d.app_icon(“com.examples.demo”)<br>img.save(“icon.png”)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#推拉文件 &apos;推拉文件&apos;)推拉文件</span><br><span class=\"line\"></span><br><span class=\"line\">- 将文件推送到设备</span><br></pre></td></tr></table></figure>\n<h1 id=\"push-文件夹\"><a href=\"#push-文件夹\" class=\"headerlink\" title=\"push 文件夹\"></a>push 文件夹</h1><p>d.push(“foo.txt”, “/sdcard/“)</p>\n<h1 id=\"push-和重命名\"><a href=\"#push-和重命名\" class=\"headerlink\" title=\"push 和重命名\"></a>push 和重命名</h1><p>d.push(“foo.txt”, “/sdcard/bar.txt”)</p>\n<h1 id=\"push-fileobj\"><a href=\"#push-fileobj\" class=\"headerlink\" title=\"push fileobj\"></a>push fileobj</h1><p>with open(“foo.txt”, ‘rb’) as f:<br>d.push(f, “/sdcard/“)</p>\n<h1 id=\"推动和更改文件访问模式\"><a href=\"#推动和更改文件访问模式\" class=\"headerlink\" title=\"推动和更改文件访问模式\"></a>推动和更改文件访问模式</h1><p>d.push(“foo.sh”, “/data/local/tmp/“, mode=0o755)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 从设备中拉出一个文件</span><br></pre></td></tr></table></figure>\n<p>d.pull(“/sdcard/tmp.txt”, “tmp.txt”)</p>\n<h1 id=\"如果在设备上找不到文件，FileNotFoundError-将引发\"><a href=\"#如果在设备上找不到文件，FileNotFoundError-将引发\" class=\"headerlink\" title=\"如果在设备上找不到文件，FileNotFoundError 将引发\"></a>如果在设备上找不到文件，FileNotFoundError 将引发</h1><p>d.pull(“/sdcard/some-file-not-exists.txt”, “tmp.txt”)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#关键事件 &apos;关键事件&apos;)关键事件</span><br><span class=\"line\"></span><br><span class=\"line\">- 打开 / 关闭屏幕</span><br></pre></td></tr></table></figure>\n<p>d.screen_on（）＃打开屏幕<br>d.screen_off（）＃关闭屏幕</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取当前屏幕状态</span><br></pre></td></tr></table></figure>\n<p>d.info.get（’ screenOn ‘）#需要 Android&gt; = 4.4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 硬键盘和软键盘操作</span><br></pre></td></tr></table></figure>\n<p>d.press(“home”) # 点击 home 键<br>d.press(“back”) # 点击 back 键<br>d.press(“left”) # 点击左键<br>d.press(“right”) # 点击右键<br>d.press(“up”) # 点击上键<br>d.press(“down”) # 点击下键<br>d.press(“center”) # 点击选中<br>d.press(“menu”) # 点击 menu 按键<br>d.press(“search”) # 点击搜索按键<br>d.press(“enter”) # 点击 enter 键<br>d.press(“delete”) # 点击删除按键<br>d.press(“recent”) # 点击近期活动按键<br>d.press(“volume_up”) # 音量+<br>d.press(“volume_down”) # 音量-<br>d.press(“volume_mute”) # 静音<br>d.press(“camera”) # 相机<br>d.press(“power”) #电源键</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">你可以在 [Android KeyEvnet](https://developer.android.com/reference/android/view/KeyEvent.html) 上找到所有的关键代码定义</span><br><span class=\"line\"></span><br><span class=\"line\">- 解锁屏幕</span><br></pre></td></tr></table></figure>\n<p>d.unlock()</p>\n<h1 id=\"相当于\"><a href=\"#相当于\" class=\"headerlink\" title=\"相当于\"></a>相当于</h1><h1 id=\"1-发射活动-com-github-uiautomator-ACTION-IDENTIFY\"><a href=\"#1-发射活动-com-github-uiautomator-ACTION-IDENTIFY\" class=\"headerlink\" title=\"1. 发射活动:com.github.uiautomator.ACTION_IDENTIFY\"></a>1. 发射活动:com.github.uiautomator.ACTION_IDENTIFY</h1><h1 id=\"2-按-home-键\"><a href=\"#2-按-home-键\" class=\"headerlink\" title=\"2. 按 home 键\"></a>2. 按 home 键</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#手势与设备的交互 &apos;手势与设备的交互&apos;)手势与设备的交互</span><br><span class=\"line\"></span><br><span class=\"line\">- 单击屏幕</span><br></pre></td></tr></table></figure>\n<p>d.click（x，y）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 双击屏幕</span><br></pre></td></tr></table></figure>\n<p>d.double_click（x，y）<br>d.double_click（X，Y，0.1）＃默认两个单击之间间隔时间为 0.1 秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 长按</span><br></pre></td></tr></table></figure>\n<p>d.long_click（x，y）<br>d.long_click（X，Y，0.5）#长按 0.5 秒（默认）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 滑动</span><br></pre></td></tr></table></figure>\n<p>d.swipe(sx, sy, ex, ey)<br>d.swipe(sx, sy, ex, ey, 0.5) #滑动 0.5s(default)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 拖动</span><br></pre></td></tr></table></figure>\n<p>d.drag(sx, sy, ex, ey)<br>d.drag(sx, sy, ex, ey, 0.5)#拖动 0.5s(default)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 滑动点 多用于九宫格解锁，提前获取到每个点的相对坐标（这里支持百分比），</span><br><span class=\"line\">更详细的使用参考这个帖子 [使用 u2 实现九宫图案解锁](https://testerhome.com/topics/11034)</span><br></pre></td></tr></table></figure>\n<h1 id=\"从点-x0-y0-滑到点-x1-y1-再滑到点-x2-y2-两点之间的滑动速度是-0-2-秒\"><a href=\"#从点-x0-y0-滑到点-x1-y1-再滑到点-x2-y2-两点之间的滑动速度是-0-2-秒\" class=\"headerlink\" title=\"从点(x0, y0)滑到点(x1, y1)再滑到点(x2, y2) #两点之间的滑动速度是 0.2 秒\"></a>从点(x0, y0)滑到点(x1, y1)再滑到点(x2, y2) #两点之间的滑动速度是 0.2 秒</h1><p>d.swipe((x0, y0), (x1, y1), (x2, y2), 0.2)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">注意：单击，滑动，拖动操作支持百分比位置值。例：</span><br></pre></td></tr></table></figure>\n<p>d.long_click(0.5, 0.5) 表示长按屏幕中心</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#屏幕相关的 &apos;屏幕相关的&apos;)屏幕相关的</span><br><span class=\"line\"></span><br><span class=\"line\">- 检索方向</span><br></pre></td></tr></table></figure>\n<p>d.orientation</p>\n<h1 id=\"检索方向。输出可以是-“natural”-or-“left”-or-“right”-or-“upsidedown”\"><a href=\"#检索方向。输出可以是-“natural”-or-“left”-or-“right”-or-“upsidedown”\" class=\"headerlink\" title=\"检索方向。输出可以是 “natural” or “left” or “right” or “upsidedown”\"></a>检索方向。输出可以是 “natural” or “left” or “right” or “upsidedown”</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 设置方向</span><br></pre></td></tr></table></figure>\n<p>d.set_orientation(‘l’) # or “left”<br>d.set_orientation(“l”) # or “left”<br>d.set_orientation(“r”) # or “right”<br>d.set_orientation(“n”) # or “natural”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 冻结 / 开启旋转</span><br></pre></td></tr></table></figure>\n<p>d.freeze_rotation()# 冻结旋转<br>d.freeze_rotation(False)# 开启旋转</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 截图</span><br></pre></td></tr></table></figure>\n<h1 id=\"截图并保存到电脑上的一个文件中，需要-Android-gt-4-2。\"><a href=\"#截图并保存到电脑上的一个文件中，需要-Android-gt-4-2。\" class=\"headerlink\" title=\"截图并保存到电脑上的一个文件中，需要 Android&gt;=4.2。\"></a>截图并保存到电脑上的一个文件中，需要 Android&gt;=4.2。</h1><p>d.screenshot(“home.jpg”)</p>\n<h1 id=\"得到-PIL-Image-格式的图像-但你必须先安装-pillow\"><a href=\"#得到-PIL-Image-格式的图像-但你必须先安装-pillow\" class=\"headerlink\" title=\"得到 PIL.Image 格式的图像. 但你必须先安装 pillow\"></a>得到 PIL.Image 格式的图像. 但你必须先安装 pillow</h1><p>image = d.screenshot() # default format=”pillow”<br>image.save(“home.jpg”) # 或’home.png’，目前只支持 png 和 jpg 格式的图像</p>\n<h1 id=\"得到-OpenCV-的格式图像。当然，你需要-numpy-和-cv2-安装第一个\"><a href=\"#得到-OpenCV-的格式图像。当然，你需要-numpy-和-cv2-安装第一个\" class=\"headerlink\" title=\"得到 OpenCV 的格式图像。当然，你需要 numpy 和 cv2 安装第一个\"></a>得到 OpenCV 的格式图像。当然，你需要 numpy 和 cv2 安装第一个</h1><p>import cv2<br>image = d.screenshot(format=’opencv’)<br>cv2.imwrite(‘home.jpg’, image)</p>\n<h1 id=\"获取原始-JPEG-数据\"><a href=\"#获取原始-JPEG-数据\" class=\"headerlink\" title=\"获取原始 JPEG 数据\"></a>获取原始 JPEG 数据</h1><p>imagebin = d.screenshot(format=’raw’)<br>open(“some.jpg”, “wb”).write(imagebin)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 转储 UI 层次结构</span><br></pre></td></tr></table></figure>\n<h1 id=\"get-the-UI-hierarchy-dump-content-unicoded-（获取-UI-层次结构转储内容）\"><a href=\"#get-the-UI-hierarchy-dump-content-unicoded-（获取-UI-层次结构转储内容）\" class=\"headerlink\" title=\"get the UI hierarchy dump content (unicoded).（获取 UI 层次结构转储内容）\"></a>get the UI hierarchy dump content (unicoded).（获取 UI 层次结构转储内容）</h1><p>d.dump_hierarchy()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 打开通知或快速设置</span><br></pre></td></tr></table></figure>\n<p>d.open_notification（）#下拉打开通知栏<br>d.open_quick_settings（）#下拉打开快速设置栏</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#选择Ui对象 &apos;选择Ui对象&apos;)选择 Ui 对象</span><br><span class=\"line\"></span><br><span class=\"line\">选择器是一种方便的机制，用于在当前窗口中标识特定的 UI 对象。</span><br></pre></td></tr></table></figure>\n<h1 id=\"选择带有文本’Clock’的对象，它的类名是’android-widget-TextView’\"><a href=\"#选择带有文本’Clock’的对象，它的类名是’android-widget-TextView’\" class=\"headerlink\" title=\"选择带有文本’Clock’的对象，它的类名是’android.widget.TextView’\"></a>选择带有文本’Clock’的对象，它的类名是’android.widget.TextView’</h1><p>d(text=’Clock’, className=’android.widget.TextView’)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">选择器支持以下参数。有关详细信息，请参阅 [UiSelector Java doc](http://developer.android.com/tools/help/uiautomator/UiSelector.html) for detailed information.</span><br><span class=\"line\"></span><br><span class=\"line\">- `text`, `textContains`, `textMatches`, `textStartsWith`</span><br><span class=\"line\">- `className`, `classNameMatches`</span><br><span class=\"line\">- `description`, `descriptionContains`, `descriptionMatches`, `descriptionStartsWith`</span><br><span class=\"line\">- `checkable`, `checked`, `clickable`, `longClickable`</span><br><span class=\"line\">- `scrollable`, `enabled`,`focusable`, `focused`, `selected`</span><br><span class=\"line\">- `packageName`, `packageNameMatches`</span><br><span class=\"line\">- `resourceId`, `resourceIdMatches`</span><br><span class=\"line\">- `index`, `instance`</span><br><span class=\"line\"></span><br><span class=\"line\">## 获取所选 ui 对象状态及其信息</span><br><span class=\"line\"></span><br><span class=\"line\">- 检查特定的 UI 对象是否存在</span><br></pre></td></tr></table></figure>\n<p>d(text=”Settings”).exists # 返回布尔值，如果存在则为 True，否则为 False<br>d.exists(text=”Settings”) # 另一种写法 #高级用法<br>d(text=”Settings”).exists(timeout=3) # 等待’Settings’在 3 秒钟出现</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取特定 UI 对象的信息</span><br></pre></td></tr></table></figure>\n<p>d(text=”Settings”).info</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">下面是一个可能的输出</span><br></pre></td></tr></table></figure>\n<p>{<br>‘bounds’: {<br>‘bottom’: 2744,<br>‘left’: 386,<br>‘right’: 478,<br>‘top’: 2679},<br>‘childCount’: 0,<br>‘className’: ‘android.widget.TextView’,<br>‘contentDescription’: None,<br>‘packageName’: ‘com.ruguoapp.jike’,<br>‘resourceName’: ‘com.ruguoapp.jike:id/tv_main_tab_title’,<br>‘text’: ‘动态’,<br>‘visibleBounds’: {<br>‘bottom’: 2744,<br>‘left’: 386,<br>‘right’: 478,<br>‘top’: 2679},<br>‘checkable’: False,<br>‘checked’: False,<br>‘clickable’: False,<br>‘enabled’: True,<br>‘focusable’: False,<br>‘focused’: False,<br>‘longClickable’: False,<br>‘scrollable’: False,<br>‘selected’: False<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取 / 设置 / 清除可编辑字段的文本 (例如 EditText 小部件)</span><br></pre></td></tr></table></figure>\n<p>d(text=”Settings”).get_text() #得到文本小部件<br>d(text=”Settings”).set_text(“My text…”) #设置文本<br>d(text=”Settings”).clear_text() #清除文本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取 Widget 中心点</span><br></pre></td></tr></table></figure>\n<p>d(text=”Settings”).center()</p>\n<h1 id=\"d-text-”Settings”-center-offset-0-0-基准位置左前\"><a href=\"#d-text-”Settings”-center-offset-0-0-基准位置左前\" class=\"headerlink\" title=\"d(text=”Settings”).center(offset=(0, 0)) # 基准位置左前\"></a>d(text=”Settings”).center(offset=(0, 0)) # 基准位置左前</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#对选定UI对象的操作 &apos;对选定UI对象的操作&apos;)对选定 UI 对象的操作</span><br><span class=\"line\"></span><br><span class=\"line\">- UI 对象有五种定位方式</span><br><span class=\"line\">text、resourceId、description、className、xpath、坐标</span><br><span class=\"line\"></span><br><span class=\"line\">- 执行单击 UI 对象</span><br></pre></td></tr></table></figure>\n<h1 id=\"text-定位单击\"><a href=\"#text-定位单击\" class=\"headerlink\" title=\"text 定位单击\"></a>text 定位单击</h1><p>d(text=”Settings”).click()<br>d(text=”Settings”, class).click()</p>\n<h1 id=\"resourceId-定位单击\"><a href=\"#resourceId-定位单击\" class=\"headerlink\" title=\"resourceId 定位单击\"></a>resourceId 定位单击</h1><p>d(resourceId=”com.ruguoapp.jike:id/tv_title”, class).click()</p>\n<h1 id=\"description-定位单击\"><a href=\"#description-定位单击\" class=\"headerlink\" title=\"description 定位单击\"></a>description 定位单击</h1><p>d(description=”设置”).click()<br>d(description=”设置”, class).click()</p>\n<h1 id=\"className-定位单击\"><a href=\"#className-定位单击\" class=\"headerlink\" title=\"className 定位单击\"></a>className 定位单击</h1><p>d(class).click()</p>\n<h1 id=\"xpath-定位单击\"><a href=\"#xpath-定位单击\" class=\"headerlink\" title=\"xpath 定位单击\"></a>xpath 定位单击</h1><p>d.xpath(“//android.widget.FrameLayout[@index=’0’]/android.widget.LinearLayout[@index=’0’]”).click() #坐标单击<br>d.click(182, 1264)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"等待元素出现-最多-10-秒），出现后单击\"><a href=\"#等待元素出现-最多-10-秒），出现后单击\" class=\"headerlink\" title=\"等待元素出现(最多 10 秒），出现后单击\"></a>等待元素出现(最多 10 秒），出现后单击</h1><p>d(text=”Settings”).click(timeout=10)</p>\n<h1 id=\"在-10-秒时点击，默认的超时-0\"><a href=\"#在-10-秒时点击，默认的超时-0\" class=\"headerlink\" title=\"在 10 秒时点击，默认的超时 0\"></a>在 10 秒时点击，默认的超时 0</h1><p>d(text=’Skip’).click_exists(timeout=10.0)</p>\n<h1 id=\"单击直到元素消失，返回布尔\"><a href=\"#单击直到元素消失，返回布尔\" class=\"headerlink\" title=\"单击直到元素消失，返回布尔\"></a>单击直到元素消失，返回布尔</h1><p>d(text=”Skip”).click_gone(maxretry=10, interval=1.0) # maxretry 默认值 10,interval 默认值 1.0</p>\n<h1 id=\"点击基准位置偏移\"><a href=\"#点击基准位置偏移\" class=\"headerlink\" title=\"点击基准位置偏移\"></a>点击基准位置偏移</h1><p>d(text=”Settings”).click(offset=(0.5, 0.5)) # 点击中心位置，同 d(text=”Settings”).click()<br>d(text=”Settings”).click(offset=(0, 0)) # 点击左前位置<br>d(text=”Settings”).click(offset=(1, 1)) # 点击右下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 执行双击 UI 对象</span><br></pre></td></tr></table></figure>\n<p>d(text=”设置”).double_click() #双击特定 ui 对象的中心<br>d.double_click(x, y, 0.1)#两次单击之间的默认持续时间为 0.1 秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 执行长按 UI 对象</span><br></pre></td></tr></table></figure>\n<h1 id=\"长按特定-UI-对象的中心\"><a href=\"#长按特定-UI-对象的中心\" class=\"headerlink\" title=\"长按特定 UI 对象的中心\"></a>长按特定 UI 对象的中心</h1><p>d(text=”Settings”).long_click()<br>d.long_click(x, y, 0.5) # 长按坐标位置 0.5s 默认</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 特定 UI 对象的手势操作</span><br><span class=\"line\"></span><br><span class=\"line\">- 将 UI 对象拖向另一个点或另一个 UI 对象</span><br></pre></td></tr></table></figure>\n<h1 id=\"Android-lt-4-3-不能使用-drag\"><a href=\"#Android-lt-4-3-不能使用-drag\" class=\"headerlink\" title=\"Android&lt;4.3 不能使用 drag.\"></a>Android&lt;4.3 不能使用 drag.</h1><h1 id=\"在-0-5-秒内将-UI-对象拖到屏幕点-x-y\"><a href=\"#在-0-5-秒内将-UI-对象拖到屏幕点-x-y\" class=\"headerlink\" title=\"在 0.5 秒内将 UI 对象拖到屏幕点(x, y)\"></a>在 0.5 秒内将 UI 对象拖到屏幕点(x, y)</h1><p>d(text=”Settings”).drag_to(x, y, duration=0.5)</p>\n<h1 id=\"将-UI-对象拖到另一个-UI-对象的中心位置，时间为-0-25-秒\"><a href=\"#将-UI-对象拖到另一个-UI-对象的中心位置，时间为-0-25-秒\" class=\"headerlink\" title=\"将 UI 对象拖到另一个 UI 对象的中心位置，时间为 0.25 秒\"></a>将 UI 对象拖到另一个 UI 对象的中心位置，时间为 0.25 秒</h1><p>d(text=”Settings”).drag_to(text=”Clock”, duration=0.25)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- == 未懂 == 从 UI 对象的中心向其边缘滑动</span><br><span class=\"line\">滑动支持 4 个方向: 左、右、上、下</span><br></pre></td></tr></table></figure>\n<pre><code> d(text=&quot;Settings&quot;).swipe(&quot;right&quot;)\n d(text=&quot;Settings&quot;).swipe(&quot;left&quot;, steps=10)\n d(text=&quot;Settings&quot;).swipe(&quot;up&quot;, steps=20) # 1步约为5ms, 20步约为0.1s\n d(text=&quot;Settings&quot;).swipe(&quot;down&quot;, steps=20)\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- ==未懂==两点手势操作，从一个点到另一个点</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">d(text=&quot;Settings&quot;).gesture((sx1, sy1), (sx2, sy2), (ex1, ey1), (ex2, ey2))</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>特定 UI 对象的手势操作<br>支持两种手势：从边缘到中心、从中心到边缘</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#注意:缩放要到安卓4.3才能设置。</span><br><span class=\"line\">#从边缘到中心</span><br><span class=\"line\">d(text=&quot;Settings&quot;).pinch_in(percent=100, steps=10)</span><br><span class=\"line\"># 从中心到边缘</span><br><span class=\"line\">d(text=&quot;Settings&quot;).pinch_out()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 等待，直到特定的 UI 出现或消失</span><br></pre></td></tr></table></figure>\n<h1 id=\"等待-ui-对象出现\"><a href=\"#等待-ui-对象出现\" class=\"headerlink\" title=\"等待 ui 对象出现\"></a>等待 ui 对象出现</h1><p>d(text=”Settings”).wait(timeout=3.0) # 返回布尔值</p>\n<h1 id=\"等待-ui-对象的消失\"><a href=\"#等待-ui-对象的消失\" class=\"headerlink\" title=\"等待 ui 对象的消失\"></a>等待 ui 对象的消失</h1><p>d(text=”Settings”).wait_gone(timeout=1.0)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">默认超时为 20 秒。有关详细信息，请参阅全局设置</span><br><span class=\"line\"></span><br><span class=\"line\">* == 未懂 == 对特定的 ui 对象执行投掷 (可滚动)</span><br><span class=\"line\">可能的属性</span><br><span class=\"line\"></span><br><span class=\"line\">1.  `horiz`（水平） 或 `vert`（垂直）</span><br><span class=\"line\">2.  `forward`（向前）或`backward`（向后）或`toBeginning`（开始位置）或`toEnd`（结束位置）</span><br><span class=\"line\"></span><br><span class=\"line\">    ```</span><br><span class=\"line\">    #向前投掷(默认)垂直(默认)</span><br><span class=\"line\">    d(scrollable=True).fling()</span><br><span class=\"line\">    #垂直向后滚动</span><br><span class=\"line\">    d(scrollable=True).fling.vert.forward()</span><br><span class=\"line\">    #没搞懂</span><br><span class=\"line\">    d(scrollable=True).fling.vert.backward()</span><br><span class=\"line\">    #没搞懂</span><br><span class=\"line\">    d(scrollable=True).fling.horiz.toBeginning(max_swipes=1000)</span><br><span class=\"line\">    #滚动到结束</span><br><span class=\"line\">    d(scrollable=True).fling.toEnd()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    ```</span><br><span class=\"line\"></span><br><span class=\"line\">* == 未懂 == 在特定的 ui 对象上执行滚动 (可滚动)</span><br><span class=\"line\">可能的属性</span><br><span class=\"line\"></span><br><span class=\"line\">1.  `horiz`（水平） 或 `vert`（垂直）</span><br><span class=\"line\">2.  `forward`（向前）或`backward`（向后）或`toBeginning`（开始位置）或`toEnd`（结束位置）或 `to` 来</span><br><span class=\"line\"></span><br><span class=\"line\">    ```</span><br><span class=\"line\">    # 向前滚动(默认)垂直(默认)</span><br><span class=\"line\">    d(scrollable=True).scroll(steps=10)</span><br><span class=\"line\">    # 水平向前滚动</span><br><span class=\"line\">    d(scrollable=True).scroll.horiz.forward(steps=100)</span><br><span class=\"line\">    #垂直向后滚动</span><br><span class=\"line\">    d(scrollable=True).scroll.vert.backward()</span><br><span class=\"line\">    #滚动到开始水平</span><br><span class=\"line\">    d(scrollable=True).scroll.horiz.toBeginning(steps=100, max_swipes=1000)</span><br><span class=\"line\">    # 滚动到垂直结束</span><br><span class=\"line\">    d(scrollable=True).scroll.toEnd()</span><br><span class=\"line\">    #垂直向前滚动，直到出现特定的ui对象</span><br><span class=\"line\">    d(scrol)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    ```</span><br><span class=\"line\"></span><br><span class=\"line\">## [](#Watcher（-未懂-） &apos;Watcher（==未懂==）&apos;)Watcher（== 未懂 ==）</span><br><span class=\"line\"></span><br><span class=\"line\">当选择器没有找到匹配项时，可以注册 [watchers](http://developer.android.com/tools/help/uiautomator/UiWatcher.html) 来执行一些操作。</span><br><span class=\"line\"></span><br><span class=\"line\">- 注册 Watcher</span><br><span class=\"line\"></span><br><span class=\"line\">当选择器找不到匹配项时，uiautomator2 将运行所有注册的 watchers.</span><br><span class=\"line\">当条件匹配时单击目标</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“AUTO_FC_WHEN_ANR”).when(text=”ANR”).when(text=”Wait”) \\<br> .click(text=”Force Close”)</p>\n<h1 id=\"d-watcher-name-创建一个新的名为-watcher-的程序。\"><a href=\"#d-watcher-name-创建一个新的名为-watcher-的程序。\" class=\"headerlink\" title=\"d.watcher(name) ## 创建一个新的名为 watcher 的程序。\"></a>d.watcher(name) ## 创建一个新的名为 watcher 的程序。</h1><h1 id=\"when-condition-监视程序的用户选择条件。\"><a href=\"#when-condition-监视程序的用户选择条件。\" class=\"headerlink\" title=\".when(condition) ## 监视程序的用户选择条件。\"></a>.when(condition) ## 监视程序的用户选择条件。</h1><h1 id=\"click-target-对目标-UiSelector-执行单击操作\"><a href=\"#click-target-对目标-UiSelector-执行单击操作\" class=\"headerlink\" title=\".click(target) ## 对目标 UiSelector 执行单击操作\"></a>.click(target) ## 对目标 UiSelector 执行单击操作</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 还有一个关于点击的技巧。您可以不带参数地使用 click。</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“ALERT”).when(text=”OK”).click()</p>\n<h1 id=\"一样\"><a href=\"#一样\" class=\"headerlink\" title=\"一样\"></a>一样</h1><p>d.watcher(“ALERT”).when(text=”OK”).click(text=”OK”)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 当条件为真时按下键</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“AUTO_FC_WHEN_ANR”).when(text=”ANR”).when(text=”Wait”) \\<br> .press(“back”, “home”)</p>\n<h1 id=\"d-watcher-name-创建一个新的名为-watcher-的程序\"><a href=\"#d-watcher-name-创建一个新的名为-watcher-的程序\" class=\"headerlink\" title=\"d.watcher(name) ## 创建一个新的名为 watcher 的程序\"></a>d.watcher(name) ## 创建一个新的名为 watcher 的程序</h1><h1 id=\"when-condition-监视程序的用户选择条件\"><a href=\"#when-condition-监视程序的用户选择条件\" class=\"headerlink\" title=\".when(condition) ## 监视程序的用户选择条件\"></a>.when(condition) ## 监视程序的用户选择条件</h1><h1 id=\"press-…-按顺序按下一个键\"><a href=\"#press-…-按顺序按下一个键\" class=\"headerlink\" title=\".press(, …, .() ## 按顺序按下一个键\"></a>.press(<keyname>, …, <keyname>.() ## 按顺序按下一个键</keyname></keyname></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 检查指定的监视程序是否触发</span><br><span class=\"line\">一个监视程序被触发，这意味着运行了监视程序并匹配了它的所有条件。</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“watcher_name”).triggered</p>\n<h1 id=\"如果指定的监视程序被触发，则为-true，否则为-false\"><a href=\"#如果指定的监视程序被触发，则为-true，否则为-false\" class=\"headerlink\" title=\"如果指定的监视程序被触发，则为 true，否则为 false\"></a>如果指定的监视程序被触发，则为 true，否则为 false</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 删除指定的监视程序</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除观察者\"><a href=\"#删除观察者\" class=\"headerlink\" title=\"删除观察者\"></a>删除观察者</h1><p>d.watcher(“watcher_name”).remove()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 列出所有观察者</span><br></pre></td></tr></table></figure>\n<p>d.watchers #列出所有注册观察员的名单</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 检查任何触发的监视程序</span><br></pre></td></tr></table></figure>\n<p>d.watchers.triggered</p>\n<h1 id=\"在任何监视程序触发时为真\"><a href=\"#在任何监视程序触发时为真\" class=\"headerlink\" title=\"在任何监视程序触发时为真\"></a>在任何监视程序触发时为真</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 重置所有触发观察者</span><br></pre></td></tr></table></figure>\n<h1 id=\"重置所有触发的观察者，然后是-d-观察者。触发将为-false。\"><a href=\"#重置所有触发的观察者，然后是-d-观察者。触发将为-false。\" class=\"headerlink\" title=\"重置所有触发的观察者，然后是 d.观察者。触发将为 false。\"></a>重置所有触发的观察者，然后是 d.观察者。触发将为 false。</h1><p>d.watchers.reset()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 删除观察者</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除所有注册观察者\"><a href=\"#删除所有注册观察者\" class=\"headerlink\" title=\"删除所有注册观察者\"></a>删除所有注册观察者</h1><p>d.watchers.remove()</p>\n<h1 id=\"删除指定的监视程序，与-d-watcher-“watcher-name”-相同。\"><a href=\"#删除指定的监视程序，与-d-watcher-“watcher-name”-相同。\" class=\"headerlink\" title=\"删除指定的监视程序，与 d.watcher(“watcher_name”)相同。\"></a>删除指定的监视程序，与 d.watcher(“watcher_name”)相同。</h1><p>d.watchers.remove(“watcher_name”)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 强制运行所有的观察者</span><br></pre></td></tr></table></figure>\n<h1 id=\"强制运行所有注册的观察者\"><a href=\"#强制运行所有注册的观察者\" class=\"headerlink\" title=\"强制运行所有注册的观察者\"></a>强制运行所有注册的观察者</h1><p>d.watchers.run()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 当页面更新时运行所有观察者。</span><br><span class=\"line\">通常可以用来自动点击权限确认框，或者自动安装</span><br></pre></td></tr></table></figure>\n<p>d.watcher(“OK”).when(text=”OK”).click(text=”OK”)</p>\n<h1 id=\"启用自动触发监视程序\"><a href=\"#启用自动触发监视程序\" class=\"headerlink\" title=\"启用自动触发监视程序\"></a>启用自动触发监视程序</h1><p>d.watchers.watched = True</p>\n<h1 id=\"禁用自动触发监视程序\"><a href=\"#禁用自动触发监视程序\" class=\"headerlink\" title=\"禁用自动触发监视程序\"></a>禁用自动触发监视程序</h1><p>d.watchers.watched = False</p>\n<h1 id=\"获取当前触发器监视者状态\"><a href=\"#获取当前触发器监视者状态\" class=\"headerlink\" title=\"获取当前触发器监视者状态\"></a>获取当前触发器监视者状态</h1><p>assert d.watchers.watched == False</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">另外文档还是有很多没有写，推荐直接去看源码 [**init**.py](https://vic.kim/2019/05/20/UIAutomator2%E7%9A%84%E4%BD%BF%E7%94%A8/uiautomator2/__init__.py)</span><br><span class=\"line\"></span><br><span class=\"line\">## [](#全局设置 &apos;全局设置&apos;)全局设置</span><br></pre></td></tr></table></figure>\n<h1 id=\"设置每次-UI-点击后-1-5-秒的延迟\"><a href=\"#设置每次-UI-点击后-1-5-秒的延迟\" class=\"headerlink\" title=\"设置每次 UI 点击后 1.5 秒的延迟\"></a>设置每次 UI 点击后 1.5 秒的延迟</h1><p>d.click_post_delay = 1.5 # 默认没有延迟</p>\n<h1 id=\"设置默认元素等待超时-秒\"><a href=\"#设置默认元素等待超时-秒\" class=\"headerlink\" title=\"设置默认元素等待超时(秒)\"></a>设置默认元素等待超时(秒)</h1><p>d.wait_timeout = 30.0 # 默认的 20.0</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">UiAutomator 中的超时设置 (隐藏方法)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<blockquote>\n<p>d.jsonrpc.getConfigurator()<br>{‘actionAcknowledgmentTimeout’: 500,<br>‘keyInjectionDelay’: 0,<br>‘scrollAcknowledgmentTimeout’: 200,<br>‘waitForIdleTimeout’: 0,<br>‘waitForSelectorTimeout’: 0}</p>\n<p>d.jsonrpc.setConfigurator({“waitForIdleTimeout”: 100})<br>{‘actionAcknowledgmentTimeout’: 500,<br>‘keyInjectionDelay’: 0,<br>‘scrollAcknowledgmentTimeout’: 200,<br>‘waitForIdleTimeout’: 100,<br>‘waitForSelectorTimeout’: 0}</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">为了防止客户端程序响应超时，`waitForIdleTimeout`和`waitForSelectorTimeout`目前已改为`0`</span><br><span class=\"line\"></span><br><span class=\"line\">Refs: [Google uiautomator Configurator](https://developer.android.com/reference/android/support/test/uiautomator/Configurator)</span><br><span class=\"line\"></span><br><span class=\"line\">## [](#Input-method &apos;Input method&apos;)Input method</span><br><span class=\"line\"></span><br><span class=\"line\">这种方法通常用于不知道控件的情况下的输入。第一步需要切换输入法，然后发送 adb 广播命令，具体使用方法如下</span><br></pre></td></tr></table></figure>\n<p>d.set_fastinput_ime(True) # 切换成 FastInputIME 输入法<br>d.send_keys(“你好 123abcEFG”) # adb 广播输入<br>d.clear_text() # 清除输入框所有内容(Require android-uiautomator.apk version &gt;= 1.0.7)<br>d.set_fastinput_ime(False) # 切换成正常的输入法<br>d.send_action(“search”) # 模拟输入法的搜索</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">**send_action** 说明</span><br><span class=\"line\"></span><br><span class=\"line\">该函数可以使用的参数有 `go search send next done previous`</span><br><span class=\"line\"></span><br><span class=\"line\">_什么时候该使用这个函数呢？_</span><br><span class=\"line\"></span><br><span class=\"line\">有些时候在 EditText 中输入完内容之后，调用`press(&quot;search&quot;)` or `press(&quot;enter&quot;)`发现并没有什么反应。</span><br><span class=\"line\">这个时候就需要`send_action`函数了，这里用到了只有输入法才能用的 [IME_ACTION_CODE](https://developer.android.com/reference/android/view/inputmethod/EditorInfo)。</span><br><span class=\"line\">`send_action`先 broadcast 命令发送给输入法操作`IME_ACTION_CODE`，由输入法完成后续跟 EditText 的通信。（原理我不太清楚，有了解的，提 issue 告诉我)</span><br><span class=\"line\"></span><br><span class=\"line\">## [](#Toast &apos;Toast&apos;)Toast</span><br><span class=\"line\"></span><br><span class=\"line\">- 展示 Toast</span><br></pre></td></tr></table></figure>\n<p>d.toast.show(“Hello world”)<br>d.toast.show(“Hello world”, 1.0) # 显示为 1.0，默认为 1.0</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 获取 Toast</span><br></pre></td></tr></table></figure>\n<h1 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"[参数]\"></a>[参数]</h1><h1 id=\"5-0-最大等待超时。默认的-10-0\"><a href=\"#5-0-最大等待超时。默认的-10-0\" class=\"headerlink\" title=\"5.0: 最大等待超时。默认的 10.0\"></a>5.0: 最大等待超时。默认的 10.0</h1><h1 id=\"缓存时间-10-0s。如果最近-10s-已经出现-toast，则返回缓存-toast。默认-10-0-将来可能会有变化\"><a href=\"#缓存时间-10-0s。如果最近-10s-已经出现-toast，则返回缓存-toast。默认-10-0-将来可能会有变化\" class=\"headerlink\" title=\"缓存时间 10.0s。如果最近 10s 已经出现 toast，则返回缓存 toast。默认 10.0(将来可能会有变化)\"></a>缓存时间 10.0s。如果最近 10s 已经出现 toast，则返回缓存 toast。默认 10.0(将来可能会有变化)</h1><h1 id=\"如果最终没有-toast，返回”default-message”。默认没有\"><a href=\"#如果最终没有-toast，返回”default-message”。默认没有\" class=\"headerlink\" title=\"如果最终没有 toast，返回”default message”。默认没有\"></a>如果最终没有 toast，返回”default message”。默认没有</h1><p>d.toast.get_message(5.0, 10.0, “default message”)</p>\n<h1 id=\"常见的使用\"><a href=\"#常见的使用\" class=\"headerlink\" title=\"常见的使用\"></a>常见的使用</h1><p>assert “Short message” in d.toast.get_message(5.0, default=””)</p>\n<h1 id=\"清楚缓存-toast\"><a href=\"#清楚缓存-toast\" class=\"headerlink\" title=\"清楚缓存 toast\"></a>清楚缓存 toast</h1><p>d.toast.reset()</p>\n<h1 id=\"Now-d-toast-get-message-0-is-None\"><a href=\"#Now-d-toast-get-message-0-is-None\" class=\"headerlink\" title=\"Now d.toast.get_message(0) is None\"></a>Now d.toast.get_message(0) is None</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## [](#XPath &apos;XPath&apos;)XPath</span><br><span class=\"line\"></span><br><span class=\"line\">- 例如: 其中一个节点的内容</span><br></pre></td></tr></table></figure>\n<android.widget.textview index=\"2\" text=\"05:19\" resource-id=\"com.netease.cloudmusic:id/qf\" package=\"com.netease.cloudmusic\" content-desc checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrol bounds=\"[957,1602][1020,1636]\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- xpath 定位和使用方法</span><br><span class=\"line\">有些属性的名字有修改需要注意</span><br></pre></td></tr></table></figure>\n<p>description -&gt; content-desc<br>resourceId -&gt; resource-id</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 常见用法</span><br></pre></td></tr></table></figure>\n<h1 id=\"等待-10s\"><a href=\"#等待-10s\" class=\"headerlink\" title=\"等待 10s\"></a>等待 10s</h1><p>d.xpath(“//android.widget.TextView”).wait(10.0)</p>\n<h1 id=\"找到并单击\"><a href=\"#找到并单击\" class=\"headerlink\" title=\"找到并单击\"></a>找到并单击</h1><p>d.xpath(“//*[@content-desc=’分享’]”).click()</p>\n<h1 id=\"检查是否存在\"><a href=\"#检查是否存在\" class=\"headerlink\" title=\"检查是否存在\"></a>检查是否存在</h1><p>if d.xpath(“//android.widget.TextView[contains(@text, ‘Se’)]”).exists:<br>print(“exists”)</p>\n<h1 id=\"获取所有文本视图文本、属性和中心点\"><a href=\"#获取所有文本视图文本、属性和中心点\" class=\"headerlink\" title=\"获取所有文本视图文本、属性和中心点\"></a>获取所有文本视图文本、属性和中心点</h1><p>for elem in d.xpath(“//android.widget.TextView”).all():<br>print(“Text:”, elem.text) #获取视图文本<br>for elem in d.xpath(“//android.widget.TextView”).all():<br>print(“Attrib:”, elem.attrib) #获取属性和中心点 #返回: (100, 200)<br>for elem in d.xpath(“//android.widget.TextView”).all():<br>print(“Position:”, elem.center())</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 其他 XPath 常见用法</span><br></pre></td></tr></table></figure>\n<h1 id=\"所有元素\"><a href=\"#所有元素\" class=\"headerlink\" title=\"所有元素\"></a>所有元素</h1><p>//*</p>\n<h1 id=\"resource-id-包含-login-字符\"><a href=\"#resource-id-包含-login-字符\" class=\"headerlink\" title=\"resource-id 包含 login 字符\"></a>resource-id 包含 login 字符</h1><p>//*[contains(@resource-id, ‘login’)]</p>\n<h1 id=\"按钮包含账号或帐号\"><a href=\"#按钮包含账号或帐号\" class=\"headerlink\" title=\"按钮包含账号或帐号\"></a>按钮包含账号或帐号</h1><p>//android.widget.Button[contains(@text, ‘账号’) or contains(@text, ‘帐号’)]</p>\n<h1 id=\"所有-ImageView-中的第二个\"><a href=\"#所有-ImageView-中的第二个\" class=\"headerlink\" title=\"所有 ImageView 中的第二个\"></a>所有 ImageView 中的第二个</h1><p>(//android.widget.ImageView)[2]</p>\n<h1 id=\"所有-ImageView-中的最后一个\"><a href=\"#所有-ImageView-中的最后一个\" class=\"headerlink\" title=\"所有 ImageView 中的最后一个\"></a>所有 ImageView 中的最后一个</h1><p>(//android.widget.ImageView)[last()]</p>\n<h1 id=\"className-包含-ImageView\"><a href=\"#className-包含-ImageView\" class=\"headerlink\" title=\"className 包含 ImageView\"></a>className 包含 ImageView</h1><p>//*[contains(name(), “ImageView”)]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</android.widget.textview>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck1mzrdiv0001qifyju22mn4d","category_id":"ck1mzrdj00005qifyrxyter7t","_id":"ck1mzrdj5000cqifyq2u1w9rd"},{"post_id":"ck1mzrdiy0003qifyw9rqx2t3","category_id":"ck1mzrdj40009qifyey480o9q","_id":"ck1mzrdj6000fqifyswa6hx7v"},{"post_id":"ck1mzrdj20007qifyrj2vaxum","category_id":"ck1mzrdj6000eqifysc59qpij","_id":"ck1mzrdj7000kqifycmiisg6d"},{"post_id":"ck1mzrdj30008qifyqls6o790","category_id":"ck1mzrdj6000eqifysc59qpij","_id":"ck1mzrdj7000mqifyypzia7tp"}],"PostTag":[{"post_id":"ck1mzrdiv0001qifyju22mn4d","tag_id":"ck1mzrdj10006qifyt9ypfiyf","_id":"ck1mzrdj5000bqifyy98882ad"},{"post_id":"ck1mzrdiy0003qifyw9rqx2t3","tag_id":"ck1mzrdj10006qifyt9ypfiyf","_id":"ck1mzrdj6000iqifyyo91xl9c"},{"post_id":"ck1mzrdiy0003qifyw9rqx2t3","tag_id":"ck1mzrdj5000dqifyjdk1nbwe","_id":"ck1mzrdj7000jqifyjp870ttb"},{"post_id":"ck1mzrdj20007qifyrj2vaxum","tag_id":"ck1mzrdj6000gqifygf71k813","_id":"ck1mzrdj7000oqify0fumxojh"},{"post_id":"ck1mzrdj20007qifyrj2vaxum","tag_id":"ck1mzrdj7000lqifyfbzcau6x","_id":"ck1mzrdj7000pqify9rqwtduj"},{"post_id":"ck1mzrdj30008qifyqls6o790","tag_id":"ck1mzrdj6000gqifygf71k813","_id":"ck1mzrdj8000sqifyzzwesbce"},{"post_id":"ck1mzrdj30008qifyqls6o790","tag_id":"ck1mzrdj7000lqifyfbzcau6x","_id":"ck1mzrdj8000tqifyqseqpev2"},{"post_id":"ck1mzrdj30008qifyqls6o790","tag_id":"ck1mzrdj8000rqifyyewannhv","_id":"ck1mzrdj8000uqifyqox26ya6"}],"Tag":[{"name":"算法","_id":"ck1mzrdj10006qifyt9ypfiyf"},{"name":"Python","_id":"ck1mzrdj5000dqifyjdk1nbwe"},{"name":"iOS","_id":"ck1mzrdj6000gqifygf71k813"},{"name":"Android","_id":"ck1mzrdj7000lqifyfbzcau6x"},{"name":"python","_id":"ck1mzrdj8000rqifyyewannhv"}]}}